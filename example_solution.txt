Game public print join
Game public print join
Game public print join
One One lambda Apple
One One lambda Apple
in One more data
data public Over while
One One lambda Apple
One One lambda Apple
Banana
struct
accessible lambda out more
data public Over while
Banana
struct
struct
struct
struct
my lambda
only
struct
null
in Orange Orange class
in Orange Orange class
null
table
null
null
for
register Over
for
null
public register Apple
super only Over in
super only Over in
null
null
null
while only super for
while only super for
while only super for
Apple while
Strawberry more more
Strawberry more more
lambda lambda Apple
null
data
accessible One Over
private join
One
null
null
null
print Banana Strawberry table
Banana struct private only
Banana struct private only
private join
accessible One Over
private join
accessible One Over
null
accessible One Over
null
Banana struct private only
null
data Strawberry
only
null
accessible
was table data
was table data
One
One
One
One
super data table
One
out super
out super
null
null
null
null
out only
super my
public while
private
Game
for more Banana more
for more Banana more
private my for Banana
Banana only Banana join
for
Banana only Banana join
Strawberry data lambda
Strawberry data lambda
null
if
null
was in
null
null
function table Orange
Strawberry data lambda
Apple if
was in
was in
was in
data Banana public
if
if
more function
more function
for Apple
join super Orange
join
Apple if
null
for Apple print
for Apple print
for Apple print
Apple if
class while in accessible
for Apple print
class while in accessible
in
in
print public
if in super join
in
if in super join
if in super join
print public
in
in
null
print public
null
only accessible private
for if
print join
print join
null
null
null
null
null
null
Orange accessible
null
more Over in struct
Orange if
out register Orange somehow
accessible class
accessible class
out Over function function
null
if private out Strawberry
Over
accessible register
null
Over
Over
Over
null
null
null
null
null
null
null
null
null
null
null
table out
null
public join super
more
class while Over
private data One function
for
was somehow
private data One function
null
for
class while Over
null
struct class table
null
was
null
class while Over
class while Over
null
null
class while Over
out Strawberry
null
my lambda
out Strawberry
my lambda
print Banana in public
Game print Strawberry only
print Banana in public
print Banana in public
out Strawberry
struct somehow was Strawberry
lambda was
while out lambda
while out lambda
lambda
lambda
lambda
Game
data
Over register only
Orange in
if struct private
if struct private
if struct private
null
null
null
null
out accessible
null
Game accessible Over
join
join
Over for
join
Over for
in Game Banana lambda
null
accessible join while
null
null
null
Apple Banana table
more One lambda register
Apple Game in public
if
One Banana
if
more One lambda register
if
if
if my
One out print
null
One out print
null
if
null
null
out more Banana
One in my lambda
register private lambda register
out more Banana
register private lambda register
out more Banana
null
null
register private lambda register
register was if One
null
out more Banana
somehow public
out more Banana
out more Banana
table Game Over only
null
null
my super
my super
my super
my super
null
null
Orange private struct Orange
register table join
null
Orange private struct Orange
register table join
null
lambda if
struct
null
Orange private struct Orange
join public my table
somehow public super private
Orange private struct Orange
join public my table
was private while
register table join
null
join public my table
null
somehow my
null
Orange private struct Orange
out
super Orange class
class class
class class
class class
my
class class
table
null
class private in in
if
table
class One
struct out accessible my
null
class One
class One
if more Apple
struct out accessible my
struct out accessible my
class One
if more Apple
null
register super
was
if more Apple
for
null
if more Apple
for
somehow register
Strawberry join somehow struct
null
for more function out
for more function out
null
null
Over
One Game public data
Over
while if in class
somehow register
Over
if
Over
class
null
if
null
Over
was
was
Over
print
Over
Over
Over
null
print
Over
Over
Over
Over
Over
null
One somehow
null
null
null
if if
null
null
if if
if if
super private
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
Apple One Apple struct
struct struct
somehow for join
accessible in print One
in
null
somehow for join
accessible in print One
accessible in print One
for only print
for only print
for only print
struct
null
Apple
null
private class
somehow more function join
Orange join
super Game
Over One register
struct
null
if
data private
super One
private class
my Strawberry data join
Banana while
my Strawberry data join
struct Game
null
null
null
null
Strawberry Apple
Strawberry Apple
register out public
out my
register out public
register out public
register out public
out my
register out public
in somehow class
in somehow class
null
null
register out public
if only
public public Banana register
public public Banana register
null
function Strawberry only
class
null
table function class
function struct join
null
One super somehow for
null
lambda One data
null
register my
accessible Over table
Over
Over
private One Banana
private One Banana
private One Banana
private One Banana
null
data data
null
null
null
null
null
class accessible more
class accessible more
class accessible more
class accessible more
somehow Over lambda class
somehow Over lambda class
somehow Over lambda class
somehow Over lambda class
null
null
null
null
null
null
null
null
struct
struct
null
struct
struct
null
null
null
null
null
null
Game accessible
Game more Over
Apple public table only
Apple public table only
null
struct table struct table
was
struct Game class
null
somehow
null
null
lambda only register my
print somehow if data
super function table Banana
One Game join class
private print was
for private Banana
for private Banana
Orange function data class
join Banana One One
Orange function data class
null
null
null
null
One more register data
public struct out Game
One more register data
table out
One more register data
register Game somehow struct
null
class
in table
in table
in table
class
in table
data Over for function
null
data Over for function
null
class
null
in table
class
class print
class print
in table
null
null
struct
struct
struct
null
in table
null
in table
more One in
function private struct
null
function private struct
Orange
null
Orange
null
data
while Apple
while Apple
while Apple
more Strawberry while Orange
more Strawberry while Orange
while Apple
for was super
One
private Orange
for was super
in join in out
for was super
was private
for was super
data class out Orange
One
was private
data class out Orange
null
null
private public struct private
private public struct private
private public struct private
private public struct private
lambda Over
private public struct private
class lambda in
class lambda in
null
null
null
null
null
null
null
null
null
Orange accessible
null
null
Banana
null
null
null
data for
null
only
null
struct
while private Orange Orange
public Apple while private
null
for
null
for
while private Orange Orange
my Orange
my Orange
null
print
public Apple while private
null
join Orange
my Orange
null
null
super Strawberry lambda somehow
null
my Orange
null
print
lambda data accessible print
super Strawberry lambda somehow
lambda data accessible print
for
for
public only Orange while
Over somehow Banana table
in
function data public
lambda data accessible print
in
private
for
Over only Game
for
private
in
Over somehow Banana table
accessible public my
struct lambda function
function join function in
null
Game more One
Game more One
null
null
print
print in only print
while accessible
Over
Strawberry more only Strawberry
null
more struct
more struct
while accessible
more struct
accessible public my
Over
print in only print
Banana while Apple
if
my somehow
null
Banana while Apple
if
if
public for lambda
Game more One
null
my somehow
Over
my somehow
Over Over
my my was Over
Game public
null
null
my my was Over
table in
null
Game public
public for lambda
my my was Over
table in
out
public for lambda
my my was Over
null
in function accessible
null
null
my my was Over
in function accessible
in function accessible
in function accessible
class out super data
in function accessible
in
class out super data
null
in function accessible
Over
class
null
Over
register function for only
join only
my struct
while in
while in
while in
register function for only
print if join
out
null
print if join
in Strawberry
null
null
null
somehow class
my
was accessible
was accessible
somehow class
somehow class
Apple
null
print if join
in Strawberry
in Strawberry
null
null
Apple for Over super
print if join
null
print if join
null
print if join
join table
data join
Apple for Over super
my
my
null
function data One
public if
while somehow table
null
Apple register register table
null
function data One
data lambda
function data One
Orange function
Orange function
Orange function
null
Orange function
Orange function
Orange function
Orange function
Orange function
null
null
Game
Game
public somehow One super
Over One
Over One
null
if Over my
if Over my
if Over my
data class somehow only
somehow for data
struct print data super
null
data Game class table
private Apple struct Strawberry
private Apple struct Strawberry
null
null
null
Apple
null
Banana
only
Banana
table
join super Banana Banana
table
table
table
class
One Game
Game more
null
public
public
if Orange only One
if Orange only One
if Orange only One
null
was
was
was
while was
while was
in if somehow accessible
was
null
was
Orange my lambda One
was
in if somehow accessible
data accessible Banana
class Over register Game
data accessible Banana
null
null
struct table One
private was
my only
my only
was data Banana
was data Banana
null
null
null
was struct
was struct
null
null
null
register Apple Apple accessible
null
class accessible Strawberry
only super struct
null
null
table struct for lambda
table struct for lambda
null
data super
data super
null
table struct for lambda
table struct for lambda
null
null
Orange function my
function Strawberry table
print
print
null
accessible lambda only
print
null
print
null
print
print function Over
print function Over
print function Over
out struct
null
super out function for
One One join Banana
One One join Banana
One One join Banana
One One join Banana
public
was class
public
was class
was class
register my lambda
was class
public
null
null
out register Banana
somehow
somehow
only Orange data register
for class
null
only Orange data register
in
Strawberry join while super
more in
data function
Strawberry join while super
null
null
null
Strawberry print
null
null
private for for
more function
null
null
lambda only out
only function for
null
was One struct
was One struct
my register Strawberry super
my register Strawberry super
data function
Game
null
private lambda Orange
register class
null
function function
null
somehow function
public
register class
null
null
null
somehow function
null
my print Apple
null
my print Apple
if only while Apple
function if
Banana
function if
null
null
null
function if
private private
for
Banana Orange class
null
null
class for
private private
Banana Orange class
private private
private private
Banana Orange class
null
null
Banana Orange class
null
in super
in super
Banana for
Banana for
Banana for
Banana for
Banana for
null
null
One join super
null
One join super
null
null
null
table out
null
null
null
null
null
null
null
null
null
null
null
if
Banana
Banana
Banana
table if private
table if private
only out Orange private
null
class Orange
class Orange
null
somehow lambda
somehow lambda
somehow lambda
if my Apple Over
null
while Over Apple more
while Over Apple more
print
null
while Over Apple more
super
struct data
null
more struct
class
class
if class
null
null
null
null
null
null
Strawberry
print somehow Game register
in struct
null
null
null
for
lambda super struct Over
lambda super struct Over
null
for
for
null
somehow Strawberry more in
somehow Strawberry more in
somehow Strawberry more in
somehow Strawberry more in
null
table accessible join
Apple Orange Over if
super data
null
Apple Orange Over if
One public register while
One
null
One
One
more Game function print
more Game function print
null
super was private
Banana
Banana
super was private
Banana
null
accessible Apple
struct
out
null
null
null
null
null
null
Game lambda table
Game lambda table
Game lambda table
One for Game
if Game print
class class somehow
null
class register Orange was
if Game print
class register Orange was
null
join join
super table more
null
null
while Over
null
Orange
Orange
join my
Orange
null
Orange
null
print
register
public Game print lambda
public Game print lambda
Orange
Apple Strawberry Banana
null
struct only
join for
null
join my
Over
Apple while if data
Strawberry accessible super Banana
public my
my in
register
join my
null
my was was super
register
accessible
join join
null
Over
register
Over
somehow struct One
Over
Over
function only
Over
null
Over Game
null
null
register
Game Apple somehow Strawberry
table my join
Over
in struct accessible super
Over Game
register
print function lambda lambda
my
register out Game
in struct accessible super
Banana Game data
null
Over Game
somehow
Game data was
somehow
null
null
struct
null
null
null
null
null
null
null
null
null
null
null
out Orange One Over
out Orange One Over
function
function
null
null
table my somehow
null
table my somehow
null
null
lambda public in while
Apple
Apple
accessible
more Orange private
class more lambda table
more Orange private
only for for
only for for
only for for
only for for
null
only for for
more Orange private
for if somehow
Game struct Banana data
struct Orange public struct
struct Orange public struct
null
Game Orange
out was
struct Orange public struct
null
null
null
Game struct Banana data
null
super out
register accessible more
null
null
Apple more class
while Apple if was
function for super while
function for super while
function for super while
while Apple if was
function for super while
function for super while
while Apple if was
while Apple if was
Orange print join
null
Orange print join
function for super while
Orange print join
Orange print join
was class class private
null
my for for Banana
function for super while
function for super while
function more lambda
function more lambda
null
null
function for super while
null
out
data super super
function more lambda
data super super
One Game my
One Game my
null
null
data super super
Game
data super super
null
data super super
only Apple
more if join Over
was
private struct somehow Strawberry
function function register
super Game out
super Game out
super Game out
super Game out
super Game out
null
class out Orange
public more data Over
Banana my
null
Banana my
public more data Over
Banana my
table Apple my
null
null
null
null
for register super Over
more
One join
One join
private accessible lambda
null
One join
struct
One join
data lambda lambda table
somehow out Over super
Apple
null
join register accessible
null
join register accessible
table public print
table in Strawberry print
null
private only
join register accessible
null
join register accessible
null
Banana for public out
private only
struct
more register class for
for
more register class for
register more private private
struct
while accessible print data
somehow out Over super
somehow out Over super
for
register more private private
while accessible print data
while accessible print data
while accessible print data
null
null
lambda
somehow Strawberry only
null
join register accessible
null
null
One Game Over
null
somehow Strawberry only
data lambda lambda table
accessible
join register accessible
null
null
One
somehow Strawberry only
my
for
table public print
Banana print
data somehow
while accessible print data
while accessible print data
out public print
accessible
for
data somehow
One
in data data
class Orange
null
accessible
null
data somehow
null
null
Orange Strawberry Banana more
out super
for Banana private
Orange Strawberry Banana more
data
while accessible print data
data
while function register
while function register
lambda Apple while Banana
while accessible print data
null
was join
Orange Strawberry Banana more
null
Orange Strawberry register
null
Orange Strawberry register
print
more out lambda
Game for for Banana
while function register
data
was join
Banana Over class print
null
null
while function register
null
class lambda accessible if
in my
Orange
null
null
for Banana private
more print only
null
lambda only was register
was was Strawberry
print for
private
null
Banana Banana register Apple
Banana if super struct
more print only
in
lambda while in
lambda while in
accessible
accessible
Orange Strawberry Banana more
Orange somehow
accessible
struct Apple if for
only super Strawberry
accessible
private
table One
Banana
accessible
was register public was
Apple Apple my
my in
null
table One
table One
lambda while
Over data
if
lambda while
private Apple
if
null
null
if
only
null
null
only
null
was private
only
only
null
null
was
was
null
Apple lambda
table
table
Apple lambda
Apple lambda
null
null
null
null
null
more in One table
null
null
null
null
print data somehow
print data somehow
print data somehow
null
null
print data somehow
data
null
data
register in super only
Game out
Game out
Game out
somehow print somehow
somehow print somehow
null
somehow print somehow
null
null
data
data
null
while if
while if
join my print join
join my print join
join my print join
join my print join
register function
null
somehow Strawberry
null
somehow Strawberry
null
null
table out
in
in
if
if
if
One function
print Orange join Strawberry
One function
One function
One function
One function
function
print Orange join Strawberry
out struct
One function
lambda table accessible
function while
print Orange join Strawberry
function while
function while
print
data only was
function while
table public struct super
null
Over my Game
only only class
null
Over my Game
Over my Game
Over my Game
null
null
null
null
null
null
super my while
null
null
null
null
super was
super was
super was
super was
super was
super was
null
null
null
null
null
null
null
join super while class
join super while class
Game join
join super while class
only my while
null
join super while class
join super while class
null
Game join
Game join
data out
only my while
only my while
only my while
null
accessible somehow was
while accessible if private
data if Banana
data if Banana
data if Banana
data if Banana
data if Banana
Banana function for One
print table only
null
Banana function for One
while was
null
join join
somehow super
join join
Banana function for One
was print my
while was
Banana function for One
was print my
in
in
was print my
was Orange
was Orange
was Orange
was print my
null
null
somehow accessible
somehow accessible
null
null
null
somehow accessible
lambda public Game
somehow accessible
function was
lambda public Game
lambda public Game
lambda public Game
lambda public Game
null
register
somehow for
somehow for
lambda public Game
in lambda One
somehow for
my super One
somehow for
print
my super One
struct Apple Game more
null
struct Apple Game more
struct Apple Game more
null
print
null
null
if
was out struct
was out struct
Over Orange Game
was out struct
was out struct
data public One One
null
null
my
my
if lambda Over
struct Orange while
my
somehow Strawberry in somehow
Game Over private my
Game Over private my
null
null
struct Apple my while
null
One Over
null
Banana struct more register
super print Game
for Banana print lambda
null
Over accessible
null
register Game was for
for Banana print lambda
for Banana print lambda
Strawberry
Strawberry
null
struct Orange
function was class
struct Orange
accessible
accessible
null
Banana One Over
function register Banana
Banana One Over
super out
super out
somehow Orange
Apple table
Apple table
join
join
join table was
class print
public class was
class print
null
class print
public class was
while for
while table
while table
out
null
null
null
null
while Banana print
Orange accessible Over function
Orange accessible Over function
Over out somehow
null
Orange function Strawberry in
Orange function Strawberry in
null
public was data class
null
null
join
Apple accessible Apple
null
null
lambda
lambda
register table more
lambda
register table more
more accessible register
register my register One
register my register One
Apple accessible Apple
null
register my register One
Apple accessible Apple
register table more
null
null
null
super in super
null
lambda out out
super in super
accessible
was was
null
accessible super
register out class accessible
accessible super
lambda out out
Apple print
Strawberry join One somehow
Orange
accessible super
Orange
One only
super in super
only for Over
Over
function class was
super in super
if
null
table
accessible
accessible
Strawberry join One somehow
null
null
null
data private Game
Orange
Over
Orange
null
Over
null
print if public Game
in only register print
null
Orange
register
only Banana was
if in
Orange
function class was
if
null
Strawberry
Banana private
Strawberry
table lambda class
table lambda class
Game
accessible
Banana private
null
Banana private
Over
Over
somehow
Strawberry One Strawberry somehow
null
private
Strawberry
table lambda class
data
null
out
out
table register Over register
Game
Strawberry more join super
was super out while
null
was super out while
null
accessible
Strawberry more join super
out
null
register my somehow
register my somehow
out
data
data
data
null
Strawberry public Orange class
null
register my somehow
null
null
null
null
only public
register my somehow
Strawberry public Orange class
super class if lambda
super class if lambda
register my somehow
null
Strawberry One Strawberry somehow
register my somehow
function in if super
null
function in if super
null
accessible
accessible
only Over for
for out table
null
for out table
out
out
private
data private
class Game join
null
null
private
my my One
super Banana
super Banana
my my One
private
null
print
in lambda accessible register
function more
my my One
function more
function more
in lambda accessible register
if print class
null
function more
my lambda
private
null
join table
class table Banana Game
in lambda accessible register
my lambda
in
my my One
Over only
null
class table Banana Game
my lambda
my lambda
lambda
in
null
null
null
class table Banana Game
null
lambda
null
while
null
class table Banana Game
function for
Game out in
null
Strawberry only Apple more
One was
out super
function for
Over was
Strawberry only Apple more
One
private class join
private class join
null
private class join
One
Game out in
struct
struct
public
only only function struct
Over was
struct
null
join Apple accessible more
join Orange out more
only only function struct
join Apple accessible more
null
null
join Orange out more
join Orange out more
join Orange out more
One somehow
null
struct only function Strawberry
if out
out super
Game table out print
null
struct only function Strawberry
public
if out
if out
struct only function Strawberry
if out
struct
struct only function Strawberry
Strawberry Game
Game somehow register
struct only function Strawberry
struct only function Strawberry
struct
class class class out
struct only function Strawberry
null
class class class out
class class class out
more lambda Game
class class class out
out register lambda
null
for
struct only function Strawberry
null
struct only function Strawberry
struct only function Strawberry
null
null
Apple
private if
if Game
struct
out accessible function
Banana
struct
struct
if public somehow
in was function super
public somehow was print
struct
struct
struct
if public somehow
in was function super
null
while Banana was only
null
in was function super
null
more public
null
for lambda public
while was Banana table
while was Banana table
for lambda public
null
while was Banana table
for lambda public
Over my
Game register out Over
while
super function
while was Banana table
null
null
null
null
more only if
data
private accessible public
private accessible public
join
null
function while out Apple
function while out Apple
more only while struct
null
data
was
null
more only while struct
more only while struct
more only while struct
private
null
null
null
out somehow
function while out Apple
more only while struct
null
One out Strawberry print
One out Strawberry print
somehow lambda
null
function while out Apple
null
function while out Apple
Game
Game
function while out Apple
table print
Game
my was Over
my was Over
public public if
null
my Banana in
public public if
Game
null
data out class more
super if
register
null
data out class more
Game
super if
Game
null
super if
null
null
null
function print only
function print only
function print only
table lambda
table lambda
null
null
class while data
null
Strawberry
Strawberry
null
Banana in One
was super Orange out
Banana in One
somehow
somehow
print
was super Orange out
private
null
Apple struct Banana my
null
more struct function only
table Orange Strawberry
if Over Orange
Apple struct Banana my
null
if for if Orange
null
in table in
was data Strawberry out
if for if Orange
class join register
null
null
while Over Banana
in table in
while Over Banana
super Orange for function
One somehow
more
Banana class table Banana
public
Banana class table Banana
struct struct Banana
class
register public
class
class
null
out
null
null
null
null
null
Banana
join somehow only was
join somehow only was
join somehow only was
join somehow only was
join somehow only was
join public
join public
join public
join public
join public
join public
function class more
join public
null
function class more
null
function class more
null
join public
join public
super
Game accessible
super in out
super
null
data
null
super function
somehow in super
null
null
somehow in super
super function
somehow in super
super
null
somehow in super
struct Apple super
null
more public struct
class super data Apple
register while struct print
more public struct
register function Banana
null
null
Banana print lambda
data
Banana print lambda
struct for private more
null
Banana data join
more accessible print was
struct somehow super if
null
more accessible print was
Orange super Over in
Orange super Over in
register function Banana
struct for private more
null
was class my Banana
null
for class
was function
was function
null
One if
null
was function
One if
null
out
null
class
null
super Apple
register function Banana
null
for
was class my Banana
was class my Banana
One if
One if
was accessible join
only lambda was lambda
was accessible join
more table
null
was accessible join
null
null
null
null
null
if class struct Apple
Apple for
null
Apple for
Apple for
One class private
if
null
One class private
null
function
accessible
Apple for
function
if class struct Apple
Orange
if class struct Apple
function
out Game Strawberry Orange
null
function
print Strawberry
One class private
One class private
out Game Strawberry Orange
function
function
out Game Strawberry Orange
if One register
function
null
print public
join data Banana while
out
null
out
if class struct Apple
Game private somehow
class if struct out
if class struct Apple
out
out
out
null
out
null
if class struct Apple
data Over join class
out
null
null
function
out
function
null
One One for table
null
null
lambda Over
register if
null
Banana
lambda Over
super
super
null
Banana
Banana
only
null
function data
One public print Over
null
null
One public print Over
null
One public print Over
for more
null
null
null
register Strawberry function
null
somehow register for private
class
lambda Over was
null
in for was private
somehow register for private
null
in for was private
in for was private
null
in more
in for was private
null
in for was private
class super class accessible
function for
while struct while
class super class accessible
function function struct Banana
class super class accessible
null
while struct while
null
null
function data
super Orange struct
null
function data
function data
if out struct public
function data
function data
null
Orange struct
Strawberry lambda Apple
Strawberry lambda Apple
null
null
null
out
out
null
was join Orange Over
null
function
function
function
null
if
null
lambda
private Game
class
public for only Game
public for only Game
Apple struct table somehow
null
null
null
null
null
somehow register more lambda
null
null
public
public
Game print in
null
null
null
only for
Over more Orange
only for
Over more Orange
data
function
null
Banana out only private
somehow
null
struct Over
struct Over
null
print Banana
class
function
print Banana
null
private join
in Banana function private
Game register private
Game register private
Strawberry
Strawberry
for
null
for
for
print
Strawberry
null
Over accessible
null
Strawberry
Strawberry
if was
if was
if was
while join more Orange
for only
null
null
null
null
null
null
null
null
for class for only
for class for only
for class for only
function while accessible
null
null
null
null
null
for data Banana
for data Banana
null
null
lambda join
lambda join
null
my class Banana
Apple
public Orange
lambda my
lambda my
lambda my
null
super Game Strawberry lambda
my accessible was accessible
more
null
Apple function
null
Apple function
out my
more
Banana
null
out my
super register
super register
data
for Game somehow data
data Apple
for Game somehow data
for Game somehow data
One
One
for Game somehow data
null
print One
null
data Apple
for Game somehow data
print One
null
somehow
for was Over more
Banana
print One
somehow
only table
Banana
Game
Game
print One
null
Game
null
lambda
null
Game
register out Game
Game
Game
Orange while Strawberry Banana
Banana class
null
Banana class
table
table was if out
null
null
table was if out
was Over
my out
table was if out
null
function
null
was Over
Banana class
private for
Banana class
struct
null
Over
Banana class
Banana class
for private join
Banana class
super accessible function public
accessible
join class
join class
accessible
more Game
join class
super
more Game
class Banana print
null
class Banana print
out more table somehow
accessible
null
null
null
null
null
null
Strawberry if Strawberry while
Strawberry if Strawberry while
somehow Game for Over
null
null
somehow Game for Over
Orange One while lambda
struct
null
null
function public my lambda
null
private join Strawberry Game
struct
function public my lambda
join Game
struct
function public my lambda
null
Orange was
private join Strawberry Game
private join Strawberry Game
null
join Game
while for super print
Orange Game
private join Strawberry Game
in more
null
null
somehow
private
private
for private Strawberry Game
private
for private Strawberry Game
for private Strawberry Game
for private Strawberry Game
null
for private Strawberry Game
null
struct was join Game
null
null
for table class accessible
null
for table class accessible
null
Over Apple function
null
in private join
in private join
somehow
private
struct Apple
if
null
null
class only register only
null
function
private public
Orange
Orange
Orange
out join table my
function join lambda
null
null
null
private Game
null
print
private Game
null
null
null
somehow
somehow
null
somehow
somehow
somehow
somehow
null
null
null
if
One struct
One struct
null
null
Banana print
One lambda somehow Apple
One struct
Orange
somehow Over Banana table
Orange
null
print
more while
print join
print join
print join
print join
my super print
my Orange super
my super print
only if
only if
my Orange super
null
null
my Orange super
Orange my table
Over super only print
join Banana
null
if Orange Banana One
private
private
null
private
join
null
private Over join
Game only
in join class somehow
in join class somehow
in join class somehow
in join class somehow
out class
null
null
null
data
print
print
super join struct
struct in
struct in
super join struct
struct in
struct in
while Strawberry my
while Strawberry my
Banana struct
while Strawberry my
Banana struct
while Strawberry my
null
Over out
null
null
table in private
function Banana data
print
Orange Banana for in
public Game
function Banana data
for more private
only One
table in private
null
table in private
in
super Over
null
super Over
null
somehow
super Over
null
private somehow somehow super
was my
class function
null
super Over
Apple
super accessible Strawberry data
super Over
class function
Banana table out
class function
null
in lambda
Over
public function
Apple
One was function was
in lambda
Apple
Apple
null
Apple
One was function was
Apple
public function
more if was table
private
public function
if was
One was function was
while super print private
private more private
private
public function
somehow accessible public class
null
somehow accessible public class
public function
public function
public function
null
Strawberry One
class if data
out more
Strawberry One
out more
Strawberry One
Strawberry One
if somehow class
if somehow class
Strawberry One
struct
Apple Over
null
Apple super
Apple struct only function
private print register super
null
public join only public
Apple struct only function
Banana
Banana
null
public join only public
only my
while
null
public join only public
public join only public
if
null
public public
class table Apple public
struct if
if
struct if
null
null
public join only public
public public
public join only public
null
public public
out was
null
table
table
table
One join class struct
my Over Apple
struct super out join
while struct somehow accessible
table
null
null
print super
null
Strawberry
Strawberry
null
print super
print super
Strawberry out more
my
table
null
Game only accessible somehow
struct class my
table
private while public
out
private while public
class join
class join
private while public
somehow somehow for Over
null
somehow somehow for Over
join public register
class join
accessible
somehow somehow for Over
accessible
accessible
null
null
null
public table data while
One
null
while
public table data while
One
null
Orange function join
null
One print
null
Orange function join
null
function Apple for
null
null
while join private
somehow function Apple
null
accessible class Game
null
null
accessible class Game
null
null
register One Banana
null
somehow function Apple
One data print Game
Game Banana
register One Banana
null
private out was
data class Orange
Orange super for out
Orange super for out
Orange super for out
null
Orange super for out
null
table more super
null
struct
null
out print join
Banana join Over join
Banana join Over join
more public
public private
accessible class Over
null
null
Apple Orange if
null
Apple Orange if
Apple Orange if
only table was table
public private
public private
more public
public private
was super Game somehow
for somehow for
null
Game
more public
more public
Game
null
One
Apple
for Strawberry my function
One One Game
null
Game Orange for
lambda out
null
table
Game Orange for
data data One
null
Game Orange for
null
Game Orange for
One One Game
lambda out
Game Orange for
class was
Game Orange for
Apple accessible
more out was
my class in
Apple accessible
null
null
null
class was
Apple accessible
class was
Apple accessible
null
Apple accessible
null
super
only
class was
only
my class in
Apple accessible
private if for Over
accessible accessible
null
super
private if for Over
null
lambda more function
join
super
join
Apple accessible
function
function
more lambda
join
join
function
function
more lambda
One
more lambda
accessible only for data
accessible only for data
null
null
my
my
my
my
null
while was table more
while was table more
while was table more
null
null
null
class struct Strawberry
class struct Strawberry
class print for while
print
print
class print for while
class print for while
struct class
if register One super
more super Orange
if
if register One super
lambda table
if register One super
if
null
null
data only
null
null
Over Orange
Over Orange
null
accessible more
out print Banana
null
out print Banana
null
join super
public Strawberry Over in
null
out private Strawberry was
out public
accessible class join if
data print
null
only function
struct
null
public Orange class
null
Banana print data join
public Orange class
out
Banana print data join
Banana print data join
null
null
Banana print data join
table class super print
Banana print data join
Banana print data join
Banana print data join
function Orange Orange out
more struct print table
Banana print data join
Banana print data join
Banana print data join
null
Strawberry more was
null
null
function Orange Orange out
Orange
function Orange Orange out
only more
null
function Orange Orange out
for Over
table function
more
out private
somehow data somehow join
more
more
more struct print table
out private
only more
somehow data somehow join
table Apple
if data Game
if somehow super my
null
table Apple
Game
Banana more
out public more
Orange
null
struct Over somehow private
out public more
only public in
null
null
null
in Game Banana Over
in print my out
while while lambda print
null
while only Strawberry in
null
null
in
in in
in
public struct Apple public
in print my out
while
out public data lambda
public struct Apple public
in print my out
null
Orange table
public struct Apple public
in in
Orange table
table Apple One accessible
function
struct print
super Apple data
in print my out
null
out accessible public
null
function
if accessible
if join somehow
if accessible
if join somehow
join while
null
join while
if join somehow
more Over
Orange Orange out One
if accessible
function
null
null
join in lambda
more Over
Orange Orange out One
Orange super data somehow
Game
Orange Orange out One
for my
function
if accessible
null
if accessible
Banana out Banana
null
private somehow lambda
join while
private lambda Banana
private somehow lambda
Banana out Banana
while public
null
null
was print public public
somehow Orange struct out
null
while public
table
table
null
null
out if accessible join
while public
null
if accessible
Over class class
lambda
accessible Game class
Banana data Banana
lambda
Banana data Banana
out if accessible join
null
super public register somehow
lambda for
out if accessible join
Over class class
lambda
null
lambda
Banana data Banana
only Banana for
table
out if accessible join
table
null
table
Banana
public
table
Banana data Banana
null
null
super public register somehow
super public register somehow
null
super
null
null
Banana
in table
somehow
join in Apple somehow
null
table
Over class class
Banana data Banana
print function super
if in only struct
class super
null
null
if in only struct
more for Orange
accessible more private out
super public register somehow
class super
Apple
join in Apple somehow
null
class super
was in
if in only struct
class super
if in only struct
null
null
null
null
print function super
print function super
null
Over somehow if
null
join in Apple somehow
if in only struct
Game my my print
class
if in only struct
null
my private
join in Apple somehow
Game my my print
join in Apple somehow
print function super
accessible One more public
Banana lambda
null
my private
Banana
One public
Game
Banana
null
somehow somehow join One
Banana
Orange private Game
if in only struct
null
super accessible was join
data table
out Strawberry
Game my my print
Banana
if Orange One print
Game my my print
print function super
my print One One
Game my my print
null
print function super
null
class
null
null
Game accessible struct
One
Game accessible struct
null
null
was join in
Orange
null
null
for print more somehow
Orange
null
null
more Game
One
Game accessible struct
register data
null
register data
Over struct table data
while print
Game accessible struct
register data
for if join
null
null
One
somehow
null
for if join
null
accessible accessible super
One
register data
null
register data
register data
more Banana
somehow
null
struct table more
null
accessible accessible super
null
Banana register private was
more Banana
data was class
One
Orange Game more private
Banana register private was
somehow
while
out class function join
somehow
null
Orange Game more private
Orange Game more private
Orange Game more private
register data
null
somehow
join private while
struct table more
data was class
data was class
for register out
accessible accessible super
struct table more
accessible accessible super
struct table more
null
null
accessible accessible super
One
register lambda super table
null
null
accessible accessible super
while
join public
register data
Banana One
public
null
null
accessible accessible super
register class private
public in somehow
null
super
public in somehow
super
accessible accessible super
Game only out
accessible accessible super
null
null
null
public in somehow
more Banana
join Banana if
public in somehow
public in somehow
accessible accessible super
null
public in somehow
lambda more Strawberry
register in
class
register in
function was table register
only Apple somehow
in
public in somehow
Strawberry
Strawberry
function
accessible accessible super
accessible accessible super
Apple join print
null
null
was out One print
null
null
register table
super
private
null
null
null
null
null
null
null
null
null
Strawberry print table only
Strawberry print table only
null
One lambda Game
null
One lambda Game
One lambda Game
One lambda Game
null
null
null
null
null
private data
accessible super Game was
Over somehow Game somehow
null
Strawberry
my was
was only while
null
null
null
in One Strawberry class
register if Strawberry
null
null
null
Orange data Apple more
super Over private somehow
null
Banana super
null
null
null
null
join table join
more struct Strawberry
more struct Strawberry
more struct Strawberry
null
data table
null
somehow private in lambda
somehow private in lambda
Banana accessible
somehow private in lambda
somehow private in lambda
struct super while
join Strawberry One somehow
null
struct super while
super more data Banana
null
null
Banana
join
null
null
null
null
register
register
register
register
register
for print public
null
Game class function data
struct accessible table Orange
somehow Strawberry
Strawberry data accessible for
Strawberry data accessible for
my Banana Banana
my Banana Banana
Game class function data
null
my Banana Banana
class if while
my Banana Banana
my Banana Banana
Strawberry print join if
Strawberry print join if
null
Strawberry print join if
null
null
only table if
table Orange
in
out join One private
Game
Strawberry print join if
only table if
for
function struct super
Strawberry print join if
Strawberry print join if
out join One private
for
only table if
Over accessible One
out join One private
null
Over accessible One
Apple if out if
lambda Strawberry
for
null
Over only
null
Apple if out if
Over accessible One
lambda Strawberry
data
Over only
lambda
null
accessible
data private while if
out out class
accessible
data
data
null
null
Strawberry function only
null
struct Banana Banana for
accessible
null
my private function
null
function private public private
function private public private
out out class
while public Banana print
while public Banana print
only
null
lambda One
my private if
lambda One
null
null
out out class
null
null
table Over
public in private
null
null
struct for super
my private if
Strawberry Orange somehow data
table Over
Strawberry Orange somehow data
Banana more
null
out out class
my private if
my private if
Banana accessible Orange
super while only was
null
in out
register Orange
Banana accessible Orange
Banana accessible Orange
was Orange
Game One Orange Banana
public lambda in somehow
private only super my
register Orange
null
lambda register
public lambda in somehow
if out Strawberry Orange
null
null
super Apple was
register join
only
more was
join One struct
public lambda in somehow
my private somehow
more was
was public Apple
only
null
register join
my private somehow
register join
private
register join
join One struct
only
more
private
Over only Game
Over was register
public lambda in somehow
null
One data out Orange
One data out Orange
public lambda in somehow
One data out Orange
Over only Game
null
join One struct
Over only Game
join One struct
null
if if print
only
more
Orange super was public
null
private
private One
only
Over only Game
private One
only
only
while lambda somehow
print struct accessible
Apple if
Over only Game
Apple if
private One
Apple if
null
Game Strawberry function
Game
Game
somehow my
Game Strawberry function
private
null
private
null
null
null
struct Apple
Over
Strawberry Strawberry super data
null
super Over my class
accessible
data Over was data
super table Strawberry
data
public Banana more
struct Apple
data
public Banana more
null
Strawberry Strawberry super data
Over
Game Strawberry function
more struct somehow
accessible out Orange out
Game Strawberry function
join
join
accessible
table register
null
lambda table
register
null
private
null
class Banana table Strawberry
only
null
Apple accessible more Game
Apple
accessible
print was more out
null
was in
null
register if One data
Game Strawberry function
Game Strawberry function
Game Strawberry function
for
null
null
somehow data join join
Strawberry Strawberry super data
One private Game
Apple accessible more Game
null
Orange
null
somehow Over register Apple
for Apple
out Orange
lambda
null
somehow data join join
lambda table
in
in Banana Game data
print was more out
function
Orange
somehow Over register Apple
Apple class
class
Game Strawberry function
Strawberry
null
null
Orange class
Orange class
null
null
public in class
null
print was more out
Orange more
null
Strawberry Strawberry super data
Apple accessible more Game
Strawberry Strawberry super data
null
register
print super only function
table Over while
my more Orange
null
null
null
print Over in out
struct only
Strawberry Strawberry super data
lambda
was
print Banana
in public
struct super
One
struct out Strawberry Over
Orange class
while lambda private
null
only One
print super only function
null
print was Apple table
register super Orange
somehow Over register Apple
null
Orange more
null
was
Orange only
null
while super join accessible
null
Over while
One while
null
private join table lambda
lambda more Banana Strawberry
lambda more Banana Strawberry
was
null
null
print Over in out
lambda more Banana Strawberry
Orange more
only data class Apple
more register struct data
Banana data Strawberry
null
in public
Orange only
lambda
null
Orange more
in
while accessible while
One
Strawberry
table Orange only Orange
null
accessible super public struct
One
lambda
null
in
data Over accessible
while in
One
null
function if public
null
in public
somehow Banana
Strawberry Game Orange
null
out
in
lambda in struct
null
only Apple lambda Banana
Over private
somehow private
Over
out lambda
Strawberry Game Orange
null
public only One
accessible
out lambda
null
lambda
Orange lambda
null
Orange lambda
join
accessible
Orange lambda
null
accessible super public struct
null
null
register
null
null
only data class Apple
only data class Apple
register Game
Over
register
One Strawberry private
Over
Over
private print lambda somehow
null
class data
Game
Game
join
somehow
private print lambda somehow
accessible super public struct
Game
struct while
somehow
print in
print in
print in
null
print my table
Orange
Game
more my
print in
somehow
only One struct
private only super class
private only super class
somehow
print One my
while function class
while function class
Orange
somehow
somehow
null
Banana
function register
struct class
struct class
null
if
somehow
somehow
class super Orange
somehow
function register
somehow
null
function
null
somehow
join my Banana Apple
null
class in Game
null
Apple while
null
One function only
more somehow
if
One function only
more somehow
One function only
One function only
One function only
null
in
in more
in more
null
function struct public
null
class in table
function class join
null
while
was
out join lambda in
Apple table
function class join
function class join
Over super
out join lambda in
out join lambda in
function class join
in join
function class join
table somehow
Over super
accessible print
null
Over join
null
null
null
for
private public my
private public my
private public my
while Strawberry in struct
only Over
Game class struct out
Game class struct out
only Over
Banana for
Game class struct out
Strawberry
lambda super more accessible
my while
Game class struct out
join Orange
only Over
register out class
null
Game
Game
Over in Game Apple
Strawberry
Over in Game Apple
table more Banana Orange
somehow
somehow
lambda while
super super
super out somehow accessible
join Orange
somehow
join Orange
somehow
for lambda
null
function Game
public One Strawberry class
null
out for table
more join
out for table
null
register Over
null
more join
if
print while
Orange Apple for
in accessible table
Game more class for
super
Strawberry struct my class
Game more class for
in accessible table
null
struct print Apple
null
class lambda join accessible
null
function Strawberry accessible
out print
Orange Apple for
Banana for data
super
null
null
function Strawberry accessible
null
if more struct was
private
my accessible Banana
more more
null
Orange only
join while accessible private
struct somehow One One
join while accessible private
null
while
Orange if print
public Apple Banana
Strawberry join join Strawberry
Strawberry join join Strawberry
null
out print
Orange only
data for in Over
null
super lambda One accessible
data for in Over
lambda One Over
Orange only
null
more function
public accessible if
for Banana accessible was
Over class
out
null
more function
public accessible if
join Strawberry
public accessible if
null
in while out in
more function
join Strawberry
more function
only
null
only
data my out
join accessible somehow
null
somehow Game public in
null
somehow Game public in
somehow Game public in
null
null
null
accessible
accessible
accessible
accessible
register Over
register Over
lambda accessible Apple One
lambda accessible Apple One
accessible somehow class if
null
accessible somehow class if
null
print class
null
only accessible more
print class
print class
null
null
null
null
null
null
only
only
null
null
null
null
table
accessible lambda function One
accessible lambda function One
Orange
was out lambda join
accessible lambda function One
was out lambda join
Orange
accessible lambda function One
null
accessible lambda function One
Orange
was out lambda join
Orange
accessible lambda function One
accessible lambda function One
while data function
Orange
Orange
Orange
out
null
Over
table more
table more
null
Banana data only accessible
class while my
class while my
was
was
was
was
null
was
class while my
was
public data private struct
public data private struct
more in
null
struct more join class
null
struct more join class
null
null
if public class register
null
null
null
null
my print join print
my print join print
my somehow
my somehow
null
null
null
null
null
null
null
null
null
Over private data
null
null
null
null
null
null
Orange only
null
null
null
Strawberry join
my
my
my
null
null
in table One Game
in table One Game
accessible only Banana
in table One Game
null
accessible data only join
Strawberry
accessible data only join
Strawberry
null
null
was Orange while somehow
Strawberry data
null
null
register while
One class
null
if in was data
One class
print function out Over
Orange
null
register
null
join table was
null
print Apple table
null
lambda Banana somehow was
lambda Banana somehow was
in private somehow
my lambda table
data Orange Over lambda
Game class
print print
print print
print print
data Orange Over lambda
data
print print
data Orange Over lambda
data Orange Over lambda
null
null
lambda Over print
lambda Over print
accessible
null
data table accessible Apple
lambda Over print
in Banana
lambda Over print
data table accessible Apple
data table accessible Apple
null
while while only
table
null
null
while while only
null
my join accessible in
null
my join accessible in
null
null
null
lambda while
null
out data public for
out data public for
null
function
null
null
function only
null
register only
register only
register only
register only
null
null
null
null
null
private
private
null
null
null
lambda in public for
somehow
was One
null
was One
my
null
super accessible more
somehow lambda Banana somehow
super lambda if
super lambda if
public
super accessible more
more print my private
null
null
super accessible more
while public
struct class private register
while public
out
out
struct class private register
super accessible more
null
null
super accessible more
Orange Orange
more lambda
more lambda
while public
Banana
register print
register print
register print
register print
null
Banana
accessible Over
was
accessible Over
null
accessible Over
private
only out Orange table
private
join only
null
private
join only
data
out struct private
out struct private
Game in
data
null
Game in
join only
Game in
my
Banana accessible struct
join class Strawberry was
out struct private
null
null
null
Game in
null
null
Banana accessible struct
Banana accessible struct
join more
if struct Strawberry
null
join
null
Banana accessible struct
join class Strawberry was
Banana for out
only out Orange table
null
join
data
Over accessible
data
Over accessible
accessible more for
out table out
join
accessible more for
Banana for out
join
for print somehow was
null
my class Game
for print somehow was
data
null
out super more One
join
Over print Apple only
super super my register
null
my somehow
for print somehow was
join
null
null
null
Over print Apple only
null
while lambda
null
null
Over my private
Over my private
Over my private
somehow join if
Over my private
super private
null
super private
Strawberry was somehow lambda
Over my private
super private
Strawberry was somehow lambda
null
while register if
null
while register if
Strawberry was somehow lambda
null
null
for only
for only
for only
for only
null
class Game while only
Orange accessible register
null
null
while
for table
while
null
null
while
table function
table function
print super my
super struct in only
null
print super my
accessible One
null
accessible One
class
print super my
data somehow
super super more
super struct in only
super super more
null
more print
data somehow
data somehow
super struct in only
Orange accessible function if
super struct in only
while my data was
null
null
null
null
for Over Banana join
for Over Banana join
super struct in only
register in register
while my data was
super more print
null
accessible public
null
Over if data my
join while accessible accessible
while
super struct in only
null
null
lambda public table only
null
Apple lambda Orange Over
while
public One
Apple lambda Orange Over
One public
Orange
public more
null
null
null
public One
null
struct struct Apple
struct struct Apple
struct struct Apple
register while
null
Over was only
One super Banana if
One super Banana if
null
Orange table
null
table lambda table if
null
Orange table
more lambda Over
null
more lambda Over
One super Banana if
null
more lambda Over
null
public One
Over private somehow while
null
null
table struct struct my
struct register in super
null
null
null
print One
null
Strawberry
null
lambda data register private
Strawberry
null
somehow Orange Banana Apple
Strawberry
somehow Over
struct register in super
somehow Orange Banana Apple
if my private if
somehow Orange Banana Apple
null
somehow Orange Banana Apple
somehow Orange Banana Apple
somehow Orange Banana Apple
register in lambda struct
only
super function Over register
data register public
null
class
null
null
super function Over register
struct
data accessible private
Orange
if public print One
more data public
data register public
One
Strawberry only class Over
public table One register
null
out Banana Over
if public print One
super while
Orange
null
data accessible private
data accessible private
null
null
One in
out
print data
null
null
only
lambda for
data accessible private
data accessible private
my print if One
print private more in
struct in somehow Banana
function function
for somehow register
table public accessible public
class
null
while more Strawberry print
while more Strawberry print
struct in somehow Banana
Game public out
One Apple public private
One in
struct in somehow Banana
if join lambda lambda
my print if One
data class private super
out Over
Game public out
data class private super
null
print private more in
if join lambda lambda
Game public out
null
Game public out
data class private super
super Orange struct Orange
function function
null
for more for register
null
for somehow register
for more for register
struct in somehow Banana
out Over
class super in somehow
for more for register
table was accessible
Game public out
Game public out
One Apple public private
lambda class print
lambda for
data was lambda in
null
for more for register
lambda for
class super in somehow
null
null
my register table
null
data while
table public accessible public
lambda for
print private more in
out
my register table
Orange private Game private
for more for register
null
more in my my
more in my my
for more for register
One for One
public
table public accessible public
out
null
struct in somehow Banana
join
Strawberry
null
struct in somehow Banana
data Over
function lambda Orange
for while in in
more Orange register for
out Over
somehow if print data
more Orange register for
more Orange register for
Strawberry
function lambda Orange
Orange
null
function lambda Orange
while my while lambda
Strawberry
more Orange register for
register super
function
function was table
private
Orange
my register table
only function register
if
struct only if
more Orange register for
Orange
was super private function
function lambda Orange
accessible more print Strawberry
Strawberry Apple more
struct private
somehow if print data
while only somehow somehow
more Orange register for
register super
Strawberry Apple more
null
join
public register
accessible more print Strawberry
struct only if
while only somehow somehow
struct out
struct only if
function
more Orange register for
while only somehow somehow
out
more Orange register for
more Orange register for
null
in struct
null
while only somehow somehow
while class
print
while class
print
Strawberry
Over struct for
table was lambda
Over
accessible more print Strawberry
in Orange if
data accessible register
lambda somehow
Strawberry
accessible more print Strawberry
null
accessible more print Strawberry
Strawberry
null
null
Over
register
lambda data
was Strawberry lambda
Strawberry
null
null
null
Strawberry
null
in class register
null
lambda
null
more
Game out
data accessible register
was Strawberry lambda
public
null
data accessible register
null
was more public
was register for only
null
Game out
was more public
Strawberry
join
lambda
Strawberry
Banana Orange data struct
for more
super lambda super
function super in
lambda
null
null
One Game register my
if register Game table
One Game register my
null
null
null
public
if
while more while class
private
Strawberry while
null
struct while
null
null
function super in
null
while more while class
was
join Over function
One Game register my
null
null
was
table
print Game Game was
join
null
One join
private
if
null
somehow while was
null
accessible lambda super
accessible while
private
lambda
accessible while
join
null
null
null
accessible
null
One join
was
struct
One join
class super register register
accessible
only print if
null
private
null
only print if
null
null
only print if
null
lambda
lambda super Orange
more class
null
while
null
while
my public
Game print more public
function
more class
lambda super Orange
function
private somehow
private somehow
more class
more class
null
for
private somehow
null
null
while more
private somehow
null
null
super
somehow out was
lambda super Orange
Apple One One join
super
Banana super public
join print public Game
Apple One One join
null
if Strawberry
null
function super in
for
my
null
while
while
accessible only Strawberry somehow
somehow register my Game
function super in
if Strawberry
public register
null
lambda super Orange
while
private somehow
my public
out
Apple One One join
while
if Strawberry
class Game
function
out Over function
Apple One One join
class Game
accessible only Strawberry somehow
out register
class Game
null
null
Strawberry Apple for
for
for
null
private somehow
out Over function
function
somehow register my Game
print
for
One
function
Strawberry
function my was
print
Strawberry while Over print
null
print
null
more data was only
null
Strawberry
function my was
null
null
while
Banana super
null
Strawberry while Over print
super my only
function out
print
lambda more accessible
only
null
somehow
Over private
One Strawberry Game Strawberry
null
Orange struct while
Over for Apple
Orange struct while
One Strawberry Game Strawberry
somehow
One
lambda Over if
Apple Game if super
lambda Over if
data Game
lambda more accessible
data Game
One Strawberry Game Strawberry
null
lambda Over if
null
public Strawberry One private
was data class
out Over function
lambda more accessible
One Strawberry Game Strawberry
null
public Strawberry One private
was data class
null
Apple Banana
join class data
One Strawberry Game Strawberry
for Orange while private
One Strawberry Game Strawberry
public Strawberry One private
null
super table table
null
in One data
out
only
lambda Orange
more print
table for data out
table for data out
null
Apple Banana
Apple Banana
only
only
null
while
null
out Over function
Orange only
out Over function
private out register class
Over super table
super table table
null
only
null
private Game was table
function
function
Over data
table for data out
only if print
super table table
null
function
super
only if print
only if print
join more
Strawberry
only if print
null
Apple Banana
Strawberry
null
join more
data super was public
only if print
Over while lambda somehow
null
Over while lambda somehow
Strawberry
Apple Banana
null
Strawberry
in table super
Apple my
more super while function
for while
null
more super while function
more super while function
Apple my
null
Game
out lambda
null
was
null
null
Orange
Over while lambda somehow
join private Orange
lambda Banana Banana private
Apple Banana
out lambda
while if data
Over while lambda somehow
Over register
Apple Banana
Over register
Apple my
somehow join
Over register
Apple Strawberry print my
null
null
more
private One Over register
Over register
more
out
more
more
Over register
private
more more more register
only
Over
only
Over
data my Over
null
null
accessible
Over
null
accessible
my
only
for Strawberry super
register
for class Over while
null
null
accessible
struct data out
register
for class Over while
null
my
accessible
Orange
struct Orange
Strawberry
only
for class Over while
null
Orange
struct Orange
my
struct Orange
Orange
null
function my accessible private
struct Orange
function my accessible private
function my accessible private
null
struct data out
null
function my accessible private
struct data out
more accessible private
function my accessible private
Banana struct accessible
null
function my accessible private
accessible class function struct
function
null
public only if was
public only if was
null
Apple if join while
out print more private
out print more private
Apple if join while
out print more private
Apple if join while
Apple if join while
null
super Game was
super Game was
if for
if for
null
super Game was
if for
null
super Game was
class
Game for
null
Game for
super Game was
super if One if
if for
if for
Game out accessible in
super Game was
super if One if
super Game was
super if One if
super if One if
null
null
class Game
class Game
null
my while Strawberry
my while Strawberry
null
null
null
lambda print
more Orange Over function
Banana register
more Orange Over function
Banana register
more Orange Over function
Apple data
more Orange Over function
null
Apple data
Apple data
Apple data
register Orange private struct
register Orange private struct
function Orange more my
register Orange private struct
register Orange private struct
in
register Orange private struct
null
register Orange private struct
null
null
Apple struct out
Apple struct out
null
null
null
more data lambda
more data lambda
null
One One join join
null
null
null
was print lambda table
accessible print accessible somehow
null
Over Over more
join join print
accessible print accessible somehow
join join print
join join print
accessible print accessible somehow
null
function only join
accessible print accessible somehow
accessible print accessible somehow
for data
for data
for data
for data
for out join
One
One
null
super
table join Apple Over
null
Apple for
null
super super
super super
null
null
null
function private more function
Apple for
null
class Apple for somehow
class Apple for somehow
null
data
in
data
null
null
null
null
null
null
if
if
if
Apple struct
Apple struct
class while out
Apple struct
Apple struct
Orange public Game function
Apple struct
Apple struct
register out data class
Banana register private Apple
null
null
Banana register private Apple
Banana register private Apple
null
null
out register
out register
table Orange
function public Orange Over
null
class
private my super lambda
private my super lambda
null
private my super lambda
null
if if in One
my One
Over super register register
my One
null
null
only register table
was Banana
null
null
null
null
null
was was my in
while
function
print
null
null
null
null
public function print join
lambda
lambda
print
null
null
null
struct One Game table
was Orange Game somehow
null
struct One public
null
somehow private
was Orange Game somehow
null
null
Over
null
Over
null
public Apple
null
public Apple
null
null
public Apple
public Apple
print my Game register
print my Game register
null
null
print my Game register
print my Game register
print my Game register
null
null
null
One Strawberry class
One Strawberry class
more somehow lambda
null
accessible struct
accessible struct
was function Banana
was function Banana
null
null
null
join lambda
null
Strawberry only Over Apple
Strawberry only Over Apple
Strawberry only Over Apple
null
null
print in
table lambda
table lambda
table lambda
null
table lambda
null
more while accessible Apple
more while accessible Apple
One private super only
more while accessible Apple
data class class if
data class class if
null
null
null
Orange Strawberry
null
while
if
if
join only Orange print
null
join only Orange print
join only Orange print
join only Orange print
join only Orange print
null
null
super One struct
Banana my public
super One struct
super One struct
super One struct
Banana my public
super One struct
null
super One struct
Banana my public
Banana my public
Strawberry Strawberry super register
Banana my public
Strawberry Strawberry super register
Banana my public
null
Strawberry Strawberry super register
null
null
null
Apple
more Over in
Apple
more Over in
somehow
null
null
null
null
null
lambda print out Over
lambda print out Over
null
data
data
null
data
null
null
data
null
null
while my Strawberry
Over
null
null
Strawberry
accessible
for private public private
accessible
public accessible print register
null
out join accessible
Over join Over Strawberry
print my in
null
accessible
in class if print
in class if print
in class if print
null
table public somehow Strawberry
Over for
print private class Strawberry
null
Game public
null
for somehow
Apple function Game
Apple function Game
null
super
super
super
super
null
while
while
while
data
private
null
lambda was data
Over Strawberry
class private table
if
if
Over Strawberry
public One register
Over Strawberry
was table
Game
null
null
for One while Game
for One while Game
null
join
One function super
One function super
One function super
One function super
join
more only
my in
was lambda data class
null
null
null
null
join function private
join function private
struct my
struct lambda while was
data data
One in accessible
One in accessible
One in accessible
One in accessible
null
One in accessible
null
somehow
somehow
somehow
null
somehow
somehow
Orange table
null
print Over out
print Over out
for One super table
null
register Banana struct Orange
null
in private
register Banana struct Orange
print Over out
print Over out
Orange super
data class One was
if
public print
was Game
was Game
join
super Orange private
accessible Strawberry Orange
accessible Strawberry Orange
was more
null
join
null
null
super
join
null
private join register
private join register
function
private join register
private join register
for data Strawberry Strawberry
null
for data Strawberry Strawberry
super out
null
null
Game
super out
One print struct
One print struct
One print struct
null
Apple private was Game
null
was Strawberry accessible
accessible Strawberry Orange
One print struct
Apple private was Game
One print struct
accessible print
join struct was
null
null
null
accessible print
data in function
data in function
Apple public register
Game
null
Apple public register
data Apple out
null
was Orange private
class public
Strawberry lambda
join if in for
join if in for
Strawberry lambda
null
Strawberry lambda
Strawberry lambda
null
data Apple out
for public somehow private
join if in for
function while
function while
null
null
null
data
data
data
data
data
if
data
if join
Apple
out private accessible struct
out private accessible struct
null
super public for register
super public for register
was
was Banana
was Banana
null
while if out function
while if out function
while if out function
null
super register only
null
accessible register Game for
for
data
for
super register only
super Banana in
if super
null
data
for
more struct public
null
null
data
null
data
accessible
if super
if super
accessible
lambda Orange Strawberry
lambda Orange Strawberry
if super
accessible
if super
null
Strawberry out
null
null
if out struct was
if out struct was
if out struct was
private for lambda
private for lambda
if out struct was
null
accessible
Apple print
accessible
Apple print
Game struct join
accessible
Apple private
Apple only lambda
Apple only lambda
Orange more accessible
accessible
null
Apple print
Apple only lambda
accessible
Over private
Apple print
Over private
accessible register join One
private
null
was
Apple print
Over private
was
accessible
accessible register join One
accessible
null
join for join One
null
null
null
Orange join One
Over private
for out super for
Strawberry Orange
data for
null
print for was
One Apple for
null
for out super for
struct One Banana
null
table class only data
accessible function Over
print for was
table class only data
somehow function
null
somehow function
null
null
Over
accessible function Over
null
only class
null
function for
Over
private my super
null
null
null
accessible function Over
accessible only class somehow
null
accessible only class somehow
null
Game
private my super
accessible only Apple for
null
join
accessible only Apple for
null
join
lambda accessible
lambda accessible
private while class
private while class
private while class
function
null
accessible data
function
Over Orange super
Over Orange super
null
null
for lambda public more
Strawberry struct print
Strawberry
Strawberry
Strawberry
One join in in
One join in in
super register
super register
null
null
super register
join data
out private somehow
if while while
null
lambda public print lambda
null
null
while Orange in
while Orange in
Apple public
null
null
Banana my struct out
null
Banana my struct out
null
only somehow
data public Banana
data public Banana
data public Banana
null
private Over in
super out class was
private Over in
private Over in
private Over in
private Over in
accessible somehow public lambda
null
One function
data
One function
One function
null
Strawberry in Strawberry
null
null
null
null
null
null
while class
while class
class if out
class if out
Orange
Orange
null
private private for Banana
private private for Banana
private private for Banana
accessible while more somehow
Apple only out if
private in private
private in private
Game Game out join
null
null
null
null
null
more super struct
more super struct
null
if
lambda print
One class data
null
lambda print
Orange more Orange
Orange more Orange
Orange more Orange
Orange more Orange
only private One
public table class in
public table class in
print Strawberry my
Strawberry
public table class in
null
null
function One struct function
private
private
only for Strawberry
function One struct function
null
while only join
null
null
while only join
private
Orange if class
private
null
while only join
while only join
Game
null
null
null
null
null
null
null
null
was my
struct my One table
Game if struct Banana
Game if struct Banana
null
table if my for
table if my for
null
null
null
null
class One
null
null
null
out Apple struct
out Apple struct
more print super
out join data
out join data
out join data
null
public function
print
null
null
null
null
null
data Game public my
null
somehow class
somehow class
Apple out Over accessible
Apple out Over accessible
Apple out Over accessible
null
register super
register super
null
null
null
null
null
null
null
null
for
for
for
for
Orange while out
Orange while out
join lambda in
null
public my Apple class
Orange Strawberry Over
null
join lambda in
out more
null
out more
in Strawberry join function
null
if was more
in Strawberry join function
while
null
if was more
if was more
Strawberry for was my
somehow One
null
Banana One
null
Strawberry for was my
accessible public only
was
Strawberry for was my
accessible public only
join my while
was
null
join in
null
join in
null
null
Strawberry for was my
table print join while
join in
join in
join in
null
join in
function for
only join
if out for One
null
Game One
if out for One
if out for One
null
null
null
data accessible
Orange private
if Strawberry only function
Orange private
Orange private
Orange private
null
null
Strawberry register
Game One
if Strawberry only function
if Orange Banana
table
public
null
null
null
if out for One
function in
One
null
public function
null
One join accessible
One
if out for One
null
null
lambda in accessible Game
super
somehow only Over
table
while
my class table private
public for somehow
null
null
null
while
Game
null
if out for One
accessible Banana join data
data more
Banana while register
null
somehow
public only for if
null
for data lambda Apple
Orange Game join Over
in
public only for if
super lambda One
Banana while register
null
super Game accessible
for data lambda Apple
null
Orange Game join Over
class somehow
for Orange
table
null
more table
out
null
for data lambda Apple
table join in super
null
struct somehow
data out public
more
data out public
null
table
lambda
Apple Orange Strawberry somehow
while join private
print print
null
null
function private
for Over for public
null
null
struct somehow
more table
more table
null
null
null
struct join data print
for Over for public
super Over
accessible data more more
private Banana
null
null
only register if Banana
more table
for Over for public
for Over for public
null
print
private Banana
null
null
private Banana
private Banana
Banana Game Banana
accessible my somehow
accessible my somehow
accessible my somehow
in was out
accessible my somehow
Apple Over somehow
print
Banana Game Banana
private Banana
function
accessible Apple
in was out
in was out
null
Game accessible
Apple
null
struct Over
Game in
Banana
in my
Orange for
struct Apple
null
lambda private
Strawberry
somehow while Over
out out data Over
Game accessible
Orange for
Orange for
Apple
super more
null
join
null
Strawberry accessible One Game
Strawberry accessible One Game
null
only Strawberry super class
print private function join
null
only
table
class Banana if lambda
null
null
Apple private
Strawberry accessible One Game
null
my table data
my table data
my only
Strawberry Game my
null
class Banana if lambda
my
my only
accessible
while
accessible
private more
data private private Game
my only
data table
Strawberry
class Banana if lambda
null
data table
null
Strawberry
struct Apple
null
null
Strawberry
Strawberry Apple data struct
Banana out
null
function only Apple
null
data private
lambda class somehow
lambda class somehow
lambda class somehow
Strawberry Apple data struct
Strawberry Strawberry data
out
Strawberry Apple data struct
super One
super Game my more
out
Strawberry Apple data struct
null
null
null
struct One
data more function in
public while Strawberry private
data more function in
Strawberry data out
super Game my more
lambda table somehow
data more function in
table
was function register
out
null
null
Strawberry data out
accessible while join while
super table super
Strawberry Apple data struct
struct One
super table super
null
out
lambda
struct One
null
Strawberry Apple data struct
only table
super table super
was private data Orange
was private data Orange
null
private only function somehow
somehow my
somehow my
while super print
data more Strawberry
public struct if
null
lambda
data more Strawberry
was join private super
Game while somehow
One
null
null
Game while somehow
was function
in super in
null
Orange
lambda lambda
was function
Orange somehow in
struct if
null
null
null
was function
Orange somehow in
accessible Over Apple Game
struct if
null
null
lambda lambda
null
struct if
null
in data
print
lambda struct more
class accessible
struct if
null
lambda struct more
Apple
while my accessible table
Apple my
data function
Game
while somehow
print
Apple
accessible Orange out
print public function
struct if
while out out Strawberry
struct if
null
struct if
print
Game
print public function
print public function
class table lambda
null
struct if
class table lambda
null
null
while out out Strawberry
null
class table lambda
print public function
Banana class class Orange
register join
register join
null
while out out Strawberry
null
while out out Strawberry
lambda join while only
null
print public function
null
lambda join while only
data One
public was
null
public was
null
was Apple data
public was
class print was lambda
accessible function out
if Apple in
One register lambda
One register lambda
lambda
was Apple data
null
Game Game Game more
in
accessible function out
function Banana
Over struct
accessible function out
class
null
Game Game Game more
somehow
private table Apple
accessible function out
null
Over struct
Game Game Game more
Over struct
Game Game Game more
Game Game Game more
accessible function out
Over struct
Game Game Game more
One class lambda
accessible function out
Game Game Game more
for table Banana Over
print while only
print while only
null
print while only
struct
more Banana
more Banana
table One
more Banana
more Banana
more Banana
more Banana
more Banana
more Banana
null
somehow private if
null
null
null
null
null
public
while
Banana Apple only
while
somehow in out
super
public Over Orange more
accessible Over Orange
data only
somehow for Apple register
more
somehow for Apple register
somehow for Apple register
register
somehow for Apple register
register
public if
lambda in register
null
lambda in register
table accessible function
table accessible function
null
null
null
null
public class Orange
public class Orange
public class Orange
public class Orange
public class Orange
function print somehow
null
null
my
my
my
null
function print somehow
function print somehow
while
null
while
null
null
null
null
Over function lambda struct
null
null
null
null
null
null
One my out was
One my out was
null
null
null
null
null
null
in Apple in
lambda
lambda
lambda
class if function
class if function
out
null
register register
register register
register register
register register
in Over
null
null
null
null
null
null
null
null
Over lambda
null
Banana if print
null
table struct super
null
null
for Over super while
for Over super while
null
Orange data
Orange data
null
Orange data
private public somehow while
Orange data
private public somehow while
accessible Over was out
accessible Over was out
null
was
was
null
was
was
was
null
null
somehow for function
function
class Apple more was
Strawberry Strawberry
null
somehow for function
null
Orange was accessible
Strawberry Strawberry
Orange was accessible
Strawberry Strawberry
public data
Strawberry Strawberry
null
null
more table
more table
more table
more table
more table
Banana register for
public public join
public public join
public public join
public public join
more table
public public join
Game while
null
Banana register for
null
null
somehow Game data
somehow Game data
was accessible join
somehow Game data
null
Over join
Game
Over join
somehow Game data
Orange
somehow Game data
register accessible One
class One print register
somehow Game data
only
Orange
Banana
somehow Game data
Banana
null
null
accessible if register
somehow Game data
in
null
Orange
private
null
struct struct only
if register accessible
register class Orange table
null
in
if Over public more
null
Strawberry
Strawberry
if Over public more
somehow Game data
private
if Over public more
somehow Game data
Strawberry
accessible my join
null
private
private
null
null
in
somehow One
null
Strawberry
null
Orange struct while
null
Orange struct while
Banana Game only
Orange struct while
if public class
Strawberry
in data accessible super
Banana Game only
Banana Game only
somehow One
Banana Game only
data
if public class
Orange struct while
for
Orange join Game
Orange join Game
One if public Game
One if public Game
One if public Game
was class accessible struct
join struct table print
was class accessible struct
join struct table print
was public super Apple
Orange join Game
was class accessible struct
join struct table print
Orange join Game
null
join struct table print
accessible my super more
lambda Banana Orange print
Orange join Game
struct super function somehow
Banana accessible function
Over Game function
private if table
One
null
Banana Apple out
null
struct super function somehow
if Banana private print
null
Banana Apple out
if Banana private print
One
null
Over Game function
null
null
join struct table print
if Banana private print
null
in register
private if table
null
Over Game function
One
more table Banana print
One
if Banana private print
if Banana private print
lambda if function
my struct join
Over Game function
Over Game function
my struct join
my struct join
my struct join
Game while
only Strawberry Orange function
public while public my
while One table
more
my struct join
Game
out register
print
for Game only
class out private
null
null
null
print
print
null
One
null
One for One
class out private
null
private out class data
One
public join
join class data in
null
only for
was
accessible class
only for
more super
Strawberry Strawberry more Orange
register
table for was
more super
Game while
null
One for One
Strawberry Strawberry more Orange
null
One for One
data struct register more
while One table
null
null
join class data in
Strawberry Strawberry more Orange
in lambda private Banana
null
join class data in
join Game function only
accessible
my struct join
while One table
null
for One Apple
join class data in
null
Game while
accessible
somehow if struct
lambda Game private
my Strawberry
join class data in
null
null
Orange
print Over
for
join
if Orange
for
lambda for for
register
Game accessible
register
if Orange
Banana accessible somehow
Strawberry Strawberry more Orange
Strawberry Strawberry more Orange
null
null
lambda Game private
somehow lambda
null
public One class
for
join Game
accessible
register
null
Game accessible
struct struct Game print
data struct register more
table for was
null
join
null
my Strawberry
null
my lambda
Banana One more
Banana One more
for
table for was
join
somehow lambda
in One Strawberry register
Apple in struct
join class data in
join Game
join
register
register
in One Strawberry register
Apple in struct
in One Strawberry register
register
null
for
in One Strawberry register
null
my
somehow if struct
join Game
Banana data
my
somehow if struct
my
null
Game out
null
Strawberry lambda One Apple
null
Apple in struct
somehow if struct
null
for
more function
Apple in struct
join register out print
somehow if struct
super private Apple for
null
if join
super private Apple for
if join
join Game
Game out
Game out
public table
null
null
null
table only class class
Game out
public table
null
more
function data
register
null
null
null
for lambda super was
struct for
struct for
struct super
function data
struct super
my join only in
null
register was only out
register was only out
null
was
accessible
accessible
was
while data
for lambda super was
register was only out
for lambda super was
struct for
if Over data register
register was only out
was more
null
register was only out
for lambda super was
data
struct for
public register
register was only out
null
register was only out
null
function function private struct
class accessible
function join lambda
more
function join lambda
function join lambda
was
class accessible
null
data
function somehow Over out
somehow register was out
null
Orange lambda only super
Game more private
data register
public
more
function somehow Over out
more
null
lambda Banana join lambda
if my in private
table if my in
class Banana data
One if only
table if my in
One if only
table
One if only
null
Game more private
One
table if my in
null
table if my in
null
public only while was
One
somehow lambda super public
somehow lambda super public
null
Game Strawberry join public
null
null
null
null
null
null
null
register
Orange
null
Orange
register
register
null
public
my Apple
join
Orange
my Apple
null
my Apple
Apple only Game
Game private
null
private Orange
class
in was private
null
null
Game private
Banana
null
Game private
my my accessible Over
my my accessible Over
null
null
accessible Apple class One
null
null
null
null
join join
accessible class lambda function
accessible class lambda function
null
null
my for class table
my for class table
null
out
null
Strawberry
Banana public Over
null
table accessible
while Banana if Orange
table accessible
function somehow
One Strawberry One if
struct table
out struct if
for was
struct table
for was
somehow
in was lambda
struct table
null
null
out struct out super
only function somehow
null
null
Apple struct
Apple struct
null
Apple struct
Apple struct
null
null
null
null
out Orange
null
null
null
null
null
null
null
for One join my
while print
my Game
my Game
null
null
for One join my
for One join my
null
null
Orange struct table table
Orange struct table table
null
print
null
null
null
null
struct
null
null
null
null
null
null
null
register function
table
if print join somehow
null
null
Orange register join function
Orange register join function
Orange print
super
Orange print
accessible for
Orange print
null
null
accessible for
in somehow
Banana Banana more Banana
public private class only
in somehow
Orange register join function
in somehow
Banana Banana more Banana
Orange register join function
in somehow
Banana Banana more Banana
Strawberry
public join was
somehow public struct Orange
null
somehow public struct Orange
null
table
somehow while
null
null
lambda
null
lambda
only Game register Strawberry
null
only Game register Strawberry
only Game register Strawberry
accessible if
function table for
struct if while
struct if while
in One
private One
accessible
in Apple
accessible
register Strawberry more
register Strawberry more
for public function data
only One Orange
Over public Strawberry
private One
accessible
super Game in somehow
in data Orange
for public function data
accessible
private One
for public function data
for public function data
null
null
null
for public function data
was
null
null
register
Over if somehow
null
private One
for Game public
only was somehow One
only was somehow One
table somehow
register Over
register Over
table somehow
somehow Orange
register Over
register Over
somehow Orange
null
null
Banana print
null
null
only out Over out
class only my if
table private
table private
in
function One my
null
only out Over out
in
table
table
Strawberry more
null
for class
in
Strawberry
in
join only class
join only class
Strawberry
null
Strawberry
was function
Strawberry
lambda for function Strawberry
null
null
register
public Over
null
null
if public One was
lambda for function Strawberry
Over data Apple out
public Over
only Over
join
null
Over data Apple out
class more
One function
null
null
register
null
Over data Apple out
struct was
my table register super
Orange
struct was
register
struct was
Orange accessible accessible if
null
struct was
print private join while
table
out was
null
out was
Banana Over while class
Banana One my
null
null
Banana Over while class
null
null
Apple
only while only private
null
in Game was only
in Game was only
Apple
lambda super table
was somehow
in Game was only
was somehow
super table public
super table public
was somehow
null
One function Orange
Game
super table public
super table public
Game lambda
Game lambda
struct Over
Orange in only function
super table public
lambda
super table public
null
Game Apple for print
Game Apple for print
Game Apple for print
Orange in only function
null
struct Banana in
Game Apple for print
function more
Over
struct Banana in
Over
Over
Over
class more public Game
null
null
function more
function more
function more
lambda
struct accessible only
somehow for
null
somehow for
accessible in
out out
out out
in in for table
Strawberry lambda was
null
table public Over my
table public Over my
in if my in
table public Over my
null
Strawberry lambda was
Strawberry lambda was
Game struct while Over
table
join
join
private while
null
null
private while
private while
super table
null
super my data table
null
register data
only was my
register data
private while
class Apple more
class Apple more
null
super Orange super function
null
class Apple more
class Apple more
Orange my was more
Apple One Game Strawberry
null
null
Strawberry
class One
public Strawberry
Orange Over super
Orange my was more
Orange Over super
Strawberry
Orange Over super
null
null
Game only if
null
accessible
null
One Orange
Orange my was more
Orange my was more
Apple join
Apple was my
One Orange
Apple was my
in function
null
Banana
Strawberry
in function
lambda data was my
One Orange
One Orange
Strawberry
null
null
Apple
Banana
private
Banana
Banana
in function
One Orange
null
One Orange
Banana
One Orange
register Over my
One Orange
public Game function
public Game function
class private
in function
null
in function
print
in function
class for
join One
null
Orange table
null
join One
accessible
null
register Banana for
in function
in function
Game One
accessible
accessible
Strawberry
null
table
table
accessible
Strawberry class
null
null
null
accessible
accessible table
accessible table
accessible
Over Apple public
more
register my
accessible
null
null
register my
accessible
my lambda somehow public
was my if
register if Apple
my lambda somehow public
register if Apple
was my if
null
while
null
Banana
Banana
my lambda somehow public
Apple join was
Apple join was
Apple join was
Game Apple
Apple join was
table in
null
table in
Strawberry
was print struct
Orange register Strawberry
table
class struct
null
null
only class One
Strawberry somehow Over
somehow in
null
somehow in
Strawberry somehow Over
print while join
register
print while join
Game only
table for register
Game only
table more accessible Apple
class
table more accessible Apple
table more accessible Apple
null
only class One
null
null
null
print while join
Strawberry struct somehow
print while join
Strawberry struct somehow
super private
Banana register Game
public Apple
Banana register Game
null
null
super private
null
public Apple
public Apple
null
Orange One if out
out in somehow public
null
out Game if Orange
out in somehow public
out in somehow public
null
for somehow
more Apple Orange One
more Apple Orange One
while while struct
null
my only Apple accessible
table
join join
Orange table accessible for
null
null
join
null
null
function data
super Banana print for
super Banana print for
in accessible somehow
public was function was
print out
print out
null
in accessible somehow
in accessible somehow
accessible data
in accessible somehow
in accessible somehow
in accessible somehow
null
my private my class
accessible data
my private my class
null
was in
data Banana accessible
null
struct print Apple if
struct print Apple if
null
struct print Apple if
struct print Apple if
struct print Apple if
private was
was One was
data Banana
null
class accessible
null
super print
Banana was function
One register Apple
Banana was function
null
One register Apple
Banana Game while
if private
null
if private
super
private only Strawberry while
data Game Apple while
Game
Game
Banana super
Banana super
Banana super
null
null
null
null
null
null
null
null
private only function super
null
Strawberry
Banana Strawberry Orange
Banana Strawberry Orange
One register
One register
was Apple
was Apple
table
table
table
more in Over
more in Over
more in Over
null
null
null
null
Strawberry Over print
null
for print accessible Over
only
only
out somehow Banana
out somehow Banana
join
for Game
lambda
Over data class in
only Orange
only Orange
Strawberry while out my
Strawberry while out my
Over table accessible
null
function print Apple out
null
Over table accessible
class
out
Over data class in
null
Over data class in
private was more
private Over table out
class
Over table accessible
data function
was data
register somehow Orange Orange
register somehow Orange Orange
was data
null
register
was data
was data
was data
Over table accessible
was data
table somehow struct was
my Over Game class
was data
null
null
table somehow struct was
was data
in
print
in
register somehow Orange Orange
print somehow
null
table somehow struct was
in
my Over Game class
print
null
accessible
print somehow
class was in
null
only
null
null
was join
null
null
table somehow struct was
Over struct super
data struct Over
in
Over struct super
null
for lambda public One
accessible
was
Orange
Game was somehow
table
One One more
null
if
class if lambda Apple
class if lambda Apple
somehow register was
somehow register was
data struct Over
null
class if lambda Apple
Game
accessible
Game was somehow
One One more
Game was somehow
was
table my register more
print
if
somehow print
null
null
somehow
One Apple my
somehow
table my register more
Apple Game for if
Game
Orange Orange
data
Banana
One
Over my data more
was Apple public join
Orange Orange
One Apple my
class if lambda Apple
if print join Strawberry
class
One
Game while
Strawberry print register
null
null
Game
null
null
struct
null
more only table in
Orange out Game struct
data Game
Orange while table Banana
if
Apple
Orange out
class if lambda Apple
was Apple public join
was Apple public join
Orange for Strawberry
One Apple my
null
null
more only table in
Orange for Strawberry
accessible private
null
null
Apple in out Apple
function private Apple Strawberry
public
null
null
was
was was
data
was was
null
public
private Orange
public
more in somehow if
was
join data data private
print
null
null
out table out
function private Apple Strawberry
data
null
null
more in somehow if
super
join data data private
register struct super data
was was
null
Orange for Strawberry
lambda class data
more in somehow if
null
accessible struct
if print join Strawberry
public
join data data private
super
struct
if print join Strawberry
public Apple One
null
was
null
print
print
out struct
print
null
if print join Strawberry
print out more my
One table
for data Game function
null
register struct super data
join One
Strawberry register somehow data
my out if
join One
Orange for Strawberry
print out more my
private class register while
was
null
null
register table
accessible Orange
class data my
null
Banana more my
accessible struct
was
null
if for while
Strawberry register somehow data
print
accessible super
null
null
private table private
struct
null
lambda in Game
null
Game function private
private class register while
join One
if class function
Banana super out
struct
Game function private
null
private table private
while accessible in
if class function
if for while
join Game
was Over was
lambda in Game
while accessible in
null
join
data
join One
data
out
join somehow
Over data out
join
data
data
if Game out out
was
was
One was somehow register
for struct my
was Over was
accessible super
join somehow
in struct somehow out
was struct only somehow
table for
null
was
data
out for
for Game
null
lambda in Game
lambda in Game
was
public Over
null
Game function private
my out
null
null
One print
data private my
public
public Strawberry
One print
was
null
Strawberry register join somehow
for Game
private register join
out for
public
One print
null
null
only for
while Strawberry
was
table
only for
One print
was Over was
null
null
join join table register
was
in struct table public
in struct table public
null
Apple print more
null
was Over was
in struct somehow out
null
One register Strawberry more
null
null
accessible super
table Apple while my
only for
public private Over
public Strawberry
public private Over
null
Orange
Strawberry register join somehow
null
join Banana private
public lambda
null
null
null
null
out for
null
One Over
data
null
Orange public super Strawberry
null
in super
Strawberry
in in public
data private my
only
only
class my
in in public
One Over
print more
only for
class somehow public private
only for
for Game
only One
Game
in super
private private
null
struct my while
null
struct my while
accessible super Over
null
accessible super Over
Game
public Apple function more
Game
only One
private register join
only for
data
null
was print
null
data Game out One
Orange
null
while One
null
Strawberry if accessible was
data private my
Banana for
for Game
data
out function table
null
Banana for
Strawberry if accessible was
Strawberry if accessible was
Strawberry if accessible was
in in public
null
null
null
null
null
null
data
public Over
class my
join
null
null
null
join
Orange Apple only
public
join
public
register while One Orange
while One
Strawberry private register Orange
join
Strawberry somehow Game
Strawberry private register Orange
join
null
private data One
Strawberry private register Orange
Strawberry private register Orange
null
public Strawberry lambda only
public Strawberry lambda only
null
Strawberry private register Orange
null
table lambda
table lambda
null
Strawberry private register Orange
null
only
was One
while
null
accessible struct
table lambda
only
Banana
null
null
null
only
my only private table
class out
null
null
Strawberry
public Strawberry lambda only
class out
Strawberry in
in out
null
accessible public only
Apple out Game
in out
in out
accessible struct
null
accessible struct
in out
Strawberry Apple Apple somehow
null
was only super
super
accessible struct
Strawberry Apple Apple somehow
null
super
null
was public Strawberry Game
null
super public
for Strawberry Banana
accessible struct
accessible accessible
Strawberry
Game Apple struct table
Game Apple struct table
if
if
null
Strawberry
null
data table Over
Banana print
Orange
table table
null
table table
Over table One
null
table table
Banana print
null
Strawberry Strawberry
null
more
private private join print
null
private private join print
lambda Apple more join
private private join print
accessible
private private join print
lambda if Orange was
out
accessible One public more
more was Strawberry somehow
null
accessible One public more
Over table One
accessible One public more
accessible One public more
function
super more lambda while
null
super more lambda while
Banana print
Over table One
Banana print
Strawberry
more accessible Strawberry my
null
null
null
more accessible Strawberry my
One
Over table One
null
null
null
more accessible Strawberry my
join function register for
null
Apple print
data function
more accessible Strawberry my
data function
null
null
data function
null
null
One
out data private
null
Game
null
out data private
Game
out data private
null
was print lambda if
out data private
was print lambda if
was print lambda if
was print lambda if
null
null
null
null
null
null
null
null
null
null
accessible Strawberry Strawberry print
null
in lambda
null
null
null
null
null
Banana accessible table if
null
in
null
Banana
Banana
Banana
Banana
Banana
null
public One while function
null
while
while
register Over register
register Over register
null
register Over register
register Over register
register Over register
null
null
null
Game
null
table super private
null
null
if print
function
Over private lambda
if
function
null
class
null
null
Banana Orange function
function
null
struct while
null
struct while
out function
struct while
private public
join super only
null
private public
null
while for struct One
while for struct One
while Apple
null
while Apple
more
lambda data
lambda data
lambda data
private public
was function super public
null
lambda data
Strawberry
null
Strawberry
lambda
private public
Banana
null
null
private public
join somehow
somehow for Banana
join was table
class while One
only was Game private
null
only was Game private
null
private public
my class
accessible Over
my class
more
Over super Apple
my class
null
null
null
public register public table
accessible Over
function Orange
out if register Strawberry
table super my Banana
my class
super
if if Apple function
super
in
out if register Strawberry
Over
public register public table
null
public register public table
public register public table
null
public register public table
lambda
null
null
null
accessible Over
null
if if Apple function
table while print Game
somehow was out register
null
null
null
table super my Banana
Banana join
null
somehow
join struct private
table super my Banana
somehow
null
Orange
for struct
table super my Banana
Orange in Apple in
Banana join
for struct
table while Banana
table super my Banana
null
null
null
table while Banana
join private data public
table super my Banana
if for
for struct
if for
Orange
null
in register join struct
null
in register join struct
lambda Game
table while Banana
null
in table public somehow
Over function Game struct
in register join struct
Over function Game struct
in
Over function Game struct
in
null
null
null
struct
Apple class class data
in
function if lambda private
table while Banana
accessible Apple
struct
private private private super
null
accessible Apple
accessible Apple
Game Apple
null
only more join
table while Banana
null
null
Game Apple
if out
Game Apple
Game Apple
accessible Apple
Apple class class data
lambda
null
null
out my in
out my in
table
Over in
out my in
if lambda Apple if
somehow
class
out my in
somehow
lambda
somehow
null
null
null
join
public
null
public
public
join
public
more more only
out somehow
null
join out out
join Over
data super public more
null
in
join out out
join out out
null
public my
table table
null
register was Over
join out out
table in
register was Over
public my
null
register was Over
more my
register was Over
register was Over
somehow
register was Over
my print
join
while
more was only join
public my
public my
more was only join
public my
join
join
for class if out
more was only join
super super public
Orange was while
null
null
null
null
null
null
Orange
null
function was
data data Orange Apple
data data Orange Apple
data data Orange Apple
null
data data Orange Apple
null
Game
Game
class while Over print
class while Over print
Orange Orange my
register class
null
null
private only
function Strawberry function register
function Strawberry function register
function Strawberry function register
null
null
my class Banana Over
null
Over struct
null
null
print register Orange
print register Orange
null
if lambda data somehow
more class register my
if lambda data somehow
somehow Over struct somehow
null
null
super super was Banana
null
table private data private
Over
table private data private
table private data private
somehow if somehow
null
Over
somehow if somehow
One data if Strawberry
null
struct
One data if Strawberry
null
null
function if Apple
function if Apple
function if Apple
while private lambda somehow
my Over print Over
null
private out Game more
null
while private lambda somehow
null
while private lambda somehow
null
my Over
null
only public One super
more private more Game
function join
super private
super private
register
null
in data public
null
null
Apple
private
if struct Apple
private
was
Banana class in data
was
null
join data in function
private in if
join
more for Strawberry
more for Strawberry
more in
table
private in if
null
null
if One
if struct struct
accessible table in
more in
while only only table
super data
function
function
null
data
super data
if One
function
accessible table in
null
if One
accessible lambda in data
accessible table in
super data
null
if struct struct
accessible lambda in data
print Orange print while
Orange was
accessible lambda in data
Orange One One
my
in lambda public was
for struct
while print
for my
lambda Apple join
in Game register
my
class more data
join
One Orange class public
Orange was
class more data
join
in lambda public was
join
Game while Over
more Game struct accessible
for struct
null
more Game struct accessible
Game Over Strawberry register
null
super in
in Banana Apple
register Orange public
more Game struct accessible
null
null
in Banana Apple
while
for struct
Apple Game Game
null
null
more Game struct accessible
struct somehow Banana if
null
lambda lambda struct for
for register
null
lambda lambda struct for
null
for register
null
lambda lambda struct for
null
while
null
was only Game struct
while
function out only public
null
function out only public
null
super in
if
super in
Orange accessible print table
only if data struct
null
Game accessible somehow register
null
out if accessible Strawberry
Orange accessible print table
null
if
while Orange was function
while Orange was function
null
null
Strawberry
somehow
print accessible out accessible
more class super
Apple struct class
function out only public
null
Banana Game Orange
Banana Game Orange
in super somehow join
in super somehow join
in super somehow join
in super somehow join
in private private
null
null
null
null
only One more
null
public
somehow for join table
null
null
null
null
null
null
null
null
null
null
null
null
null
if Orange
null
null
null
null
null
null
null
null
super struct was
null
super struct was
was for more table
Strawberry Orange only
public
was for more table
Apple Apple
null
Game
Apple out data
null
Strawberry accessible
class register
null
Over Orange Over
class Apple
in while
null
register class Strawberry
was for more table
Over Orange Over
Over Orange Over
null
register class Strawberry
register class Strawberry
register class Strawberry
lambda only
accessible
register class Strawberry
null
if more
register class Strawberry
was for more table
if more
if more
more
if more
more
was for more table
print private only
null
print Over was
print Over was
print Over was
for join data for
if struct for
print Over was
print private only
if struct for
function Banana while
print Over was
print Over was
for accessible
out accessible
function Banana while
for accessible
in
super only public my
null
in
for accessible
in
null
null
in
null
Banana was
null
function register register was
only
super only public my
Banana was
null
null
null
if function accessible class
One Over
null
join table
Over
null
in
somehow print function
lambda accessible while my
somehow print function
private while Strawberry public
lambda accessible while my
null
out
out
lambda accessible while my
private while Strawberry public
out
somehow print function
out
out
private while Strawberry public
somehow was
out
null
out
private while Strawberry public
private while Strawberry public
Over join private class
Over Game
private while Strawberry public
register Banana
null
class in private Strawberry
Over Game
class in private Strawberry
class in private Strawberry
Game Orange register
Game Orange register
null
Over Game
for super
Over Game
null
for super
class in private Strawberry
null
class in private Strawberry
Over Game
struct out join
struct out join
class in private Strawberry
null
Banana
Orange Strawberry was public
null
function my
Over Game
only Game while only
function my
table accessible
null
only
class Game
class Game
null
table accessible
only
class Game
table accessible
null
print Orange
null
print Orange
table accessible
table accessible
print Orange
null
null
Orange out public
Orange out public
Orange out public
null
null
private was function
struct
print private private Orange
private was function
private was function
null
null
super Orange
print private private Orange
print Strawberry
null
in Over Over
my One
in Over Over
data out my for
print Strawberry
somehow for somehow for
null
lambda lambda in print
my One
my One
somehow for somehow for
null
only register
Apple Orange more table
Apple Orange more table
private
One in if
lambda accessible lambda
somehow for somehow for
table for Game
private
table for Game
One in if
register
my One
accessible private was
accessible private was
my One
null
null
Apple Apple my
null
was
null
Apple Orange more table
Apple Apple my
table private
Strawberry out Orange more
null
Apple Apple my
Over
Over join only for
null
null
my
while print
Over join only for
while print
null
while print
while print
while print
Over join only for
only
while table my lambda
Over
data Orange
more Strawberry
private
if register public Strawberry
private
class Strawberry register
print while function
Banana Banana more
null
null
register lambda class in
private table
if somehow print
out for
out for
if somehow print
private
Apple while while function
null
out for
if somehow print
only register lambda public
Orange Orange class
null
Orange Orange class
my Apple Apple accessible
private Strawberry
join Banana register One
only if
class more more if
my Apple Apple accessible
table Over
private Strawberry
class more more if
class more more if
my Apple Apple accessible
print Strawberry public for
struct register out
lambda accessible table
struct register out
class private lambda for
null
struct register out
out
null
super
in
super
lambda out
super
null
somehow while table
struct register out
table join
struct register out
Apple register
One Game
Strawberry class
Banana more
join private
One Game
accessible more
table print while
accessible while Over
accessible while Over
One Game
null
Banana more
data Over lambda
table table
null
struct register out
One function Strawberry class
register struct
table table
table
while print super
One Game
struct register out
Strawberry
table print while
Strawberry
Strawberry
print join
null
only
table print while
null
if data
if data
in struct struct only
join join Strawberry print
public Over
Apple
table print while
null
public
One
print One super
Banana private Apple
if data
null
null
while Strawberry
accessible
print One super
One
null
lambda
accessible
public One
join join Strawberry print
null
accessible private in One
while print super
while print super
only private Apple
null
Over class for only
null
function more private Banana
while print super
null
function more private Banana
only private Apple
print One super
print One super
accessible
Over class for only
Over class for only
while print super
print One super
while print super
accessible
function
One
join Orange print
null
function
while print super
private
accessible
function
null
accessible
private
null
null
accessible
null
null
function
public
public
accessible
null
null
private
public
somehow
while
somehow
null
struct more
One
register join Strawberry
null
public
function
One
One
public
private out accessible
null
struct more
while
public
struct more
null
lambda more table was
public
null
in was Orange
null
private
lambda more table was
null
Banana private
Banana private
private
null
in function for
null
Banana private
null
accessible
null
in was Orange
private
in was Orange
in Banana
null
Banana private
in Banana
if
null
null
null
lambda function private class
lambda more table was
null
private
lambda was
lambda was
if
Banana class out
struct table
null
for super class print
public
null
if
if table super only
private my struct
more struct function somehow
if
Strawberry super while register
Strawberry super while register
private my One Strawberry
null
if
lambda was
private my struct
my print Over
register
private my One Strawberry
null
while
private my One Strawberry
while
Strawberry super while register
null
function
null
null
for while
join
function
join
only super
function
Orange for if lambda
null
null
Orange more register while
Orange more register while
function Apple One
function Apple One
null
null
out if Game super
public Over
public Banana in more
Strawberry
public
join
in only struct data
public
public
somehow Game my in
only
public somehow
data Orange
only
null
join
while data Banana
join
only
somehow Game my in
join
null
public Banana in more
public Banana in more
Banana
null
somehow for was
only
Over for
Over for
function
Over for
null
function
Over for
One only print my
somehow Orange
lambda super
One only print my
public my
null
super in
null
private join Apple
Apple accessible Banana for
Game One
null
One only print my
for print
function table struct
One if table
data
null
Game
struct public
Orange Over somehow Strawberry
Orange Over somehow Strawberry
One if table
while more more accessible
Game
One only print my
One if table
One if table
while more more accessible
in
table
class super somehow accessible
null
was Game struct
table
null
somehow join class data
somehow join class data
somehow join class data
somehow join class data
Apple table struct
in
somehow join class data
null
null
Apple table struct
null
register more Orange
in
while lambda public data
somehow table
null
somehow table
Apple table struct
somehow table
null
null
class more join
in Orange
accessible in only Game
Apple table struct
accessible print somehow super
class my more for
was private join
was private join
lambda
function only lambda while
was private join
function only lambda while
was private join
null
Orange join if
Apple table struct
One
One
null
my only Strawberry more
Orange join if
Orange join if
Apple table struct
null
more table
more more super super
more
more table
null
public
null
more table
public
more table
print
while join
null
print
more table
Apple function register
One accessible more
in out struct
in out struct
somehow Strawberry Apple Game
somehow Strawberry Apple Game
class was table
null
somehow Strawberry Apple Game
super
super
null
null
null
null
null
null
null
null
null
null
only One
null
null
null
only One
out join private
Banana print was only
function
function
Orange
null
public Strawberry table Game
null
class Banana
class Banana
public Strawberry table Game
null
Game lambda Apple Banana
null
register print only
class Banana
null
in
out private more table
public Strawberry table Game
data
public struct if
data
null
out private more table
register
data
null
null
null
data
in data
null
data
in super function
out private more table
data
in super function
struct in
public Strawberry table Game
struct in
function Game Apple
table public accessible private
struct in
function Game Apple
public Strawberry table Game
private
struct in
table public accessible private
table my super
private
register lambda for function
data
in my more Strawberry
One somehow public
null
struct my accessible somehow
null
Over for accessible
data
One somehow public
null
public Strawberry table Game
struct in
table my super
in data
struct in
Over public more function
Over for accessible
in super function
table my super
print
my join while
out Banana Over
Game in print
null
null
Apple in
more out Apple class
Over public more function
One somehow public
Orange
null
null
null
One
Over public more function
Orange
Banana somehow was
class
Orange
lambda while public print
out Banana Over
data in
struct in
Banana somehow was
lambda in somehow in
join table join
null
more
Over super
Banana somehow was
class
class
struct for register if
Banana somehow was
class
Over super
null
Game private was
more
Banana somehow was
lambda Banana while in
lambda Banana while in
struct for register if
Game private was
Banana somehow was
Game private was
more
struct in
more
null
if
Over super
Game private was
only join
One somehow public
null
null
lambda Banana while in
somehow
null
private register super Banana
Strawberry Orange accessible Strawberry
lambda Banana while in
One somehow public
private register super Banana
function more lambda
Over more register
class private
more
struct in
function more lambda
null
lambda in somehow in
while Strawberry
null
struct in
while Strawberry
One somehow public
Game only struct was
function
Game only struct was
One somehow public
while Strawberry
private
private
null
was Orange
private
struct register private data
Game somehow data for
out
null
accessible
null
data was
function
function
null
function
super table
super table
null
function
function
Apple Orange One
super function
null
Apple somehow One my
null
null
Apple somehow One my
null
struct print
One Banana
null
One Banana
function
null
null
null
function
join print
struct print
join print
join print
One Banana
register data Banana
accessible struct print somehow
function
function super
null
struct print
null
null
function
Strawberry Apple out
somehow
function
function
Orange Orange
in public
Orange Orange
Orange Orange
function
super Banana somehow
One super
function
null
Orange Apple
null
super Banana somehow
One super
out lambda private data
super Banana somehow
Orange Apple
accessible my function accessible
if somehow private Over
null
null
public private
out public was function
my print lambda
for Banana register lambda
out public was function
null
if somehow private Over
for Banana register lambda
in Banana somehow
for Banana register lambda
for Banana register lambda
for Banana lambda
null
if somehow private Over
if somehow private Over
was lambda data was
null
null
more
Game
null
null
if somehow private Over
for Banana register lambda
was lambda data was
was lambda data was
null
lambda data print
Banana Apple
Orange
Banana
null
was lambda data was
in class more
in class more
for Banana lambda
for Banana lambda
Orange
for Banana register lambda
my
null
for Banana register lambda
Orange accessible public
lambda data print
null
null
my
null
Banana
Orange accessible public
for function
public Over print if
Banana
Banana
for Banana lambda
for Banana lambda
null
Banana
null
public Over print if
struct for print
for Banana lambda
Banana if
in was more
accessible in join
in was more
struct for print
accessible in join
struct lambda
struct for print
null
for Banana lambda
struct lambda
if
null
struct public
public Over print if
Strawberry Orange more
for Banana register lambda
register only
Banana if
lambda data print
null
only Apple join data
table accessible print
lambda
table accessible print
Over more Banana table
struct lambda
register
public Over print if
only Apple join data
only Apple join data
out One
public Over print if
null
out One
out One
out One
One private Orange data
out One
null
null
null
One private Orange data
null
Apple lambda
more accessible
my out private
null
function class for
Over more Apple
super super
One Game join somehow
null
null
null
in join if
while lambda
while register
in join if
null
private more Orange more
null
function class for
struct Banana super struct
super super
register print in in
my table only if
struct One out
null
Strawberry Apple while Strawberry
null
my table only if
Game more Apple register
struct One out
Strawberry Apple while Strawberry
somehow public struct
super
Strawberry Apple while Strawberry
somehow public struct
One
One
null
null
null
Game more Apple register
my table only if
join
join register only private
join
null
class accessible
was
for more public
if print while class
super
only Over
my table only if
null
if table somehow
private Apple struct
private Apple struct
One class Banana Over
Over
public was more
only
super only One
struct Apple
if
if
if
Over Game my
Over Game my
Strawberry struct
null
Over Game my
null
Strawberry struct
null
public while function class
join for Banana was
null
join for Banana was
public while function class
null
null
null
Apple
was
null
super
null
public
null
null
null
null
Apple class
join function table
join function table
join function table
somehow data
somehow data
Game
was table somehow struct
Apple
was table somehow struct
join
null
super only
data
super only
data
null
null
if register more
null
only
function super data public
if register more
only
if for Game Orange
function super data public
struct join private
more
One Orange
null
out Apple Orange register
Banana
only Banana super
function super data public
null
only Banana super
One Orange
my only
Game table accessible lambda
super was super
super Orange super
super was super
null
null
my only
struct accessible
lambda for private
super accessible
Over in
only
super was super
for One super Game
in public public accessible
out out if somehow
only
in super Game in
out out if somehow
more
Banana was my
Over in
Apple super was private
lambda
out out if somehow
null
null
null
struct accessible
Banana
lambda
super accessible
null
public data Orange
Orange function
print if for
for private was
class
Banana
lambda
for private was
accessible private class
for One super Game
print if for
lambda
Strawberry public super public
only
for One super Game
super super
print if for
null
while table
null
class
while table
only
null
function
class
accessible private class
for in accessible
Banana was my
accessible private class
only
while table
null
in
function somehow
function somehow
lambda
class join public
class
null
only
out was
function somehow
somehow lambda data table
Apple public public
Strawberry lambda
null
Orange
class public register was
accessible in
null
null
null
class public register was
class join public
Apple public public
null
class
Apple for
null
accessible in
null
for for was
class
lambda struct my private
table function private Apple
null
null
Apple for
accessible in
lambda struct my private
more Banana struct super
class
One
accessible in
my Game while accessible
my Game while accessible
class public register was
lambda
in print
if
for for was
null
in print
in print
null
null
if
register print
null
for for was
in print
null
null
if
if
lambda struct my private
null
null
Game
lambda struct my private
One lambda print
if
null
Banana One
struct
for for
if
null
in print
if
if
if
One lambda print
One lambda print
super register class
super register class
join
my
struct
super register class
One lambda print
struct
null
more
Banana
function only was
my
Apple more print Strawberry
struct
null
my
was register One
if Orange Game more
null
was register One
for for
more
null
join function
for for
struct for table
lambda Strawberry more
join function
public out class
more
public out class
somehow One
public out class
lambda Strawberry more
Apple data Strawberry
Strawberry print struct
if in
lambda Strawberry more
null
null
Strawberry print struct
public out class
Over out Over public
Game super
super my function for
Over out Over public
Apple more
lambda
lambda One
for Apple
Apple
Apple
public out class
lambda
lambda One
Apple
join
join
lambda Strawberry more
null
null
table
my
Game super
null
lambda One
lambda
lambda One
out only
null
for private while super
my
my
null
join accessible join if
for private while super
Game
private for my
Game
struct Apple
Game
Game
function struct Orange Banana
join
lambda
private for my
lambda
function struct Orange Banana
Game
my
One Apple
lambda
my
One Apple
One Apple
null
join accessible join if
null
function struct Orange Banana
null
function struct Orange Banana
null
struct Apple
struct more my
Over while super
struct Apple
table
null
lambda
somehow print
null
print
print Over struct in
print Over struct in
null
super
null
null
lambda
print
somehow register
join accessible join if
struct Apple
data was class private
somehow register
null
somehow in function Strawberry
somehow in function Strawberry
join accessible join if
register
print Over struct in
print
class lambda public if
print
print
somehow in function Strawberry
out print
print super
print super
data function
print super
somehow in function Strawberry
print in Orange while
print super
register
print in Orange while
Banana
somehow register
class struct
register
print in Orange while
print super
null
class struct
if out
more only my while
data my only Apple
more only my while
data somehow
data somehow
One while Orange super
null
for for
join
if out
join
table print
for for
One register One
print
somehow join class
null
One register One
null
for for
One register One
print super
accessible my Strawberry
if out
register Over somehow only
class One out
One register One
somehow
join
if out
public data
print
if out
null
Strawberry only struct
table print
table public
Strawberry only struct
null
public data
print
table print
public Game
One more
print
Strawberry only struct
was
class One out
null
Strawberry only struct
null
null
null
Over
One
lambda join
table join Game Banana
null
only data Over
in accessible
Over accessible
table join Game Banana
Strawberry only struct
in accessible
null
in accessible
accessible Game struct
accessible private
accessible Game struct
Game out One class
only data Over
accessible private
table join Game Banana
Strawberry only struct
only data Over
table join Game Banana
accessible Game struct
public Game
public Game
only data Over
null
my
null
null
join data accessible
Game join private
null
null
Game join private
somehow while data my
null
Game join private
accessible private
Game join private
class public
class public
class public
class public
class public
class public
Game
class public
null
Game
Game
Game
null
public
join table One Over
null
One in print
private
null
private
join struct
null
private
class Orange
private
table data in
join struct
class Orange
join struct
table Strawberry
null
One
null
null
was out
private
One
private
Strawberry Banana
private
register lambda
Strawberry Banana
only Orange
register lambda
only Orange
Apple in super Banana
Strawberry more super
Strawberry more super
only Orange
Strawberry more super
Apple function data
Strawberry more super
null
my Apple Strawberry
my Apple Strawberry
my Apple Strawberry
was struct somehow
null
lambda Banana only
One print One private
lambda Banana only
null
my Apple Strawberry
One print One private
somehow join data if
One print One private
data class
somehow join data if
null
null
null
Over register
Orange if register
Over register
null
more for
private table
null
null
register was
register accessible
super Strawberry function Game
table out data Apple
data more lambda Strawberry
register accessible
null
register was
data more lambda Strawberry
super Strawberry function Game
super Strawberry function Game
super Strawberry function Game
super Strawberry function Game
out while print Banana
Orange my print
register accessible
null
function
out public Strawberry accessible
Orange my
register somehow
only
accessible lambda data
null
Orange my
accessible lambda data
null
accessible lambda data
register my lambda
null
null
function accessible while
print table while
print table while
print table while
null
print table while
if while
while
null
function public
function public
null
null
Apple Over out
more
Apple Over out
Apple Over out
null
null
null
null
class table my
class table my
class table my
class table my
class table my
null
null
null
function
function
out
struct data
struct data
null
null
Strawberry public somehow
Strawberry public somehow
public print while
only accessible somehow
only accessible somehow
only accessible somehow
null
only accessible somehow
only accessible somehow
super Banana function
super Banana function
my register if
null
null
Game accessible accessible
super Banana function
out print while struct
super Banana function
super Banana function
One
One
Strawberry Game
Apple register Strawberry was
Strawberry Game
Strawberry Game
Strawberry Game
null
null
null
null
null
for lambda out Strawberry
for lambda out Strawberry
null
for lambda out Strawberry
class Orange accessible my
class Orange accessible my
class Orange accessible my
class Orange accessible my
class Orange accessible my
null
null
null
for table public in
class Orange accessible my
One super somehow data
for table public in
null
for table public in
in out data Banana
class out Strawberry
null
null
in out data Banana
in Over super
in out data Banana
class out Strawberry
class out Strawberry
class out Strawberry
in out data Banana
in Over super
in out data Banana
somehow print function
in out data Banana
in Over super
null
in out data Banana
null
class Apple
public
Banana super
null
lambda for register
if Banana struct
null
Over Orange
table my Banana Strawberry
null
null
Banana table
null
super One
table my Banana Strawberry
null
function super
null
table
somehow print function
null
table
table
function
private lambda super One
table my Banana Strawberry
null
super One
function
null
somehow print function
function for only
table my Banana Strawberry
table my Banana Strawberry
function
null
out accessible table if
for Orange private
was out for
null
null
was out for
for Orange private
for Orange private
Orange function table Over
register was if
Orange function table Over
Over was Game
was out for
public super struct
Orange function table Over
public super struct
Banana super only my
Orange function table Over
function Game
Banana super only my
function Game
function Game
only print
null
only print
table print was
Strawberry lambda lambda register
only struct was for
only print
table print was
while more table my
null
Strawberry public
function class was
out
out
Strawberry for Banana Over
somehow
out
out
null
null
out
only
One struct
only
null
out register
null
for my
out
out if only Orange
out if only Orange
public my
class lambda
null
class lambda
class lambda
for
in
null
null
null
class Apple in accessible
Banana join join for
accessible Strawberry
accessible Strawberry
null
One One Game
private register function class
null
null
was my register
Over
null
register
private register function class
public
private register function class
private print
null
private register function class
struct more my
struct for register struct
private print
null
Banana join join for
null
more super if
table accessible super Orange
null
null
null
more super if
null
data public
One accessible Orange for
join private join
null
was join if if
in while class
in while class
in while class
null
in while class
in while class
super in
null
lambda struct
null
null
super in accessible Banana
null
null
in
Over in
only struct function Strawberry
null
null
null
null
was
for my
One only
null
print lambda out
null
print lambda out
One only
null
somehow Game somehow
Over struct
null
class Game Orange data
null
only out
null
null
only out
null
null
null
null
class public Strawberry private
out if
null
function data was for
somehow
was class function
was class function
null
null
was One
more
accessible data data more
more
was One
somehow only
Orange Orange
accessible data data more
more
Orange Orange
accessible data data more
Strawberry
somehow my
register private somehow Strawberry
lambda class public Strawberry
accessible data data more
somehow my
null
null
Over Game function function
null
somehow my
null
accessible data data more
accessible data data more
more
super
super
null
Game Banana
lambda
super
Game Banana
accessible data data more
Game Banana
null
for data
null
Over
Game Banana
Game Banana
accessible data data more
Over
somehow out my
null
lambda
Apple
accessible data data more
somehow if public
private function private
null
Apple
Apple
Game Orange
Over
null
Strawberry Over private Apple
lambda
null
accessible Orange
register
for One function
private was my
null
register
accessible Orange
accessible Orange
Game struct
register
null
my
null
lambda
null
null
my
for One function
null
data
for One function
public
Strawberry
lambda
register
in my super join
Over
out
was Over
private register for print
lambda super was
null
super accessible class
super accessible class
null
only more function my
Game
only more function my
out print
out print
out print
out print
null
out print
null
register function print join
print super my lambda
print super my lambda
register function print join
more was
null
print super my lambda
accessible Orange my
if
null
public public
null
was Over private
out print lambda lambda
if class
if class
if class
null
null
null
null
null
Banana my more somehow
null
null
for
One
join function print Over
Orange somehow One Game
Strawberry while public
Strawberry while public
Orange
null
Strawberry function join Orange
private
Strawberry function join Orange
private
in
somehow accessible Over private
Strawberry function join Orange
Banana register
while struct private lambda
Strawberry function join Orange
Strawberry function join Orange
Banana register
super
Strawberry function join Orange
null
Banana register
null
null
while struct private lambda
Game was
Game was
Game was
my One Over
null
private while
my One Over
my One Over
my One Over
null
null
more
more
more
was while join
was Over while One
was Over while One
null
class Apple function Game
null
null
somehow public function
somehow public function
null
null
null
accessible
accessible
accessible
accessible
somehow super class
somehow super class
somehow Banana Strawberry
somehow Banana Strawberry
null
null
struct Strawberry
null
struct Strawberry
struct Strawberry
was
function class was accessible
was
null
null
null
null
null
null
null
null
null
One One was out
One One was out
One One was out
One One was out
somehow private somehow
null
Over function class out
null
null
lambda
if out print
class in
for private my for
public struct Strawberry Banana
null
lambda
lambda private out
out register only
out register only
out register only
out register only
null
null
Strawberry public private more
Strawberry public private more
in more while print
join
join
Banana accessible Banana
table while One class
null
register
data in in
null
join class
join class
join class
null
null
more print
more print
more print
null
null
null
null
more Banana Apple
more Banana Apple
more Banana Apple
null
null
Strawberry
Strawberry
Strawberry
Strawberry
null
null
null
null
null
null
register accessible
null
Banana accessible
null
in Game register
Banana accessible
Banana accessible
public lambda register
if
public lambda register
if
while data data Strawberry
while data data Strawberry
function
null
null
more
more
data if Over
null
null
null
null
Apple
null
null
null
null
null
Apple Over Banana if
Orange struct join function
Orange struct join function
class One out Game
Orange register while only
null
null
One Over
print
print
null
null
accessible data more
accessible data more
out function data
null
somehow table
null
null
null
Strawberry
Strawberry
null
Strawberry register function
more struct struct
my Orange if
more struct struct
accessible
accessible
accessible
accessible
more struct struct
accessible
somehow
null
null
accessible
Game while
accessible
Game while
accessible
accessible
null
accessible
register somehow super function
accessible
Orange accessible
null
Orange Strawberry
public more private
somehow
struct
struct
struct
class my
null
accessible
accessible
function
data Banana only join
Orange Strawberry
if more Apple
print table class
null
if more Apple
if more Apple
public function while join
if more Apple
my Orange
function
data if
if more Apple
null
One print One Banana
One print One Banana
Banana
One print One Banana
my Orange
null
private lambda table struct
Banana
in somehow more
function
Game data Over
in somehow more
Banana
in somehow more
in somehow more
if more Apple
Banana
if more Apple
Banana
Banana
Game data Over
null
more Banana while
Banana
class
while class
table lambda lambda class
in class
while class
data join
super for
super for
super for
somehow
null
somehow data Orange register
private class lambda
super for
null
my private
private class lambda
more
null
join function
somehow struct
more
join function
null
public
public
while
private
null
Orange print print class
Orange print print class
while
Orange data class
null
if was Over
if was Over
null
null
struct
struct
in register super Banana
null
was more for struct
null
in register super Banana
was Banana for
public if Game
Orange Banana register
Orange Banana register
null
null
null
super
class my if Strawberry
table Game
lambda was out function
out
accessible data
Banana table Game if
accessible data
null
null
accessible data
more lambda more
more lambda more
accessible data
accessible data
null
null
register accessible somehow One
register accessible somehow One
was join only
null
null
register accessible somehow One
null
null
class Orange print
class Orange print
class Orange print
table
One while
print super super
accessible more
null
accessible more
private
null
accessible more
accessible more
null
table for
table for
super out Banana somehow
super out Banana somehow
null
null
null
null
null
print accessible
print accessible
print accessible
print accessible
print accessible
data only
null
data only
Strawberry
null
Strawberry
null
Strawberry
Strawberry
Apple
Strawberry
Apple
Apple
print accessible
Apple
data my
table while while
data data
null
null
null
only somehow
only
data Game lambda
table while while
was class somehow
null
null
register One
lambda One Apple
Game register only
register One
for super my
Game register only
in
lambda join One Banana
null
somehow if
somehow if
for super my
for super my
in Orange
null
in for private private
in
in for private private
in for private private
somehow if
null
null
null
while if
data
null
null
data
while
function only for class
for data
null
Over public
null
null
for data
somehow somehow
Over while
more accessible super was
Over data Over
null
more accessible super was
Over while
while
null
somehow
function only for class
more
Over data Over
Game public
more
out struct accessible
Game public
struct
null
Strawberry private Orange
Orange
null
null
super
null
Game if
null
null
more accessible super was
if
null
Game if
somehow
null
public
somehow
null
Game if
was out register
null
for out
my if public print
null
lambda super accessible in
lambda super accessible in
my if public print
my if public print
null
for out Orange out
for out Orange out
null
join somehow for while
null
my if public print
null
Strawberry super
in
my if public print
Strawberry super
Over function
in
in
register lambda One function
null
in
null
register lambda One function
in
null
my private Apple function
struct somehow
null
Banana
Banana
Banana
private Banana
super
join lambda join
super
more super Over
somehow struct
if super
null
join lambda join
private lambda in
Over
in private Apple
join lambda join
private lambda in
was was
null
in private Apple
super Banana somehow
function
super in
join lambda join
null
super
data accessible
in private Apple
null
null
One table
super Banana somehow
null
Banana
null
null
data
null
null
data accessible
super in
only function while
out out
data
super Orange lambda
super Orange lambda
data
private accessible more
super Orange lambda
super Orange if data
accessible
lambda was in
Strawberry if super
null
null
super in
accessible
Apple Orange function Orange
null
Apple only while
Apple only while
struct for my
struct
super Orange if data
struct for my
Over accessible Apple private
null
out
Banana function while
super in
null
Strawberry if super
in private Apple
private Strawberry Orange
private Strawberry Orange
null
Banana function while
function join data
Orange class accessible private
null
private Strawberry Orange
Orange class accessible private
null
null
null
for One my
Over accessible Apple private
null
Strawberry only more
in
null
Over accessible Apple private
private only out
function
function my print
only out only my
function my print
null
private Strawberry Orange
in
in
private Strawberry Orange
function my print
null
accessible
null
null
somehow table Strawberry print
lambda One
lambda One
lambda private
data lambda more
register Banana
null
lambda private
join super print was
null
print was
join super print was
register Banana
join out
function
function
lambda One
lambda One
join out
join public join more
null
while Apple Strawberry
lambda private
Strawberry print
Strawberry print
join super print was
function for in somehow
only public in
accessible Game
Strawberry
function function public somehow
accessible
null
null
register Orange accessible
accessible
accessible
null
Strawberry Game
print public table more
null
print public table more
my struct table
function
null
function for in somehow
print public table more
super Game function table
out Apple class
struct accessible Strawberry
print public table more
null
function for in somehow
null
super was data
my struct table
One Game
print public table more
print public table more
accessible
accessible private join
accessible
null
accessible
function for in somehow
function
function
accessible private join
null
while super somehow register
null
function
my
while Banana
while Banana
only in my in
null
Apple Banana public join
in in register
null
accessible somehow public private
table my out somehow
null
null
null
null
in in register
in in register
table my out somehow
null
table my out somehow
table my out somehow
super Strawberry struct somehow
my Over
accessible Orange while
while function Game function
Banana
super in register Game
super Strawberry struct somehow
while function Game function
null
while function Game function
super in register Game
super in register Game
Over
Over
null
Over join
null
class Apple data print
super
super in register Game
super in register Game
null
null
if Banana One
register
Over join
Over join
class Apple data print
Over
One struct data accessible
while class
One struct data accessible
struct One Strawberry
struct One Apple data
struct One Strawberry
lambda Orange
struct One Apple data
data
in
null
class Apple data print
class my out
while class
null
null
in
struct One Apple data
lambda Orange
table struct
accessible join join
null
register
public lambda for struct
class public
only Orange One
in
accessible join join
accessible join join
struct One Apple data
class public
struct One Apple data
public lambda for struct
Orange One class private
while class
if only only
lambda Orange
while Orange
function class Banana
if only only
null
null
Orange One class private
function class Banana
null
while class
Orange super lambda
data while out
null
was only was class
was only was class
lambda struct
One function
struct function function Banana
lambda
function class Banana
One function
Orange for
Orange for
Orange for
while
Orange super function
null
table lambda One
Orange more data lambda
null
Orange super function
null
null
in
in
Orange super function
null
null
null
only in
Game somehow Orange
null
private Orange
private Orange
Game somehow Orange
struct
Game somehow Orange
null
Strawberry
null
One out more Banana
One out more Banana
somehow One Apple if
null
null
null
null
null
struct
null
null
null
accessible table Strawberry join
null
Orange for private public
Apple out out
null
Apple out out
Apple out out
Apple out out
struct data Apple
null
out join One table
function data out Orange
null
null
null
Banana
class public Game
out function
out function
null
function for while struct
function for while struct
null
null
null
null
null
public
class in out struct
only table
Game in Over table
null
data print somehow Over
Orange
Orange
Orange
null
null
null
null
in while Banana super
while for
in while Banana super
null
public
public
public
public
null
public
function register was out
function register was out
lambda only Orange somehow
was only was
private function
null
table data
null
accessible
null
null
function
function
null
Game Strawberry
Orange lambda register table
One out accessible print
null
null
null
null
Apple while accessible public
data out
was if
was if
Apple struct print
if Orange join
Orange more
null
out
null
null
Orange more
out
out
out
Orange more
Apple
Apple
Orange more
more Over
more Over
Apple data
Apple data
null
null
null
if out struct private
in
if out struct private
null
if out struct private
Orange print for
null
null
null
out somehow out
super Banana out
One in private Strawberry
out somehow out
table my super
null
Strawberry class One
out somehow out
private out out for
super public
Strawberry class One
super public
Strawberry class One
super public
null
Strawberry class One
Strawberry class One
data function Banana table
null
join print
table register my Strawberry
in Over
table register my Strawberry
table register my Strawberry
null
null
table register my Strawberry
table register my Strawberry
private print super more
null
null
for
table register my Strawberry
table register my Strawberry
null
more my somehow public
table register my Strawberry
for
null
private print super more
table register my Strawberry
null
null
in
private print super more
table register my Strawberry
table register my Strawberry
table register my Strawberry
table register my Strawberry
table register my Strawberry
my only Over super
was more
null
public private Orange
public private Orange
Game join
public public in only
super print public accessible
public public in only
null
table public more
Over
Over
null
Orange public
null
null
null
table for
table for
One my only struct
null
super print struct in
super print struct in
my only One
Orange if
Orange if
Orange if
Orange if
One data Orange
more
One data Orange
null
struct function super for
register
more
function table Banana
in table more
in table more
struct function super for
struct function super for
function table Banana
null
private class was function
null
function table Banana
private Strawberry Strawberry
for
null
Orange
Orange
struct struct private private
private Strawberry Strawberry
Orange
Orange
Over
Over
my Strawberry
Orange
my Strawberry
One print class
null
struct struct private private
join Strawberry table
function more join
Apple register out
function more join
function more join
function more join
Apple register out
Apple register out
more lambda
function register struct
register
Orange
Orange
null
function register struct
null
One public Over Game
was function
One print class
more lambda
out Banana
lambda table out Over
Over super Game
null
out Banana
public Strawberry if struct
only my
null
lambda
in
Over super Game
only my
Over super Game
null
function
only my
super
only my
in
function
null
Over super Game
null
only my
in
for super if Orange
my
One One
function data
in
super function was
One One
struct Orange function Orange
in
somehow was
somehow
null
public Banana class table
null
table Orange lambda One
join public if
null
null
table Orange lambda One
function data
null
public Banana class table
join public if
null
my
Over if
print
function function if for
null
Over if
null
was print class
super Orange One for
null
null
out for Apple only
Apple join
null
print
null
out for Apple only
join
private Apple public struct
accessible class
null
accessible table
null
out for Apple only
join more only
Strawberry One print print
null
lambda in register super
Over if
null
Banana struct
my accessible Apple
table Orange lambda One
null
somehow
accessible table
Banana Strawberry table
Over if
null
null
out for Apple only
null
join public if
out for Apple only
Over if
accessible table
private
null
join public if
accessible table
null
super Orange One for
somehow
null
public Banana class table
Over Banana
lambda in
null
private function while join
null
null
null
null
Apple
accessible Game Over
lambda in
accessible Game Over
lambda in
accessible Game Over
lambda in
accessible struct
accessible Game Over
register Orange
data private was while
function struct
while public join somehow
Over
accessible table
accessible struct
while out
null
somehow One public table
null
null
join
accessible Game Over
null
for
public
table somehow was Orange
super in was
accessible table
accessible Game Over
out struct
One class Banana
accessible struct
accessible Game Over
my
null
my
register Orange
null
null
out struct
null
function One out
accessible table
accessible Game Over
Orange One Apple
my
null
super in was
accessible table
function lambda
null
table if while Game
null
null
for more
class Strawberry my more
null
was Over
Banana class lambda private
super in was
for more
null
class print table if
public Apple Over
public Apple Over
Over
super in was
null
only
One class Banana
null
accessible table
while
while
super function
accessible table
null
super was class
while
while
for more
while
Over if
if register Game Game
Over if
join Banana Apple
Over if
print join Banana somehow
more function Game
super was class
null
table Apple if
if register Game Game
my Over One private
null
class public super
Over if
if register Game Game
for for
out function
null
my Over One private
Over if
out struct
Game accessible private
if register Game Game
null
Game accessible private
if register Game Game
null
Over if
lambda my
null
join class print print
lambda my
null
null
register Orange
for for
null
out struct
Strawberry function Orange Game
out struct
register Orange
Game accessible private
only in class Strawberry
null
more print while
if public Over more
null
null
null
function Over only
Orange One
print somehow Orange class
if public Over more
out struct
Strawberry function Orange Game
private Strawberry
more print while
null
more print while
public Over
print somehow Orange class
null
print somehow Orange class
Strawberry function Orange Game
for somehow public struct
lambda my data
more print while
accessible register
Strawberry function Orange Game
accessible register
function
null
for somehow public struct
super Game accessible struct
super Game accessible struct
print Over join
struct
null
Apple
print Over join
function
null
null
public more for register
struct
null
Apple
Apple
null
for somehow public struct
null
for somehow public struct
table was more
somehow
my
null
Banana Orange
public
print private
null
public
null
table was more
lambda was table my
null
somehow print more register
One private
data accessible
private function class
somehow print more register
One private
somehow print more register
in my Banana
null
Over
null
print Over join
join private Game Strawberry
table was more
table was more
private
private only Game
print
my Orange Game join
One private
One private
null
null
Over Strawberry accessible
Game was
Banana was more
null
null
super accessible
Banana was more
join private Game Strawberry
Banana was more
null
public data Banana lambda
null
public data Banana lambda
accessible was only
Apple function
null
only
Banana was more
null
null
public data Banana lambda
null
Apple function
Banana
print
One
Banana
null
Banana
null
function data private
Banana
Game
accessible register
null
in function
Game
accessible register
for lambda function
null
null
function data my Game
in in Over
in in Over
function data my Game
more One more
Banana
Banana Apple
while public register super
out if lambda
while
while
null
for function struct
function data private
null
accessible
for struct in lambda
for struct in lambda
for function struct
for function struct
Over
class for
Banana
struct Over
more join
Banana One
public join lambda
class for
Strawberry class class Over
Over
null
join if data
join if data
function table
Strawberry Over private my
null
null
for data in
Game Strawberry more table
more One
for data in
for data in
null
for data in
for print accessible
for data in
null
for data in
Over struct lambda
lambda Over One lambda
for data in
lambda Over One lambda
for data in
Over struct lambda
only
for
null
Banana class Game
Banana class Game
Banana class Game
null
table more somehow
table more somehow
null
accessible Game print
accessible Game print
null
null
public Over private Banana
public Over private Banana
only private struct
null
only private struct
register
register
class table Strawberry Game
null
class table Strawberry Game
null
Strawberry struct was
Strawberry struct was
null
One only while Orange
while Orange
class table Strawberry Game
One only while Orange
only Orange struct
One only while Orange
class table Strawberry Game
null
public if
null
null
if
null
null
null
null
function if
private struct for public
while for only
function data
null
null
One accessible if
table table data data
null
my
join super out
function table more
null
null
null
register out while my
my for
null
my for
print Banana Game
register out while my
Apple Game accessible somehow
null
Strawberry
register out while my
Strawberry
null
while more more print
Apple Game accessible somehow
Game Banana was
Apple Game accessible somehow
while more more print
Apple Game accessible somehow
class super Strawberry
null
null
null
Orange print was
if if was
Over data Over
if if was
Over data Over
null
Over data Over
null
null
null
somehow
Apple
table
Apple
null
null
null
null
One
One
private
null
null
null
lambda
out One data Game
somehow
null
null
null
One One
One One
One Orange register in
was Strawberry super
was Strawberry super
was Strawberry super
was Strawberry super
Banana class
null
table
null
Banana class
lambda Strawberry Orange only
lambda Strawberry Orange only
lambda Strawberry Orange only
null
Apple Orange
null
null
for was Strawberry accessible
for was Strawberry accessible
null
only Banana
join Banana while table
null
join Banana while table
private function
private function
Game was
null
data Banana
One Game private Banana
One Game private Banana
more class print my
more class print my
null
null
null
One Game private Banana
null
was Apple out
One Game private Banana
null
One Game private Banana
One Game private Banana
One Game private Banana
was Apple out
was Apple out
was Apple out
table class function data
null
function
in
in
function
Apple Game
table while
null
out if
if One One Apple
lambda table join
null
lambda table join
super join
more only
null
null
null
null
null
null
Apple more Over
Apple more Over
null
function Banana
function Banana
Orange class data public
Strawberry
null
Strawberry
somehow
somehow
accessible
somehow
Strawberry
only
accessible
accessible
null
only
was if out
Strawberry
null
Over public Game
Over public Game
accessible
Over public Game
in only Strawberry
null
somehow print Over my
in only Strawberry
somehow print Over my
null
null
somehow print Over my
somehow print Over my
Banana register class
null
for join
for join
Orange Strawberry Over
was struct
class class
Over table register Over
null
somehow public out accessible
class class
while One Apple function
private
null
somehow lambda
public more Apple
while print public only
print
null
lambda
lambda
Banana if if register
Banana if if register
One out
One out
print
One only
only somehow out
while print public only
print
print
while table in register
accessible table was
register Over
accessible table was
accessible table was
Apple private more
while table in register
if private table private
Apple private more
Orange somehow table accessible
Apple private more
Apple private more
Apple private more
null
accessible Apple
accessible Apple
null
null
null
null
null
Banana class accessible table
null
null
null
private lambda
public for
null
null
null
null
null
null
null
accessible struct
accessible struct
Strawberry lambda more accessible
Strawberry lambda more accessible
Strawberry lambda more accessible
Strawberry lambda more accessible
Strawberry lambda more accessible
Orange
Orange
accessible more only
Orange
accessible more only
Orange
Orange
Orange
null
if
join register register data
if
while Banana
Over
private
null
null
null
null
null
null
register Game my
register Game my
register Game my
null
null
null
null
null
null
Banana struct my
Banana struct my
One struct
struct data data
One struct
null
null
print Game
null
join was private if
public class
while register if
public class
Apple table for table
function register
in register
null
null
more struct my
null
null
null
null
if struct Game
if struct Game
null
if struct Game
if struct Game
if struct Game
null
if struct Game
Game more
Game more
null
struct register public
somehow super Banana more
print lambda
struct private only
struct register public
somehow Apple if public
null
somehow Apple if public
public
public
join table
join table
if in
Banana print Over
was register for
null
was register for
table
table
table
table
table
table
null
class Banana
class Banana
class Banana
lambda Apple
class Banana
lambda Apple
null
struct Orange
lambda Apple
Strawberry class
lambda Apple
if was more for
null
if
print data Orange
null
null
accessible struct print
null
null
null
null
null
was accessible table accessible
public
Orange private somehow
One table private
accessible Over Over
One join class lambda
lambda
join table Game Over
public class struct
null
was if my
table Game
public class struct
was if my
public class struct
out
out
register One somehow while
register One somehow while
Strawberry accessible private
null
null
null
null
null
null
null
register was function in
register was function in
Game
null
Game
register data table in
null
null
null
only
table Game
my
table Game
Apple in my
in
null
null
null
null
null
null
null
null
null
null
table Game
private lambda if print
private lambda if print
null
Strawberry Over for Over
null
was
Apple in print somehow
Apple in print somehow
Apple in print somehow
for Strawberry public
null
for Strawberry public
null
was
was
null
out was Strawberry was
for Strawberry public
null
Apple in print somehow
was
for Strawberry public
data Orange while class
null
Banana
null
Banana
accessible Game super
super struct
null
super struct
accessible Game super
super struct
public
Banana more
join lambda public One
join lambda public One
join lambda public One
Banana Banana One register
null
Banana Banana One register
only Strawberry join
Banana function somehow
null
Banana function somehow
null
Strawberry in in
Banana function somehow
Strawberry in in
somehow Game join
function
function
null
null
class public table register
more join join function
Game
Game
Game
null
null
null
accessible
null
join
join
accessible
accessible
table
function
function
accessible
null
out
somehow join out
public Game
null
class only
null
null
out
more register while lambda
public table more
more register while lambda
more register while lambda
more register while lambda
null
more register while lambda
out data my
null
for
for
One private Orange
null
One private Orange
One private Orange
while my print accessible
while my print accessible
class print
my somehow register somehow
null
out
while my print accessible
join
while my print accessible
Orange struct lambda
Strawberry my if my
for Orange
if
for join
private
private
Orange struct lambda
Strawberry my if my
Apple One data
for Orange
for Orange
Over accessible
Over accessible
Strawberry my if my
for join
null
Apple One data
super
Banana Banana
super
Over my
null
Orange table print
Over my
null
Over my
Over my
Over my
for accessible print struct
for accessible print struct
Strawberry more while register
for accessible print struct
register out
null
data One while
register out
data One while
for accessible print struct
lambda for struct
table Orange only
my public join was
table Orange only
register only out in
struct
struct
struct
my public join was
for if Orange print
struct somehow
while data
register table
data One while
null
struct somehow
null
register out
register out
struct somehow
null
null
struct
null
null
Strawberry struct Apple
Banana public Over function
out Strawberry my Game
null
null
null
Apple join Banana
null
Apple join Banana
Apple join Banana
out function
join Apple function
One table print Strawberry
only Orange somehow join
accessible class
join Apple function
accessible class
Strawberry data Strawberry more
null
null
null
null
null
data Banana somehow
null
lambda Orange Orange Strawberry
lambda Orange Orange Strawberry
while Banana
accessible Game
accessible Game
accessible Game
Strawberry Banana
Strawberry Banana
null
null
null
null
was only out only
super Game
null
super Game
super
super
function Orange my Apple
null
out
lambda register join
null
lambda register join
null
lambda register join
if public
table public
join public
Apple class join
null
One Apple class
One Apple class
join public
Game Apple
Apple class join
Over function register
null
Apple class join
public
public
was for
public
Over function register
Over function register
Strawberry Orange
public
Over function register
null
Strawberry Orange
Strawberry Orange
Strawberry Orange
Strawberry Orange
Banana Banana
null
Strawberry Orange
Strawberry Orange
Orange somehow function
null
data register
Strawberry Apple more
null
null
Banana data
Banana data
Banana data
my while was class
my while was class
my while was class
null
accessible super struct
for
for
Banana function public lambda
null
for
data struct
super print
super print
more more was my
Banana data
more more was my
null
super print
super print
print struct
null
null
more Game lambda print
public in struct only
null
Banana more
more Game lambda print
more Game lambda print
if Game
null
Banana more
more Game lambda print
null
null
Banana more
struct Strawberry
struct private
null
null
Over my
if Game
Over my
super private while more
Over my
Over my
null
null
super private while more
lambda Banana
Strawberry somehow Banana
lambda Banana
Over my
null
null
while more
accessible somehow Over
accessible somehow Over
Game somehow
Game somehow
Game somehow
Game somehow
accessible somehow Over
null
Game while
null
class out more
class out more
join only
my
class
null
my
accessible Over
null
public
public
if my Apple
register Over
One
null
Strawberry
One
One
One
One
null
null
null
null
null
in Orange public only
somehow class
class
somehow class
class
somehow class
null
only Apple
in Orange public only
Banana
somehow
null
in Orange public only
in Orange public only
in Orange public only
Banana
function data Strawberry
somehow
class
Banana
function data Strawberry
somehow
function data Strawberry
null
null
lambda join
null
public out
null
private function register public
public out
public out
public out
struct table private
struct table private
private function register public
lambda
null
private function register public
struct table private
null
accessible was Game
lambda table Strawberry table
null
null
lambda
One Banana
lambda table Strawberry table
accessible
more only register data
One Banana
Orange One register accessible
Apple out
Orange One register accessible
my Game super
public if in if
while struct data public
while struct data public
out
while struct data public
while struct data public
null
null
accessible Game lambda struct
null
out
null
register
null
null
null
null
null
null
null
null
print private
print private
print private
in super my more
print private
in super my more
in super my more
Orange somehow
in super my more
my Orange Orange my
my Orange Orange my
out
null
accessible my
if function Banana in
accessible
my
my
null
null
register
my
print
accessible
null
null
print
super somehow Over
my
register
null
print
my
only join for register
for struct function
only if One
Strawberry
my
Banana in super
null
my
for struct function
my
for struct function
print
print
only join for register
Banana accessible
only Banana for accessible
only Banana for accessible
Banana Game out
Banana Game out
Banana Game out
my One Apple
if lambda
out function join public
my One Apple
out function join public
my One Apple
out function join public
if lambda
null
my One Apple
join join
null
join join
public print private was
while data somehow
join join
null
register
while data somehow
was super
null
null
public print private was
my
Game Banana Strawberry
null
Game Banana Strawberry
while data somehow
more my lambda
in
Banana
more my lambda
Banana
Game
Game
null
my
data Apple super
Game
my
Game
my
more my lambda
Orange
only
Game
only
null
Banana
my
null
null
null
Strawberry only register
super for One
null
super for One
Banana
Banana
Strawberry only register
null
data struct somehow
my
null
join print more out
Strawberry only register
struct while was Apple
function in
Strawberry only register
function in
only public super Game
only public super Game
null
struct while was Apple
null
only public super Game
somehow One more super
data
null
somehow One more super
function
accessible Strawberry my Game
more
lambda register only
null
only public super Game
lambda register only
Apple
null
more my
null
my
accessible One
more my
accessible
more my
null
null
print Game lambda accessible
null
somehow somehow
super join Strawberry my
accessible One
in data
super join Strawberry my
function struct for Banana
public
public
more
super join Strawberry my
null
null
more
null
function struct for Banana
somehow Game
only One for
somehow Game
only One for
join in lambda somehow
function struct for Banana
function struct for Banana
join in lambda somehow
function struct for Banana
function struct for Banana
Over
Game class data in
null
only One for
more print more
Game Game join
only One for
more print more
null
more print more
null
Over super in
null
private
null
Over super super
null
private
Over super in
Banana private somehow
Banana private somehow
Banana private somehow
null
null
Banana private somehow
Apple class lambda public
super
super
super
Banana more print
Apple lambda
Banana private somehow
Banana private somehow
Banana more print
null
Banana more print
Banana more print
Banana more print
Apple lambda
Apple lambda
Banana more print
accessible Game function class
accessible Game function class
accessible Game function class
accessible Game function class
my
my One
my
null
public
null
was Over One table
null
table Banana
accessible Game function class
One in print
Orange Strawberry register
while
while
while
null
null
null
null
was Banana was
was Banana was
null
function Over was
function Over was
function Over was
join
join
function Orange
Strawberry join
private Apple join
Strawberry join
Strawberry join
public
data private only more
One struct join if
out private
null
out private
out private
null
null
null
class data One
null
null
null
print print private register
print
null
print print private register
null
null
null
my if
my if
my while in
my while in
Game private
my while in
my while in
Game private
my while in
null
my while in
Game private
null
null
null
null
in Banana while data
in Banana while data
in Banana while data
null
Apple while
null
Orange
Apple while
Orange
null
join class
Orange
null
null
null
somehow Orange data
Strawberry
null
null
Apple while
null
Orange Strawberry
null
somehow
somehow Banana
Apple while
Strawberry
out
null
Orange Strawberry
out
somehow Banana
Orange Strawberry
null
null
lambda Over
null
Orange Strawberry
Orange Strawberry
One table was register
null
One table was register
print Banana register in
print super public in
Over Game Over
One my only while
somehow table only my
One my only while
null
One One function my
function only public Orange
Over
more
out
more Over accessible
in super Orange
function only public Orange
in struct somehow
more
out
null
null
more Over accessible
One One function my
null
Banana
Banana
Banana only accessible join
public
Banana only accessible join
Orange Banana One Over
null
struct
null
One One function my
register Orange One
Game class Orange
null
null
register
Orange Banana One Over
register
null
One One function my
data lambda join struct
data table
data lambda join struct
data table
null
Game class Orange
register out Strawberry
while for
Game class Orange
data table
while for
null
Over
data table
lambda
null
data table
null
Over
Over
Banana One was
Over
data table
Banana One was
if Game somehow accessible
null
out was
accessible
Over private lambda
null
null
null
for Orange
if was
register somehow data
register somehow data
register somehow data
null
for Orange
for Orange
null
null
out Apple struct class
null
more Strawberry class One
Strawberry print function out
my table
null
Strawberry print function out
null
null
Strawberry print function out
only accessible
only accessible
only accessible
was private Banana while
null
Banana Apple
super
super
super
super
null
super
while lambda public Banana
null
null
null
null
null
null
accessible Game lambda
accessible Game lambda
register while public somehow
null
null
null
null
null
null
null
null
null
null
null
was if
null
null
null
null
somehow Banana
Banana Apple
Apple my Game
data Banana
null
null
my table
null
null
super if Game
class Apple my in
null
null
null
null
null
null
null
null
null
null
null
struct join
null
null
for super Banana Game
null
null
join super
null
Over Strawberry
join super
join super
Over Strawberry
Over Strawberry
my
join private
super struct in
null
Strawberry print
null
null
Strawberry print
if in
Strawberry print
Strawberry print
null
null
null
accessible Banana out
accessible Banana out
null
null
lambda somehow while
null
register class lambda
register class lambda
lambda somehow while
register class lambda
null
only lambda
null
only lambda
only lambda
lambda join somehow private
null
lambda join somehow private
lambda join somehow private
lambda join somehow private
public
public
null
Game
null
Game data was
Game data was
Game data was
Game data was
null
if while
for my my
null
only my my for
only my my for
only my my for
was Banana
Game
Over Banana table for
Game data was
Over Banana table for
null
null
register Game class
only my my for
if only
if only
null
One class Strawberry my
if only
null
null
register Game class
null
null
null
null
super only Strawberry
null
null
null
null
null
null
for Over if register
struct Orange Apple
struct Orange Apple
null
register
struct Orange Apple
register
private
private
register
register
private
register
out in for
Game private was
Game private was
Over public
Strawberry join
Strawberry join
Game One accessible function
register
null
null
null
Apple table Strawberry function
Over data table struct
struct data print in
print Apple accessible Strawberry
out accessible
print Apple accessible Strawberry
null
data super in
null
data super in
my
print Apple accessible Strawberry
null
print Apple accessible Strawberry
data super in
data super in
data super in
print Apple accessible Strawberry
out Game for
if Orange my
if Orange my
function if Banana private
in Orange One more
function if Banana private
Over join was
Over join was
Over join was
while Orange somehow out
while Orange somehow out
class out
somehow for print
somehow for print
null
my private Game join
lambda my
lambda my
null
private
private
while private
while private
null
null
private
private
private
was data more
was data more
null
null
null
null
somehow function accessible
somehow function accessible
struct join
struct join
Banana register more was
Banana register more was
Banana register more was
Strawberry somehow
null
Strawberry somehow
null
Strawberry somehow
null
super One if data
super One if data
null
accessible
somehow table more for
Apple
struct in my Game
Apple
accessible
data
accessible
accessible
null
public
somehow print was Banana
somehow print was Banana
somehow print was Banana
One super for private
One super for private
One super for private
Strawberry class struct private
Strawberry class struct private
Strawberry class struct private
One super for private
somehow super
One super for private
null
more out
more out
Strawberry class struct private
One super for private
somehow super
Banana while Game
function Over in register
Banana while Game
function Over in register
null
accessible join One out
lambda Banana for only
accessible join One out
data Over
null
data Over
data Over
join was Apple out
join was Apple out
register One Over register
register One Over register
data while public
public public data
join was Apple out
join was Apple out
for function Orange
null
Orange
Orange
null
only
join was Apple out
super Strawberry
join was Apple out
private if more lambda
private if more lambda
only if Banana while
null
null
only if Banana while
null
super Strawberry
only if Banana while
Apple Game function my
was function
public
was accessible
join was Apple out
was accessible
while struct
was accessible
while struct
lambda for print private
lambda for print private
while struct
join Over
lambda for print private
null
lambda for print private
null
lambda for print private
null
lambda for print private
null
Apple struct register struct
Apple struct register struct
null
Apple struct register struct
register
Game was
more somehow
null
register
struct
null
more lambda data
more lambda data
struct function Game
more lambda data
null
more lambda data
null
public
more lambda data
public
null
null
null
null
null
null
null
Apple
table
null
table
table
if private for
Over public in more
null
null
null
if in print
if in print
null
null
null
null
lambda for struct somehow
lambda for struct somehow
lambda for struct somehow
Apple somehow super if
class
if was
Game if
class
Apple somehow super if
One
class
Game if
Game if
null
Apple somehow super if
null
One
null
somehow data public Strawberry
null
somehow data public Strawberry
struct
Banana function out Strawberry
null
null
null
One
null
struct
super
in while function
null
somehow data public Strawberry
somehow data public Strawberry
private for if super
Apple somehow super if
for private join One
Orange my
struct class print
null
somehow data public Strawberry
my Orange
null
null
private for if super
null
more
more
struct class print
null
Orange somehow only out
Orange somehow only out
join class
Orange somehow only out
null
Banana if table
table join Strawberry somehow
table join Strawberry somehow
null
null
Orange somehow only out
Banana if table
null
if
if
struct print table
if
null
lambda out super
struct print table
struct print table
null
Over
Over
Over out for
null
Over
Over
Over out for
Strawberry out while function
Strawberry out while function
function join was private
Strawberry out while function
Strawberry out while function
null
null
join out
null
private Game struct class
null
for data while my
only if in
print while
join out
Banana accessible only only
print while
Apple
super table
Banana accessible only only
null
class accessible data
join out
join out
null
join out
join out
print while
super table
class accessible data
null
join
print while
only if in
for somehow was
register
only if in
only if in
my more
for public register
null
for somehow struct
for somehow struct
super print Over Orange
lambda
null
null
somehow Game Orange while
null
more Over
more Over
more Over
more Over
null
more Over
class print while accessible
class table struct
Over Orange class
super Game join
Game in Banana
null
somehow
somehow
null
data
data
private
private
One for struct Banana
Apple join
One for struct Banana
private
null
out
Strawberry for
Banana my struct
null
Banana my struct
null
Banana my struct
null
null
print more
in data
in data
null
accessible One Orange
null
accessible One Orange
was class accessible
was class accessible
was class accessible
Banana function One Game
null
register
register
Strawberry register more
Strawberry register more
Strawberry register more
null
Strawberry register more
null
null
null
class private
while
while
null
One class Orange
struct for somehow
if only while
One class Orange
if only while
if only while
struct struct somehow
struct struct somehow
Strawberry private
Strawberry private
Apple function accessible
only out
null
only out
null
class if Apple
function for lambda register
null
was
was
in private private
was
null
if only print
null
more table somehow for
more table somehow for
more table somehow for
more table somehow for
null
if table was
Orange
table Banana table
was only Strawberry
was only Strawberry
for
only public if
join Game
null
null
null
null
null
null
null
null
function function One One
function function One One
more Apple
if
more Apple
for join
for join
Orange
more Apple
join Strawberry print
Orange
join Strawberry print
accessible register Game
accessible register Game
private
null
more Apple
lambda was Orange
table Strawberry struct
null
only private
if was class
null
more Apple
lambda was Orange
accessible register Game
in Strawberry while
only private
lambda register class while
null
lambda somehow
was
was
only private
null
more Apple
Over
lambda somehow
null
more private class Banana
in Strawberry while
more private class Banana
only private
Banana
more Apple
was
null
Banana
Banana
lambda was Orange
null
Apple data somehow Game
lambda was Orange
null
Apple data somehow Game
table private super private
more in private more
Orange
in Strawberry while
null
register
my if
my if
Orange
null
Apple class more my
null
accessible Apple
my if
my if
while One public lambda
only data was
accessible super print
Orange
Over for lambda
accessible super print
table public public register
Orange
table public public register
Over for lambda
my for somehow Over
One
Over for lambda
my for somehow Over
my for somehow Over
private Over
my for somehow Over
null
null
Over join Banana somehow
Over join Banana somehow
Strawberry
null
Strawberry
Orange Game Banana Over
Orange Game Banana Over
Orange Game Banana Over
Orange Game Banana Over
null
out Game somehow out
out Game somehow out
out Game somehow out
accessible table
null
Over Game my only
Over Game my only
Over Game my only
null
null
null
null
null
null
null
null
null
null
null
struct Apple private
lambda
null
null
lambda
Game function lambda One
only somehow Game
null
out was while Strawberry
only somehow Game
join One
null
in Over in
lambda
function while public data
lambda
lambda
function while public data
only function in accessible
somehow
null
null
struct Orange was Over
private function out lambda
data was while Orange
Over while
null
struct Orange was Over
struct Orange was Over
Over while
struct Orange was Over
null
data was while Orange
if only
data was while Orange
if only
register function function
my only
if only
register function function
join somehow One
register function function
register function function
private out was Strawberry
null
null
private my join
null
Apple Orange
Apple Orange
Apple Orange
Apple Orange
null
null
accessible if
accessible if
null
null
Apple
Apple
join my
join my
join my
join my
join my
Strawberry Orange
Strawberry Orange
Strawberry Orange
for while accessible
for while accessible
Strawberry One register struct
Strawberry One register struct
null
Strawberry One register struct
struct
null
null
private Apple in struct
null
super Orange somehow
super Orange somehow
super Orange somehow
more if
more if
Orange
more if
Orange
data super
data super
data lambda Banana One
data lambda Banana One
somehow Game join
data lambda Banana One
data lambda Banana One
Apple join
Apple only struct
Banana Banana
out join
Banana Over
Banana Over
was table
null
Banana Over
null
super
somehow
somehow
table data print print
super
somehow
table data print print
table data print print
null
null
somehow while
null
null
null
super
for
public if in function
private more Apple
private more Apple
private more Apple
Apple in somehow only
public if in function
Apple in somehow only
was class public was
accessible super Over
null
super
register Orange print
register Orange print
more was Apple
Strawberry Game Apple register
Strawberry Game Apple register
accessible super Over
accessible super Over
struct accessible
null
null
null
null
null
while Strawberry
Apple private
for One
for One
join private class
Apple private
more
more
join print
join print
for One
for One
my
null
if struct if One
join private class
join private class
null
was Apple in
null
was Apple in
my data Game
One private
null
null
join while Game
class Banana accessible
class Banana accessible
join while Game
class Banana accessible
class Banana accessible
class Banana accessible
register
class Banana accessible
register
null
register
null
null
register
function public function lambda
somehow super private
class Banana accessible
function public function lambda
Game
register
Game
null
register
Game
register
function public function lambda
my
print
print
function public function lambda
Game
Over register was class
Game
my
Over register was class
struct
Over register was class
somehow Over out Banana
only out
null
accessible
only out
null
while
private function super
private function super
join more
null
table public while
print lambda
null
null
class Over
in
class Over
Game if private
out private accessible private
somehow out
class Over
print lambda
table public while
Banana One lambda Banana
somehow out
class Over
in
table public while
print lambda
in
out print
out private accessible private
in
print lambda
in join while Strawberry
somehow out
class Over
null
Orange
somehow out
Game if private
Game if private
my my Banana
Orange
Orange
Apple only somehow lambda
Apple only somehow lambda
in join while Strawberry
class more for
public only Orange
out private accessible private
only out
class more for
null
null
Orange join table
out private accessible private
public only Orange
out class
out class
Game if private
Game if private
public
super public class more
public
join was public
null
my my Banana
null
null
null
super public class more
Banana if
my my Banana
register
join
table
One Strawberry Over
table
join
null
my my Banana
null
null
register
null
null
One Strawberry Over
if struct
null
null
Orange join table
table
accessible my table
One Strawberry Over
One
if register data
null
null
accessible
Apple
somehow Strawberry Strawberry
join
lambda One data private
null
Strawberry Apple
null
accessible
accessible my table
for was class One
private
null
accessible
print class out
for was class One
null
null
null
accessible
lambda
super public class more
accessible accessible
for
super public class more
super public class more
print class out
null
lambda One data private
my
accessible
Banana class out
null
accessible accessible
somehow in One somehow
null
Strawberry Apple
Banana class out
accessible
Banana class out
out
lambda register
null
Banana class out
Game register
if register data
Banana class out
accessible
null
Game register
Banana Apple
null
Over Orange
my
for
Banana Apple
class if
for
for
for
null
for
for was somehow Banana
my accessible
Game register
for
Game register
Game register
for
Over Orange
for
private data only
Banana Apple
Game register
register public more
Game
private data only
Game
null
Over Orange
Over more
register public more
more Banana my
null
register public more
Game register
class somehow print class
was class was print
only super my
accessible accessible
class somehow print class
accessible accessible
accessible accessible
class somehow print class
null
only super my
accessible accessible
null
null
null
null
null
was in was
null
data table
null
null
struct
null
null
One
Banana somehow more Over
null
One
null
lambda somehow Game
my somehow register class
lambda somehow Game
if while data public
was function struct
if while data public
null
null
out
if table if
if Strawberry
if table if
out
for class One
null
if Strawberry
if Strawberry
if Strawberry
if table if
function super Game
null
if table if
if table if
in more while only
if table if
only
struct join
only
in more while only
class for
null
null
only
null
null
lambda was Strawberry
lambda was Strawberry
lambda was Strawberry
lambda was Strawberry
null
table more in super
table more in super
table more in super
table more in super
null
accessible data only
null
null
null
null
null
for Orange
for Orange
null
private only print out
private only print out
private only print out
private only print out
null
if Banana was
null
was public
data
data
Apple
data
data
out Over
out Over
out while
out while
null
null
null
public
data out out Game
null
data out out Game
data out out Game
data out out Game
data out out Game
null
while
Strawberry out public
Strawberry out public
print public
print public
Strawberry out public
private table if for
private table if for
null
function
print public
out
function
Strawberry out public
out
function
Strawberry
Strawberry
Strawberry while
null
Strawberry
null
Strawberry while
null
function only Banana class
null
function only Banana class
public join
public print
null
public One only Orange
public print
my class print join
table Orange function in
null
public public Banana
null
struct in accessible super
more One
struct in accessible super
table Orange function in
Game Game
more out join
more out join
struct in accessible super
super Orange
more One
struct in accessible super
public print
public print
table Orange function in
Apple
table Orange function in
my Banana
null
private data for somehow
Apple
Over for
more join public
super Orange
more out join
public my public
super Orange
private Game Game join
join
null
null
function out
function out
null
Orange
null
super Game for join
null
null
null
null
null
null
lambda Apple
lambda Apple
lambda Apple
null
lambda Apple
lambda Apple
null
null
null
data
data
null
Over data was
null
Over data was
public somehow super public
public somehow super public
public somehow super public
public somehow super public
null
null
function
null
register accessible data
null
function
register accessible data
print accessible
null
Banana struct
if super Game somehow
print accessible
print accessible
table private accessible Orange
print accessible
for Banana join Strawberry
null
in super Orange for
class public accessible
null
class public accessible
in super Orange for
class public accessible
class public accessible
in super Orange for
in super Orange for
class accessible Orange
class accessible Orange
Banana
in super Orange for
Orange print
Orange print
Orange print
Orange print
One table my Game
join table data print
Orange print
join table data print
join table data print
null
One register join
null
null
join table data print
struct table
null
struct table
Over private
Over private
null
Over private
struct table
Over private
Over private
null
null
null
null
null
accessible more super out
Apple my join Strawberry
Apple my join Strawberry
Apple my join Strawberry
print
data Over One public
null
print
null
function Orange if
null
print
null
null
null
One struct
Apple only Banana if
One struct
One struct
One struct
One struct
Apple
Apple
Apple
Apple
null
Apple
null
out struct somehow public
register somehow public
out struct somehow public
register while
more One super
null
super was class for
null
One register table private
super was class for
null
accessible Orange One
while
if
accessible Orange One
super was class for
super was class for
super was class for
null
out table
out table
null
super lambda Game in
super lambda Game in
super lambda Game in
super lambda Game in
super lambda Game in
super lambda Game in
super lambda Game in
register join
null
null
my out
my out
null
null
One class function Orange
struct
null
if more somehow public
null
in Orange
null
null
table
in Orange
Over Orange
table
null
in Orange
null
somehow super struct
table
null
struct for One
super for join
null
super for join
null
Apple
super for join
somehow lambda Over Over
null
null
for
for
null
null
somehow lambda Over Over
somehow lambda Over Over
for Strawberry
function more function Strawberry
null
for Strawberry
out out One
class lambda
null
in
in
null
null
null
null
null
class super
null
null
class super
class super
Apple super lambda function
print register somehow
null
class
null
while data Game while
Strawberry
if register my
class
for One
my public
out for my Strawberry
my public
for One
null
while
out for my Strawberry
null
null
somehow more in only
Strawberry print
null
null
somehow more in only
somehow more in only
somehow more in only
somehow more in only
null
Game
null
One Banana in
register more data super
Banana table
Over
function struct class accessible
function struct class accessible
Over
null
Over register
Banana super
function print was
function print was
register more data super
function print was
private One
null
while Orange only super
function join
print public if if
while Orange only super
null
null
if my for data
while Orange only super
null
Over join private
null
null
struct super
null
while out
while Orange only super
null
while out
Banana more while
Game more
null
Banana more while
null
for table
join struct
null
null
out table Banana
if if
accessible while while in
out table Banana
public Apple print
accessible while while in
Banana more while
null
if if
if if
Strawberry
Strawberry
Banana more while
print Apple Apple
accessible while while in
null
null
print lambda Banana Strawberry
function accessible
class if print lambda
null
null
null
print Apple Apple
table One
One register
accessible private Over
table One
One register
print lambda Banana Strawberry
lambda
super more
print
print
my Game Banana
super more
print lambda Banana Strawberry
null
null
null
print Apple Apple
public somehow struct
while
null
private register data data
accessible private Over
more for data
Banana private only Orange
One
Strawberry Orange in
private Apple
accessible private Over
private register data data
null
Banana private only Orange
public
null
accessible private Over
null
null
public
null
null
Game more
Game more
while
only
Strawberry Orange in
while
accessible private Over
null
print
only
null
One
accessible while accessible
Apple
Strawberry Orange in
only
Strawberry Orange in
One
Banana private only Orange
Strawberry Orange in
Banana private only Orange
Banana private only Orange
class Banana
class Banana
in for
if in more out
if in more out
null
in for
public accessible Over
Over accessible my register
Strawberry accessible print
if in more out
Banana private only Orange
for data
in Strawberry
struct table private Over
join
join
One
null
null
Game
null
register
data print
null
null
super
super
null
super
null
print public private private
print
data Banana function
only print
data Banana function
data Banana function
Banana One
data Banana function
my private out
null
was function
Apple Orange my
while
null
print
print
null
function accessible
data Banana function
null
data public
table join in
my private out
lambda Game Apple
my lambda register
super was
null
only
only Over
my lambda register
public
only
null
accessible accessible struct my
null
if Banana
only Over
only
null
data
null
Game
was
my lambda register
null
null
only
somehow register
while Game public Orange
null
print accessible only
null
Game Over Game
out in
Game Over Game
out in
class
Game join Strawberry lambda
Game join Strawberry lambda
Apple in lambda somehow
table Apple print
null
private accessible
private accessible
null
lambda for One
null
lambda for One
One was while more
lambda for One
One was while more
super data
One was while more
class private out
lambda for One
private somehow
super data
more class
more class
more class
print only
public class print
null
public class print
if join
public class print
null
null
null
was table while
was table while
public class print
if join
table
null
if join
public class print
if join
null
was Over register Game
if join
null
if join
print
null
for
out struct my
out struct my
null
null
null
null
null
null
null
null
struct accessible
private Game private
private Game private
null
null
null
data Banana data One
data Banana data One
while
table
table
somehow Apple function for
table
only more my
for out while super
table
somehow Apple function for
for out while super
table
Strawberry super only
struct
table
if
for lambda
private
my struct
null
out
if Game more Game
One Strawberry
if Game more Game
my struct
Orange Over struct only
Orange Over struct only
table
null
null
null
private join
my somehow
null
super Banana Game Orange
register Over
Apple
register Over
Apple
super Banana Game Orange
null
class struct function if
Apple
Apple
class Banana
Apple
Banana while
my out table Apple
class Banana
class Banana
was data
Orange accessible Orange
class Banana
Orange accessible Orange
was data
public
public
null
private Strawberry somehow in
private Strawberry somehow in
null
while One
while One
null
Over class
Over class
null
null
null
null
null
my register
super
my register
my register
was somehow
was somehow
function
null
null
null
print Banana my
print Banana my
null
null
my out if
somehow
somehow
class
class
class
null
null
Apple public
Apple class out
Banana out register table
Apple public
Orange Orange print
Banana out register table
Orange Orange print
Banana out register table
null
Banana out register table
null
Banana out register table
null
was somehow table
was somehow table
accessible Over
accessible Over
while Game data
while Game data
null
out
out
lambda class only
lambda class only
null
null
Game
Game
Banana lambda Orange
null
null
null
accessible data Orange
null
null
null
null
null
null
null
null
null
null
null
class super was
null
struct
struct
was while Apple only
struct
null
accessible print
accessible print
null
class only
null
class lambda struct
null
null
null
null
null
join
null
somehow function Orange
Apple accessible
print Apple
register function Banana Orange
print Apple
print Apple
lambda accessible was Banana
null
data register data register
print Apple
null
in somehow in print
somehow register was
in somehow in print
null
was
null
in somehow in print
my my lambda private
Banana
somehow register was
somehow register was
while table
null
One while
accessible public
data One while
lambda accessible was Banana
table Over
private while
data
null
null
private while
One while
data One while
data
data
private while
null
null
null
null
accessible public
more
null
private while
class private
data
super Over
Game if
null
out somehow
super Over
accessible public
table
struct my super for
register accessible for
out somehow
data
somehow while One Game
class private
somehow while One Game
null
if in out public
somehow
null
table
null
Strawberry Banana while
Banana
table
Game if
Strawberry Banana while
table
null
null
null
somehow
null
Strawberry Banana while
null
Strawberry table public print
was struct super
public
table
accessible
accessible
accessible
class if print in
Strawberry Banana while
public
only only One
null
class Strawberry
table
only only One
null
class Strawberry
public for while while
Apple Game print register
null
more data for if
Apple Game print register
null
more data for if
more data for if
more data for if
Strawberry table public print
while register
super
null
private lambda
Apple public struct
while register
while register
Banana more super Banana
Orange more public public
Orange more public public
null
Orange more public public
somehow
super
Orange more public public
out in
was somehow data class
was somehow data class
while
null
somehow
null
null
more print
more print
null
function data
more print
more print
null
data private Over
null
private
private
private
private
null
null
null
null
null
null
join print Banana Strawberry
Game lambda somehow for
Game lambda somehow for
Game lambda somehow for
Banana Apple print more
Banana Apple print more
Banana Apple print more
Banana Apple print more
Banana only accessible private
null
null
Orange while out Over
data join
data join
data join
data join
null
join class
null
null
null
while Game
while Game
while Game
null
null
null
null
function was
function was
more was
null
more was
null
more was
register public
Over super
Over super
while only
while only
One
accessible was
accessible was
null
register class function
null
print
null
null
null
null
null
my
only One Orange print
null
null
Banana
struct Orange Over was
null
Banana
struct Orange Over was
Banana
Banana
Apple join accessible One
out Strawberry Over
out Strawberry Over
Banana
struct for for somehow
super private data
null
print data
super private data
super private data
super private data
super private data
out Apple more accessible
super private data
null
out Apple more accessible
super private data
Over public my
Over public my
out Apple more accessible
out Apple more accessible
null
super private data
out Apple more accessible
null
null
super private data
function
table accessible
table accessible
function
out lambda
table accessible
in Game
in Game
null
in Game
table accessible
for Strawberry Strawberry accessible
more print register
struct function public
null
Game Orange somehow function
Game Orange somehow function
more print register
more print register
more print register
more print register
data more
data more
null
somehow table accessible Game
register
register
more Apple
more Apple
table Banana print
null
table Banana print
null
table Banana print
register
join while register print
table Banana print
join was while
null
join while register print
join while register print
out
was while more print
null
null
my
more accessible Game
my
more accessible Game
public my
out table table One
out table table One
more accessible Game
One lambda Strawberry private
more accessible Game
table Apple
print
public struct public
null
null
null
public struct public
public struct public
null
only Banana in join
out
null
Over class Banana
Over class Banana
null
Over class Banana
Apple my Banana lambda
Apple my Banana lambda
public struct public
function
function
Apple my Banana lambda
public struct public
null
Apple my Banana lambda
Apple my Banana lambda
Apple Strawberry
for public One for
Apple my Banana lambda
Apple Strawberry
Apple my Banana lambda
null
Apple my Banana lambda
data private struct
join Strawberry lambda One
Apple for
Apple Strawberry
join print accessible struct
null
One
null
table table
null
for data
table
One register
private print
null
One Game
class while while for
class while while for
super Banana more
super Banana more
private print
Orange One more accessible
only public
One Game
Orange One more accessible
Apple
class while while for
One Game
One Game
class while while for
Apple
private print
somehow
only
Apple
Orange One more accessible
private print
only public
null
One Game
One Game
public
null
Orange Orange my
null
Orange One more accessible
public
class while while for
somehow
Strawberry
table
Apple
function lambda
null
One Game
print table
null
null
function lambda
function lambda
public
One Game
somehow function Game accessible
function table public
function lambda
somehow function Game accessible
function table public
function lambda
register table
public
function table public
public
accessible somehow for
register table
null
register table
null
more for
super join only
Over data for
Over data for
more
more
print out only
more
Game
somehow if more register
somehow if more register
null
my only
join Strawberry
null
null
null
function
null
null
One Apple
was class
was class
One Apple
print
somehow accessible
somehow accessible
struct register Apple out
struct register Apple out
null
struct register Apple out
public
struct register Apple out
while
lambda public
somehow lambda out if
null
null
null
null
null
while
null
lambda public
while Banana private
while Banana private
Apple
more
join while only somehow
public
print One only Game
null
only my
for
while
only
while
Strawberry data
out Game was
for
while Banana private
while Banana private
Strawberry data
null
register register struct public
out public
only
Strawberry data
Strawberry data
while Banana private
Strawberry data
null
only
null
One more out
null
Orange join struct somehow
null
join class while
join class while
Strawberry data
Orange was
only
only
null
null
if my table lambda
more while
more Over super data
more Over super data
more Over super data
accessible somehow Strawberry
Orange data Orange
more Strawberry join
print more if for
somehow my super public
somehow my super public
for lambda
null
super
super
null
null
super
null
null
while out data in
private
private
null
join
null
Banana
for One Game
join
for One Game
null
join
my register Orange super
null
Banana Apple super struct
join
join print table
Banana Apple super struct
null
Game
public
Game
null
only in
struct Strawberry
public
null
struct lambda for
struct Strawberry
null
null
One
struct lambda for
class my
super print join
struct lambda for
Orange print
table
null
struct class function
my accessible
table
super print join
Orange print
super print join
super print join
null
null
class my
my accessible
null
null
class my
if struct private somehow
register private Banana
table while
register private Banana
null
null
struct lambda for
class my
class my
class my
struct lambda for
join register while
out in Orange data
out in Orange data
null
Apple accessible for
struct lambda for
data print class
Apple accessible for
out was
out was
null
Apple was struct
Apple was struct
in class register
struct lambda for
struct lambda for
null
null
null
if
Strawberry somehow join
Strawberry somehow join
out more my Orange
super Apple
null
null
Strawberry somehow join
Over
Over
class
class
more struct private
more struct private
more struct private
more struct private
more struct private
null
function private for
null
for more public for
for more public for
null
for
print more Strawberry
private class join
null
Orange lambda
print more Strawberry
Orange lambda
print more Strawberry
null
print more Strawberry
null
join
Banana table data
function
register
function
function
join
my Apple class
Apple my for lambda
function
join
function
was class super more
in somehow
null
register table if if
my Banana
Strawberry
my Banana
register table if if
null
was if
Strawberry
super
somehow super
super
super table Orange out
was was register print
super
was was register print
null
null
private private Orange if
data
was was register print
private private Orange if
Over
Over
null
super
super table Orange out
register
register
super table Orange out
somehow super
super
null
Banana
null
null
Strawberry
super
super table Orange out
null
null
function
while in Orange
for data
Over
public
while Banana private super
function
while Banana private super
Over
accessible register somehow
accessible register somehow
accessible register somehow
null
accessible if
data data more out
register somehow
accessible register somehow
accessible
data data more out
data data more out
if join was
null
null
accessible register somehow
more only
null
null
if join was
null
public
if join was
accessible
public
null
while Banana private super
more only
null
null
out
for
null
null
data data more out
null
register somehow
out
if Apple class Banana
out
Game somehow Apple public
accessible accessible
null
One lambda data
public
public
null
more only
register somehow
null
somehow public was Over
null
for more
somehow public was Over
for more
Banana Banana
struct
public
somehow public was Over
out
null
was
was
register somehow
out
was Game my
null
function One public print
Game
private in Orange
null
null
private somehow Game
accessible was Orange
my print private
Orange
table only
null
null
null
Strawberry
null
accessible was Orange
Strawberry
Orange
was for
null
out
if in function
function One public print
somehow
private somehow Game
somehow
null
data
Over somehow
Orange
private my in private
null
null
Apple
Over somehow
Apple
data
somehow
for out
Strawberry struct table more
null
data Orange Over
my print private
in Apple lambda
data Orange Over
struct
data data struct
Over somehow
print in register public
class in Game
class in Game
was
while Banana for
null
null
if in function
Over somehow
super was super
null
somehow
more my join class
null
data accessible somehow
while Banana for
null
null
null
if in function
table join Over
in Banana
null
somehow
null
Over in join Apple
table table
data data struct
Apple print in
Apple print in
null
super for accessible
data data struct
table table
null
data data struct
somehow
Banana Strawberry
Strawberry
null
null
somehow
null
somehow public register
Strawberry Game super
null
null
Game
null
Banana Strawberry
accessible register data table
accessible register data table
Strawberry
null
out was super Over
accessible register data table
null
null
somehow
in table
null
register Apple
in table
out was super Over
register Apple
out was super Over
while if for
out was super Over
null
Game
somehow class only Orange
somehow class only Orange
Game
One Orange Banana
somehow
for function my
somehow
for function my
for function my
null
null
One
null
One
accessible class print
null
somehow struct Game somehow
data
null
data
null
my
null
while data if my
while data if my
null
more Over data
more Over data
null
null
null
lambda print join register
lambda print join register
null
null
lambda Apple super register
lambda Apple super register
data in super Game
data in super Game
table Strawberry for
super if
table Strawberry for
null
table Strawberry for
null
data in super Game
data in super Game
Game accessible
was register if
struct out out
was register if
for Game class
table
table
null
was
null
class function
somehow Strawberry if
class function
somehow Strawberry if
somehow Strawberry if
function
out my
null
out my
null
struct struct was
out my
struct struct was
struct struct was
null
null
null
null
null
null
Orange print only
lambda function my
more my Strawberry
lambda function my
data data only my
data data only my
null
data data only my
public public more Game
register register
register register
public public more Game
Orange more
null
null
null
public public more Game
table table
null
while was Game
table table
for only in print
register register
for only in print
register register
function public
table table
while was Game
out Over out
null
null
function super accessible public
null
null
if private
Game
public struct One accessible
Strawberry class
register register
Game
null
out Over out
null
Game
null
null
only Banana
accessible class join
Banana public Apple
in somehow accessible
null
function super accessible public
my Banana print
if Apple my only
in somehow accessible
private out if
null
in somehow accessible
null
Strawberry Orange
Strawberry class
join if
null
while
private out if
while
in somehow accessible
null
in join function
Strawberry Orange
join Game if
public my somehow my
accessible class join
function super accessible public
accessible class join
Banana in
while Apple out while
null
Game
data
null
Over
null
function
while function class while
in
Strawberry while out
while function class while
private Apple was
One join for
while Apple out while
super Banana
while Apple out while
null
null
somehow function super register
Orange function
out Apple
somehow super
null
Orange function
function somehow lambda
for lambda
Strawberry
for lambda
null
One join for
my
null
One join for
null
null
Banana Over more
null
null
private function
only
null
null
null
private function
null
class more accessible only
function function accessible super
private function
null
only while out
public my my
somehow private super
public my my
data accessible Strawberry private
data accessible Strawberry private
Apple struct only only
only data join public
null
lambda data my
class if
data
Apple struct only only
class if
null
while Apple struct
Strawberry lambda
data accessible Strawberry private
while Apple struct
null
null
null
Apple struct only only
while Apple struct
in Banana One was
data accessible Strawberry private
was out One lambda
data accessible Strawberry private
data accessible Strawberry private
while Apple struct
only my
only my
One struct my
private for struct
null
null
only if somehow
more
print out register
my while lambda class
One struct my
One struct my
public Game function was
public Game function was
somehow out more Over
print struct data out
out
print struct data out
print struct data out
somehow out more Over
Orange my class
private while
null
only was if while
my my
only was if while
print struct data out
null
my my
super data
data Strawberry Over
null
somehow out more Over
only Orange more
my my
only Orange more
only Orange more
data Strawberry Over
null
null
data Strawberry Over
only was if while
accessible was
data Strawberry Over
somehow out more Over
Apple if
Apple if
my my
was table class super
struct Orange my
was table class super
super
Over public Apple
super function class
super function class
struct Orange my
Apple was Apple
out
table out super
table out super
table out super
null
out
super
table out super
null
Apple was Apple
Apple was Apple
table out super
Apple was Apple
table out super
super function class
public join
table if One
lambda One more
lambda One more
lambda One more
public join
register Over register
register Over register
register Over register
null
null
null
somehow Game Orange Banana
null
class for
null
null
null
null
null
in somehow
data One
out print register
null
Strawberry
null
Over
Strawberry
null
null
null
Orange data only
Orange data only
null
null
Orange
Orange
Orange
Orange
null
Orange
Orange
Over
Over
Over
was
was
null
register Orange print Strawberry
Banana register
Banana register
Banana register
Banana register
public Apple somehow
if out Banana somehow
if out Banana somehow
data register
join table print my
join table print my
null
null
Orange
Orange
null
Orange
if register out
if register out
if register out
Orange
print only
null
print only
Orange
null
struct Game Orange
Orange
struct Game Orange
Orange
null
null
null
null
null
null
null
null
Banana while
null
null
register Game struct out
class
function more table
print
public
super out while table
struct my
struct my
only public Strawberry
super out while table
null
Strawberry
out One Game
accessible data
super out while table
out One Game
Over while only
super out while table
null
Over while only
super out while table
data
Over while only
out function while Over
null
lambda
null
null
only
null
while
while
super out while table
only while
super out while table
only for Game
if data One was
null
if while more
super out while table
out Game was
super Apple more
null
null
if data One was
register
super Orange only more
if while more
super while while my
super while while my
only for
if while more
null
null
only for
in my Over
null
only for
super Orange only more
only for
out class
null
class class Strawberry
out class
public data super class
print
somehow out in only
only for
null
somehow out in only
register was private print
somehow out in only
null
register was private print
Apple only if private
null
null
function Orange out
function Orange out
only private private for
somehow Game function my
was in
was in
Game data
somehow out in only
only private private for
super Orange only more
while data Over
Apple only if private
null
super
null
super Orange only more
super while while my
while data Over
null
if in Orange join
data if
null
accessible more Strawberry join
super
null
class
public Strawberry only while
null
Banana my for private
in data lambda
null
null
null
null
null
was
Game
if table class Orange
lambda somehow class
accessible more Strawberry join
null
more function table
class for while for
while my somehow table
accessible more Strawberry join
was
function accessible
Strawberry only
lambda somehow class
null
lambda somehow class
null
if table class Orange
join Game while only
Strawberry only
public accessible function while
null
if table class Orange
lambda somehow class
lambda somehow class
super data more
if table class Orange
super data more
if table class Orange
null
null
data accessible in somehow
data accessible in somehow
join Game while only
in join
null
data accessible in somehow
Game lambda out
class
null
data accessible in somehow
Over while Orange accessible
Over while Orange accessible
was
was
null
was somehow while more
null
null
One join
lambda
One join
table table lambda register
accessible if for only
lambda
lambda function out
lambda function out
Strawberry for
null
null
super Apple Orange private
in class data Over
in class data Over
null
print Banana
data Orange
super Apple Orange private
public join struct
One Game print Orange
Over super Over struct
private
private
null
private
Game
lambda accessible while
null
lambda accessible while
Game
lambda accessible while
Game
out public my
Game
was
register register Apple for
private more
function join
more was One table
class my table Strawberry
register register Apple for
null
public was
struct
private only more
public was
null
public was
null
while Game more public
join
while Game more public
while Game more public
super accessible lambda for
null
null
struct
while Game more public
join
Game lambda One
null
One Apple more
Strawberry out lambda private
One super
if class join struct
class join struct
Strawberry out lambda private
if class join struct
Strawberry out lambda private
if class join struct
Strawberry out lambda private
class join struct
null
Strawberry out lambda private
Strawberry out lambda private
class if One
null
null
null
null
null
null
null
null
Over
null
null
null
out One out public
data if
data if
if
null
out Orange if
null
private One somehow join
private One somehow join
out Orange if
private One somehow join
private One somehow join
null
out Orange if
private One somehow join
private One somehow join
null
my print lambda
null
null
null
null
null
join out if
join out if
Strawberry
Strawberry
Orange table Banana function
Strawberry
null
public private One data
join
join
null
One
One
accessible data register
One
null
data class lambda
accessible data register
null
super
null
Game
somehow private
null
register
null
somehow private
null
register
register
register
print
null
null
Game super
in function Banana accessible
data accessible Over
data more
in function Banana accessible
null
in function Strawberry
struct super
out public data more
while out was
while out was
while out was
out public data more
struct super
while out was
Banana super Banana
register class One
print
while out was
my Over print
my Over print
null
null
null
null
null
null
One more lambda lambda
out
null
if
if
null
null
null
null
class
public
join class join
public
null
null
Banana
null
null
public
public
null
public
print public function
was for in
more function
null
null
more function
more function
null
lambda was somehow
lambda was somehow
Apple private public lambda
null
null
Orange One
while while Game was
class private
only Banana
only Banana
null
class private
Banana class Orange
null
if Orange public
table One data if
table One data if
null
null
null
private was function function
null
Apple
Apple
register Game more
register Game more
more Game function class
lambda in table in
lambda in table in
lambda in table in
lambda in table in
private function was public
null
null
while while register
while while register
print Game
lambda print
lambda print
lambda print
Game print
Game print
null
null
null
null
null
null
null
class struct
class struct
lambda Banana out if
lambda Banana out if
join
print Strawberry class
join table
null
print Strawberry class
null
Strawberry
Apple Over class
Banana Game One lambda
null
null
Banana Game One lambda
Orange somehow function
null
in Game my while
null
null
null
null
for
null
if super
null
struct in super somehow
function out
function out
null
super my lambda only
null
super my lambda only
super my lambda only
super my lambda only
super my lambda only
null
was only One
out more join function
more only was for
somehow my class lambda
null
null
public function
for more data
null
null
null
null
function
null
null
print private
null
null
null
null
null
null
null
accessible Orange
accessible Orange
for table for Strawberry
accessible Orange
One join in
One join in
null
null
null
null
null
somehow Game accessible
for if
for if
null
null
null
data if more for
join private struct only
null
Strawberry only for if
class more table only
null
class more table only
data if more for
null
null
null
struct Orange
null
null
function class
null
if super struct
Orange
null
accessible
accessible
null
more super
Apple struct
accessible Over
null
One data table
One data table
Apple struct
null
null
Apple struct
null
Apple struct
Apple struct
somehow
null
null
One while was in
null
null
was Apple in print
lambda Banana register
null
null
join
Orange for data Strawberry
null
join
Over print join register
only Apple Strawberry
only Apple Strawberry
null
null
print One while Over
null
null
table public table in
Orange struct
Orange struct
accessible only register
table public table in
null
table public table in
accessible only register
Orange struct
join struct lambda
null
only
more accessible
only
join struct lambda
lambda my more
null
register was table function
lambda my more
null
my lambda
my lambda join
super register Banana
lambda my more
super only
Orange Over lambda Apple
super register Banana
my lambda join
join struct lambda
in Apple in
class somehow private
class somehow private
null
null
join struct lambda
lambda my more
lambda my more
table somehow public Orange
null
lambda my more
out more while in
table somehow public Orange
print join accessible
null
One private register
my out Orange
null
Apple data
One private register
my out Orange
One private register
class
null
null
null
null
Apple
Apple
null
lambda data print public
lambda data print public
super out
lambda data print public
super out
my private was
for private
for private
lambda data print public
for in
for in
join while if Over
null
struct Orange data lambda
struct register table table
null
print
in Banana if data
in Banana if data
if was Apple
if was Apple
in Banana if data
if was Apple
if was Apple
accessible
accessible
join data Orange
null
null
only Over in accessible
null
only Over in accessible
only Over in accessible
only Over in accessible
only Over in accessible
super
struct
One out out
One out out
One out out
One out out
One out out
function
null
null
data while
lambda data function
null
data while
data while
data while
One
while Game
while Game
null
while Game
while Game
was
if
while Strawberry register
while Strawberry register
null
null
null
null
print
lambda function join in
lambda function join in
null
null
lambda
null
out
lambda
lambda
lambda
null
public register in in
null
null
null
null
null
null
null
null
null
Apple if Game Apple
class private function
null
Over Banana
only Banana
only Banana
only Banana
if
null
class private function
One table if
join super out
for
null
for more class private
for more class private
for more class private
null
my
super private register
null
only Over Over Orange
was
null
only Over Over Orange
Over table only function
my
Orange
if register
only Over Over Orange
was while data One
table out if
my
was print
was while data One
public function
only Strawberry data if
Apple
for while Banana
One Banana print table
only Strawberry data if
only Strawberry data if
accessible out was
lambda while Over
private more
null
table
table
private more
private more
my
null
null
Banana Strawberry class super
in
accessible out was
more
in
One super
null
private more
public more
accessible out was
somehow private
if print Game
null
somehow private
accessible
accessible out was
somehow private
in
Over lambda
function Over
null
super function table
in
function Over
struct class
null
public more
function Over
struct class
Over lambda
Game private register register
Apple register
public accessible Over
null
private more
Apple register
for public Game
public accessible Over
private more
in somehow
somehow
private more
public accessible Over
somehow
null
join Over my
One super my
null
data
my out somehow
Strawberry was data
null
null
function
null
null
function
null
print struct
null
function
Orange more somehow accessible
print struct
Orange more somehow accessible
null
print struct
for data only
null
only data
null
null
for Apple
somehow in
null
private lambda function if
for Apple
accessible Banana One
struct
null
null
in
in
in
in
in
in
in
was join Over print
register
register
private
One Orange One private
register
join
join
join
null
join
class lambda
class lambda
Apple more
null
out for Over Orange
while register Orange if
out for Over Orange
null
while register Orange if
class
null
class
while register Orange if
data Over
null
null
null
struct was if function
null
null
Orange table struct
data table accessible
data table accessible
Orange table struct
null
print Orange accessible
null
Strawberry data
print Orange accessible
data table accessible
data table accessible
data table accessible
print Orange accessible
Strawberry data
Strawberry table
null
Strawberry table
lambda
struct
Banana in was
struct
struct
out Banana
join lambda private
out Banana
null
null
null
Orange join for Strawberry
null
somehow while
somehow
somehow while
more
null
while Orange
null
while if Strawberry lambda
while if Strawberry lambda
accessible
while if Strawberry lambda
while if Strawberry lambda
private join public
null
register out
private join public
null
for if
private join public
while if Strawberry lambda
null
while if Strawberry lambda
if struct
function register
public register
while if Strawberry lambda
function register
public register
register out
public register
public register
null
public
public
my table
my table
my table
register private table super
null
null
public
register private table super
register private table super
null
public
Game private was Game
public
public
null
Over if One
null
public
Over if One
public
more Orange print out
public
Over if One
super public
super public
Over if One
null
null
if Game
Over if One
print register
Strawberry
table Over
null
null
Banana
only
table Over
null
table Over
Strawberry
table Over
null
null
join public Orange
null
null
for Over
Strawberry
accessible
Strawberry
print Orange
for join
for join
Strawberry
for join
in if
print Orange
more
Strawberry
in if
print Orange
out was
print while print
null
Strawberry
public Game
null
print Orange
struct
lambda register table function
print Orange
accessible only
Orange join
null
Strawberry table
null
more
accessible only
Strawberry
null
Game if
null
Strawberry
Strawberry
Game if
for
for
null
more
Strawberry private out Game
Strawberry private out Game
Strawberry private out Game
table Over print
public
null
table Over print
Orange out
lambda Banana Banana Apple
private for Over
somehow while for lambda
null
lambda Game
out out
null
accessible
Game in function
super for Strawberry join
private for Over
null
private for Over
was
was
was
was
null
null
Orange while struct lambda
null
Orange while struct lambda
Orange while struct lambda
for
data out
somehow more my struct
somehow more my struct
Game
null
somehow more my struct
Game
struct if lambda lambda
lambda register
register One Game
Game
Game
lambda register
lambda register
lambda register
lambda register
lambda register
my
null
null
One Orange
One Orange
my somehow
One Orange
null
null
my somehow
public private if
public private if
public private if
null
null
public private if
super was
null
print table One
null
null
Over Apple accessible Strawberry
print table One
Strawberry public Orange
print table One
null
my for function
null
my for function
my for function
null
private
private Banana class Banana
was Strawberry
null
private private
null
accessible more Orange
null
null
only
only
private private
for
super private struct out
my table more
class function accessible
my table more
class Over Over
class Over Over
my table more
my table more
print
null
print
print
Banana
print
class if One lambda
Banana
One public private
null
Banana
class if One lambda
class if One lambda
null
somehow only out
class if One lambda
more print Banana
if lambda
somehow only out
accessible
somehow only out
data Game
out register data
somehow only out
data Game
null
null
for lambda
accessible
accessible private
null
private was data Apple
Over private
somehow only out
null
null
private was data Apple
somehow only out
null
table Banana
lambda
null
accessible private
lambda
print only
Over
null
Apple if Orange was
null
private Game while Over
lambda
null
register
struct public table was
public struct Over table
class private
if
Apple if Orange was
private Game while Over
private Game while Over
out was
accessible table super
out was
Strawberry join
for was
Apple if Orange was
table
private Game while Over
if
Over table in accessible
if
if
if
null
Apple if Orange was
null
accessible only private
null
table
Apple private for was
table
null
Orange Game private
print
accessible only private
was while private join
if private Orange
Banana join in function
null
Over
null
for Orange only
Banana join in function
Orange Banana
null
lambda table
Orange Banana my
null
Orange Game private
Over Banana
Orange public One
data private
public
print
if private public Banana
in while Apple struct
accessible only private
null
null
Over Banana
accessible only private
if private public Banana
null
private join join in
Over Banana
Game super Apple
if private public Banana
null
if
Game super Apple
private for
Game super Apple
null
print private data my
null
join print public
null
data
private
join print public
null
data
join print public
somehow
private
null
accessible in table Over
data private if register
Game
Strawberry while private
One print
Game
out
Game
null
null
private
in lambda
public class Strawberry Apple
null
table
Game public
Banana lambda Banana
null
in lambda
Orange accessible lambda super
Apple my
Apple my
super function
Over more
somehow super Game
null
null
private register while
struct
Game super while accessible
Strawberry Banana table
was while
null
struct
somehow super Game
Over more
somehow super Game
accessible in my
somehow super Game
null
for somehow lambda private
Game for
Game super while accessible
null
Game super while accessible
in accessible if struct
in accessible if struct
null
Game for
struct
if Banana for super
accessible if print
null
register somehow table
Game for
null
null
print Apple
print Apple
accessible if print
more out join table
for Apple class Over
lambda Over accessible more
Strawberry only Apple
lambda Over accessible more
null
lambda Over accessible more
super Over
Banana public class accessible
null
Banana public class accessible
Banana
null
Banana public class accessible
null
lambda Over accessible more
null
Banana
Banana public class accessible
lambda Over accessible more
null
One accessible
One accessible
null
null
only One
was class One
One accessible
null
private
lambda while
One Apple in table
lambda while
One Apple in table
private
private
join
struct
struct
data register in
in
in
join
private
struct
function data
struct
null
lambda
my more
Orange One
Orange One
my more
my more
null
null
my more
lambda
Orange One
Orange One
Orange One
null
my more
lambda
my more
One somehow
One somehow
One somehow
print One join for
One somehow
null
null
null
somehow function
null
null
null
null
null
if somehow super function
join somehow
join somehow
was was
null
null
was was
Banana One somehow One
more table print
null
Banana One somehow One
while
Banana One somehow One
Orange for Apple for
in out
Banana One somehow One
null
null
null
Orange for Apple for
Orange for Apple for
for accessible more
null
Orange for Apple for
for accessible more
for accessible more
null
null
Over
more private Banana Banana
null
null
null
null
null
my data super
null
my data super
null
in
in
in
null
data super somehow
more One function out
Over function
Over function
Over function
null
null
null
null
out function
null
null
null
for Game Orange
for Game Orange
null
for Game Orange
for table out
out more
null
Banana table for
for public while join
for public while join
null
super Strawberry
null
null
super Strawberry
for table out
for table out
in
for table out
for table out
out data One
Banana function Strawberry
null
in if data
Game somehow
table
null
null
Game somehow
struct struct
null
for table out
null
join somehow print Game
null
for
join somehow print Game
null
private
for
struct struct
for
for
struct struct
Over
null
private print register register
while if Apple
null
null
join somehow print Game
join somehow print Game
while if Apple
data public
struct struct
null
null
null
if more
struct struct
private print register register
null
null
data public
if more
super was
data public
register function was
while if join public
Strawberry register if for
null
while class Banana function
null
One Banana One One
register function was
while if join public
null
null
Banana while join table
somehow more
my Strawberry if for
null
my Strawberry if for
somehow more
null
lambda for while
more more Banana Game
null
null
more
my Strawberry if for
Apple data super
out class function for
my Strawberry if for
null
null
if was Apple Strawberry
for in
register
null
for in
null
out
Over more
my Strawberry if for
null
more if accessible
in in Banana class
null
my Strawberry if for
if somehow
null
out for struct
Over more
out for struct
table
more for
Over more
Over more
Over more
function while
somehow
somehow
accessible One
accessible One
register One
function while
null
register One
null
accessible One
somehow
only Banana Apple table
only Banana Apple table
accessible if Over
only Banana Apple table
private struct
null
somehow
only Banana Apple table
print print Strawberry Strawberry
only accessible
out table data Apple
out table data Apple
out table data Apple
function somehow Game while
class Over One
null
null
my my
only more
Orange
Orange
Orange
print only data in
null
public while
print only data in
register join super in
join struct join
join struct join
private class struct out
accessible register
accessible register
register
null
join struct join
register
register
register
register
private class struct out
null
register
Game
Game
null
Game
null
Game data more One
null
was One while Apple
One function public print
was One while Apple
null
public private for
public private for
null
null
null
null
super super Over super
super super Over super
struct function table
struct function table
null
Orange data
Orange data
somehow class
null
lambda super lambda
if for while
null
data my
accessible
out in join Game
out in join Game
out
null
null
null
data public join
print somehow data
print somehow data
out
only Over One
null
Game super private while
Game somehow private
Game somehow private
Game somehow private
Game super private while
null
null
null
Strawberry
null
join register out function
function for Apple for
function for Apple for
Orange Over lambda lambda
join register out function
somehow
out Orange my in
null
public print
public print
null
somehow
struct more class
struct more class
somehow
out
public
my table
public
public
public Apple Over table
null
public
my somehow class
null
private if register out
Over print accessible if
Over print accessible if
was super
null
table
was super
Strawberry Over
null
null
null
null
null
null
null
table
null
null
null
null
null
null
null
null
private One Strawberry if
Apple more function private
private One Strawberry if
private One Strawberry if
private One Strawberry if
null
null
null
null
accessible Orange Banana
accessible Orange Banana
accessible Orange Banana
accessible Orange Banana
accessible Orange Banana
accessible Orange Banana
null
somehow Strawberry struct only
somehow Strawberry struct only
lambda lambda data
my
lambda lambda data
lambda lambda data
my
lambda lambda data
my
null
null
somehow more One
somehow more One
somehow more One
null
null
null
join out Game
join out Game
join out Game
null
public if
Game One Over
public if
One Banana somehow if
null
null
null
null
One Banana somehow if
null
only struct join
table for
in
table for
accessible accessible
null
Strawberry
super only Orange super
null
Over out
register somehow register print
null
null
Over out
class join table only
Over out
Over out
class join table only
One
class join table only
Over out
class join table only
Over out
somehow Game print Game
null
register somehow register print
somehow
somehow
Game Over was
Game Over was
null
struct
print out
somehow struct
only was was
my
null
only was was
was while
null
null
data class struct was
data for Game was
class register Game
struct
print accessible
function super register private
null
null
null
Banana struct join
my
accessible
struct lambda for
accessible only print
null
print accessible
super function function
null
function super register private
Banana for private
struct lambda
Banana for private
somehow Strawberry Game Apple
data class
null
print Strawberry
my
print Apple
Orange struct Orange
was Banana
null
print Apple
out
Strawberry One register function
data class
more super
was Banana
Game print lambda One
null
accessible register Apple
data class
somehow
somehow
null
Banana Game
was Banana
was
class lambda
class lambda
class lambda
Over
struct One class print
was Banana
was Banana
more Strawberry join
null
was Banana
function public lambda
Strawberry
Strawberry
function public lambda
null
null
struct One class print
more Strawberry join
more Strawberry join
more Strawberry join
data only
more Strawberry join
more Strawberry join
lambda my Strawberry
was
null
lambda my Strawberry
for super
Strawberry Strawberry Strawberry Over
null
null
for super
Banana super struct
Banana my my
print join if data
null
only Apple super in
data only
data only
register table
only Apple super in
struct for
Banana my my
lambda my One Game
was accessible lambda out
my One table join
null
lambda accessible register
null
register table
null
while
was accessible lambda out
was accessible lambda out
Apple public out Strawberry
struct for
null
null
lambda accessible register
public Apple Apple Orange
super register
null
null
public Apple Apple Orange
was lambda
lambda accessible register
class print was
lambda accessible register
null
null
register table
was lambda
table
null
struct for
struct for
public only function register
register table
lambda accessible register
public only function register
null
struct for
public private
null
if somehow data table
table out accessible
null
while One One One
if
Game function
public private
Game
somehow
null
lambda accessible register
lambda accessible register
Game
print Orange if
my private if
struct for
struct
register join Apple
register join Apple
null
lambda public for
null
data Strawberry accessible only
Game in
null
for Apple register somehow
Strawberry
struct for
data out super somehow
data Strawberry accessible only
public
data only accessible
public
null
my accessible
while One One One
while One One One
public more
Orange print
public more
null
null
while One One One
null
null
join Game Over
class
class
more data
class
more data
One
function class
One
join while more if
join while more if
somehow
null
somehow
in
class
if somehow my
accessible register
if somehow my
accessible register
accessible register
null
Game register struct
accessible register
Game register struct
accessible register
only private Over join
table my Game table
public
public
null
null
Banana private
Orange public
struct public only
struct public only
function my only
struct public only
accessible out struct
accessible out struct
Orange public
function my only
print private
Banana public
null
null
null
function
print private
my if
my
was data private
null
my
null
was data private
was data private
register Banana Orange for
while
more join public
register Banana Orange for
Strawberry Apple out for
table private lambda Banana
register Banana Orange for
null
public
public
null
null
null
more join public
my
my
more join public
class
Strawberry Apple out for
null
null
null
if Over super
class One register super
null
print class struct was
while
while
in register
if Over super
null
One struct One struct
Strawberry Apple out for
in register
One struct One struct
in register
print class struct was
join Over lambda more
null
null
One struct One struct
in register
Strawberry Apple out for
Strawberry in only class
null
data public Orange
in register
null
print class struct was
if my
data One lambda
data public Orange
null
table for public Banana
null
null
more function lambda Banana
join Over lambda more
out
One struct One struct
One
private join super Strawberry
null
null
private join super Strawberry
One struct One struct
One struct One struct
One
data accessible print
null
One
Apple was
while for function class
Apple was
Apple was
out was more
null
while for function class
if
One
if
null
for data function lambda
out public
if
null
private
for data function lambda
function Banana table lambda
out Apple
Apple was struct One
print Banana private
One for Over
null
One for Over
null
One public
print Banana private
null
null
Apple was struct One
public
null
Over super Banana in
Over in function table
for data function lambda
Over super Banana in
for data function lambda
in
function super in
Banana function
accessible Orange struct my
public lambda accessible more
accessible Orange struct my
public
null
Over super Banana in
null
null
null
data lambda
in
null
private Game class
Over super Banana in
private Game class
private Game class
public lambda accessible more
null
data lambda
null
null
One somehow
Apple
Over super Banana in
Apple
null
Over super Banana in
null
out
somehow Banana data
accessible join class
accessible join if
null
Apple
print
null
public for more lambda
null
print
in
print
struct my public
private Game class
null
more only
struct my public
null
null
null
somehow Banana data
Apple
lambda
Apple
Orange
Apple
Apple Orange Banana print
private Game class
somehow Banana data
somehow Banana data
Orange
Apple
accessible join if
for private
accessible join if
null
null
null
public class
somehow Strawberry Banana Strawberry
struct
data join my accessible
data join my accessible
more was
more was
data join my accessible
null
somehow
Banana lambda One
null
Banana lambda One
Banana lambda One
data join my accessible
struct
somehow
struct
Banana lambda
struct
while somehow
somehow
null
while somehow
while somehow
accessible private One
accessible private One
Banana
somehow
out data in
accessible private One
accessible private One
class accessible
null
null
print
print
null
Banana
null
accessible private One
null
struct somehow out private
null
null
Over
class accessible
data more
only
Banana lambda
accessible private One
accessible private One
accessible private One
Orange function
accessible private One
register out join One
One data Game
null
lambda public for
accessible private One
print One
accessible private One
Orange function
null
lambda public for
print One
Banana
more while
null
null
lambda public for
lambda public for
struct in function table
null
null
print more in
more while
private join private struct
Banana public One data
null
class
null
null
function super print private
more out function
print more in
function super print private
more One
null
struct join
struct join
null
function super print private
public somehow
function super print private
accessible super
function super print private
function super print private
Apple Strawberry function
Apple Strawberry function
public somehow
struct join
struct join
null
somehow
join
somehow
table private
more One
One public
somehow data One
private
null
private
null
join
more
more
null
for
more
null
accessible for struct struct
accessible for struct struct
accessible for struct struct
for
more for One my
Game out
accessible for struct struct
only somehow Strawberry
super Strawberry
struct
struct
function
struct
struct
null
super Strawberry
null
private Banana
null
Orange Game
join
null
accessible
my out
my out
join
public
lambda
accessible
accessible
null
while
function
accessible
lambda register out for
function
public
null
null
public
Over public in
while
null
in Over struct more
Game only
was Game Apple
somehow Apple Orange public
One in struct
was Game Apple
null
was Game Apple
null
while
only function
only function
null
null
null
class lambda
class lambda
while Apple
class lambda
One somehow print
One somehow print
class lambda
Banana in somehow One
Banana in somehow One
Banana in somehow One
was struct Over
table Apple table private
Over super accessible private
null
One more my Strawberry
public only function
Over super accessible private
null
my only for more
public only function
One more my Strawberry
One more my Strawberry
print Strawberry if
null
null
in
only function data private
in
only function data private
in
struct
struct
Strawberry public super
null
lambda
Over private data
null
Strawberry public super
Strawberry public super
Strawberry public super
null
Over private data
out class
Over private data
in data lambda Over
null
print super
register struct
null
only private
print super
null
more in more private
somehow public Orange
print super
One private lambda One
Apple
Apple
Apple
Apple
my Game
null
somehow if table
was
only Banana Over Over
my Game
null
only Banana Over Over
public while somehow
null
Strawberry table
Apple
my Game
public Banana was
Strawberry table
null
null
Banana
null
Apple
my Game
Apple
register
data Game
data print
if private
Apple
null
data print
Apple
null
table accessible lambda Apple
null
Apple
One One my
if private
data data while
if private
print
null
register in super public
null
null
Banana super Game super
register in super public
register in super public
in
in
super for join
null
register Game lambda
function super
join somehow
out was
super for join
Orange lambda Apple Orange
register Game lambda
print Strawberry out out
register Game lambda
null
null
null
in
while lambda
while lambda
Banana my
print Strawberry out out
table function Game register
in
Apple join
more
Strawberry One
while Strawberry function
Apple join
One private print my
Banana my
null
Apple
super public
in
super public
in more
data
while
Apple
was register register
null
lambda lambda
was register register
null
class while
Apple
null
accessible accessible while
super public
function
null
null
One my Over if
while
null
data register
Apple join
Game Orange accessible private
register accessible Apple
null
Apple join
null
Game Orange accessible private
data register
Apple join
Apple join
Orange
null
null
my
Apple
Apple
if One in Game
null
Apple register in
table Strawberry join Apple
Apple
only struct
private join
null
was public while public
null
function
register accessible Apple
Apple register in
somehow struct only
null
register accessible Apple
only struct
null
function lambda
Apple
function
function
struct more
class
function public data Banana
struct more
null
function
null
class
struct print Orange
class
struct print Orange
Banana my out
join
only struct
function public data Banana
null
only struct
null
function Banana only Orange
class private
null
my
Over
print Banana table
public Banana
null
null
Banana Orange register print
private join
lambda table One print
null
Over in if
Over
lambda table One print
null
null
super
null
more out
Orange super
if
null
null
print print if
if
Strawberry table Strawberry
print print if
Orange super
if
null
register
register
Strawberry table
register Over struct only
super accessible
super accessible
Apple was function my
register Over struct only
super accessible
print Game register
accessible
out my super
print Game register
my
register
out my super
more out
out for Banana
class public
null
null
register
accessible somehow in
out for Banana
out
in was
accessible
print Game register
print Game register
null
accessible
function Strawberry Game
in was
Apple
accessible
null
print Orange register
out Apple
function Strawberry Game
lambda Game
null
table Strawberry
print lambda private lambda
in was
lambda lambda
print lambda private lambda
table Strawberry
print lambda private lambda
function Strawberry Game
out
One super
accessible
function Strawberry Game
null
more
more
null
null
more
more
if function super
only accessible
join accessible my
join accessible my
if function super
accessible
only accessible
struct only struct out
null
join accessible my
join accessible my
struct only struct out
null
data lambda
join accessible my
data lambda
data lambda
data
data
data
join super super
join accessible my
data lambda
join super super
function my Strawberry
One join data
struct only struct out
if
class private my only
function was Banana accessible
null
Orange
function was Banana accessible
Apple Orange while lambda
Over more data
null
null
null
function my Strawberry
join table
in accessible table
Over more data
table somehow print
table somehow print
accessible
function my Strawberry
table
null
Banana
function my Strawberry
in accessible table
in accessible table
accessible
in accessible table
somehow
null
struct
data super public join
struct
function join
null
function join
null
class join while more
null
class lambda Over
class lambda Over
null
Over
Game data in
Game data in
Game data in
Game data in
Strawberry was struct Over
null
Game data in
null
only struct Strawberry
only struct Strawberry
more more
in
in
more more
in
null
null
Strawberry while Strawberry
One
Strawberry while Strawberry
Strawberry while Strawberry
while
null
in
in
private Strawberry register
Banana One table One
while
private Strawberry register
while
Banana One table One
private Strawberry register
Strawberry private private
null
Game
Banana One table One
in while private
while
while
Banana One table One
Banana One table One
if class
while
null
null
Strawberry private private
was somehow private my
was somehow private my
null
Strawberry private private
lambda super Apple
Strawberry private private
null
null
lambda super Apple
while if
while if
while if
lambda super Apple
lambda super Apple
Apple super while
Over Game Banana
Game Apple public
null
null
null
Game
Game Apple public
accessible Game public my
in my lambda
Game
null
null
if data struct Apple
null
public data register
print private print
null
null
lambda register accessible accessible
print One only if
print One only if
only join Apple
only join Apple
null
only join Apple
One
public while join
One
null
One
table Strawberry
One
Banana
null
Banana
null
One
null
null
private public was
null
public class out
in
public class out
register
null
register
public class accessible
print One class function
struct table table
null
Banana
Banana
only private for public
my
null
my
my
class lambda for table
in only One
was was
Strawberry struct
Strawberry struct
Strawberry struct
null
was was
my accessible while out
function
Game
register was
null
Game
register was
class struct Orange
super
Apple in
join Game lambda struct
only accessible join
Apple in
for Strawberry
null
join Game lambda struct
Game
null
join Game lambda struct
join Game lambda struct
null
null
null
Game
Game
struct
Game
struct
null
null
null
null
null
register One
null
null
null
null
null
null
null
print
print
only struct only
null
join my while accessible
table was
null
Orange table my in
null
struct public if private
out function print
Game
Game
Game
was somehow lambda accessible
null
null
null
One in
One in
class table class out
null
One in
register class Banana
null
null
Game
public Game
One in
public Game
data register
null
in in public
null
One in
One in
null
register for
null
join
print super for if
One in
Apple if if
null
null
null
null
Orange struct
null
lambda only table Strawberry
null
Game
One accessible accessible
null
null
Over print super
Over print super
out while my data
out while my data
function print
print public
null
more Over my
lambda
lambda
print private my
lambda
print public
if
if
Orange
Strawberry function
Orange
Orange
Strawberry function
Strawberry super
Orange
lambda
null
print
private
public Strawberry for Over
print
null
null
print
out One One
super
super
null
super
super
super
super
struct data private somehow
struct data private somehow
class data in Orange
print
null
null
only data table
accessible Apple while print
null
null
print
print
function Game Apple
Strawberry private
Game Game was my
somehow public data Strawberry
if One
null
null
class
null
null
null
accessible lambda only Orange
accessible lambda only Orange
accessible lambda only Orange
accessible lambda only Orange
null
null
null
Orange
null
somehow class Game more
null
data register super Banana
null
null
null
out
null
null
null
null
super class more
super class more
register was accessible if
register was accessible if
null
function struct Strawberry Game
null
null
null
null
function Orange
function Orange
was while class Banana
while data more
null
my data
my data
was
was
was
null
was
was
was
was
was
null
was
was
null
null
Strawberry join out if
null
print accessible my super
print accessible my super
function join
null
null
Banana print
Banana print
class
null
null
Orange Apple
null
private
null
table more
null
if Banana Game One
if Banana Game One
if Banana Game One
if
public was join Apple
data lambda only
in register Game for
null
null
null
null
null
lambda struct Banana
lambda struct Banana
lambda struct Banana
lambda struct Banana
null
null
null
One
One
null
Orange Over
in
my private struct
Orange table
in
null
null
in
null
null
my private struct
only register
only register
null
Orange out table my
null
Orange out table my
Strawberry
my Game public
Strawberry
for Banana was if
Strawberry
Strawberry
null
lambda for struct
register
register
null
Apple Strawberry function
public Banana
only Orange
null
for out join if
for out join if
for out join if
only Orange
only Orange
null
for out join if
null
while Strawberry public
while Strawberry public
somehow while out
for out join if
super for only if
for out join if
null
super for only if
data data
null
for out join if
join
null
null
join
more more
null
null
for out join if
my data One
join
null
somehow accessible
null
null
public
null
null
null
Banana while Game
null
null
null
null
null
null
accessible was
null
accessible was
accessible
null
null
more join while
more join while
null
lambda only struct
lambda table
lambda only struct
lambda only struct
null
table Apple lambda
null
null
null
null
null
null
only struct while only
only struct while only
class register
class register
One
null
Game One
null
null
null
while if if only
data
while if if only
while if if only
while if if only
while if if only
while if if only
accessible Orange for
only
null
null
null
null
for public
in Apple my
in Apple my
register
was somehow in
was somehow in
was somehow in
class was was
Banana public accessible
was public
null
null
null
Game
class was was
null
Game if register only
null
class was was
Banana public accessible
super out
super out
accessible
out
out
Banana Banana Strawberry my
out
my while
accessible
class was
out
for somehow
public for lambda
public for lambda
Game if only if
for register
null
only
only
data join
class Apple One
struct Orange
null
struct Orange
class Apple One
somehow more more
struct Orange
struct Orange
class Apple One
somehow more more
Apple only
only public
Apple struct public Apple
null
Apple struct public Apple
somehow more more
for in only
join struct out function
Over
register while register while
null
Orange accessible for
Game class Strawberry private
null
Game class Strawberry private
join struct out function
was for
for in only
in
table Game print table
null
class if
join
join
data was private if
more data
Strawberry Game lambda while
while out
join
Game public
join
while out
join
join
function struct Game
null
Apple
private
Apple if
Apple
null
in
data
null
while out
null
null
for register
null
Apple if
null
null
null
null
data
data data Over
somehow Strawberry Orange
null
null
function
One function my while
function
public
null
public
null
null
null
null
null
null
null
null
register more data table
null
print lambda
print lambda
register more data table
null
register more data table
register more data table
register more data table
if Orange register
if Orange register
if Orange register
if Orange register
if Orange register
while Game
accessible only table Banana
null
while Game
Over
was was
public
public
Strawberry Strawberry lambda
public
null
Strawberry Strawberry lambda
Strawberry Strawberry lambda
public
somehow print print
only
somehow print print
somehow print print
Strawberry Strawberry lambda
null
null
while join was only
table accessible in
my function was Orange
null
while join was only
table One
while join was only
super accessible join function
table accessible in
super accessible join function
while join was only
while join was only
data
null
null
data
null
null
if
Orange more lambda
join data
Orange more lambda
join data
Orange more lambda
null
function lambda my somehow
accessible data
null
Game
Orange more lambda
null
Game
null
null
Apple only was
Apple only was
my
function lambda my somehow
accessible data
Game
for accessible
Over
out somehow while Banana
null
Game
print super Over
Apple join
print class was
while my super
Game class
print class was
was table accessible
null
while One lambda
null
Apple join
One class
null
Game class
while One lambda
null
was private register only
null
my
was private register only
only more for more
Game class
for
null
null
print class was
function super super One
was private register only
my
only table in
Banana private
was private register only
class function Strawberry
in join join
null
class function Strawberry
One public more function
null
while
only
my
null
my Orange
super while Game print
null
null
Apple register table while
null
Orange
accessible public super in
register data
Apple register function struct
function if
Orange
null
was Apple for Apple
One public more function
null
null
Orange
register Strawberry class public
more only in
Orange
out
lambda only struct Apple
out
null
register
Banana private
null
while struct Strawberry
register Strawberry class public
more
One public more function
in in register private
private One join Over
null
Orange print Banana
private One join Over
only private print One
out public Banana my
null
more out
while
while
Apple
only private print One
Over in was my
accessible Game
if
null
null
while Game register data
null
if
Apple join
struct out while data
Apple data my register
somehow table
Strawberry
Strawberry
One in
Apple join
One in
One in
null
Apple join
more Orange Strawberry
Strawberry accessible print public
null
Strawberry accessible print public
class struct
class struct
class struct
null
null
null
more Apple private Orange
null
null
null
null
null
null
null
for for only Over
null
data table
null
null
null
my for Strawberry
null
accessible function for
null
accessible function for
null
accessible function for
accessible function for
null
null
class table
null
null
private in
table
null
print Banana Orange
One while
null
Apple in for print
null
null
Over
null
null
null
null
Strawberry accessible my private
null
null
accessible function register if
accessible function register if
accessible function register if
null
while super
while super
super somehow data
in
Strawberry One Game join
super somehow data
Strawberry One Game join
super somehow data
Strawberry One Game join
null
null
null
join more
Apple One Banana super
null
null
null
null
null
null
null
null
null
super super
super super
super super
super super
super super
table in function
null
table in function
null
null
data Strawberry
super my
super my
null
null
null
null
null
data only
data only
null
private
null
data only
only in
only in
lambda private
only while out in
print Apple
print Apple
print Apple
public super super
null
public Orange if Orange
null
null
null
table my table
null
null
null
super Apple
super Apple
null
Apple class Game Banana
null
function class
out
Game
Over my
was more join function
join struct Orange public
Game
join struct Orange public
register
class accessible while lambda
only struct somehow
class accessible while lambda
Game for
table table while
table table while
only struct
Strawberry was more data
Strawberry was more data
was in
Over
struct somehow
Strawberry was more data
struct somehow
somehow Apple
Banana
Banana
Banana
function public table
more Orange in Game
in One more public
register
somehow print while
register
register
struct accessible my
struct accessible my
register
register
somehow print while
function public table
somehow print while
null
in only Orange Apple
Apple
Orange struct
in only Orange Apple
accessible
if for
function public table
in only Orange Apple
null
accessible
in only Orange Apple
Orange struct
in only Orange Apple
Banana struct out print
accessible
more my function
function public table
Banana struct out print
class out
super lambda class was
null
in
function
out more more
out more more
accessible join One
out more more
out more more
print
null
out more more
null
struct class Apple table
null
null
null
private more Game
private more Game
null
null
null
null
null
null
null
null
null
null
null
was register join lambda
struct join out only
null
null
null
null
null
null
null
null
null
null
table
null
somehow my
Banana class struct
Game
print
in join table class
null
Banana class struct
data data data
null
Banana class struct
Game
null
table accessible public
null
null
class
table accessible public
Banana class struct
while struct data my
while struct data my
out while data
out while data
out while data
null
null
accessible
out
null
null
null
null
null
null
Apple for
null
Apple for
Apple for
null
Apple for
Apple for
in for public
in for public
null
for table class while
for table class while
null
my out
null
lambda
lambda
Strawberry One for for
lambda
table
Apple
table
null
data struct Apple Over
public data only Strawberry
Strawberry
class Apple Over
public data only Strawberry
accessible for in
out One Strawberry table
Game class Apple table
super Strawberry
super Strawberry
super Strawberry
null
null
null
private data Banana
function print Over only
function print Over only
public public
public public
public public
function print Over only
function print Over only
only while Orange
public public
function print Over only
more Game One
data
was Game while register
null
null
function print Over only
data
data
while
table while out print
table while out print
table struct out
null
was Game while register
null
Game join Over
Game join Over
table
null
my Banana while for
my Banana while for
my Banana while for
Game join Over
null
register
null
null
null
null
join Banana
was
public for
public for
public for
out register print
null
null
private register Apple only
out register print
class Game lambda data
function out register
function out register
private register Apple only
private register Apple only
out register print
null
more public table
out join function if
null
function function Strawberry Apple
public register in while
accessible Apple
accessible Apple
Over Game
null
Strawberry if accessible
function function Strawberry Apple
if if
print
Over Game
Banana super Over was
print
null
Over Game
Over Game
table if
null
private data Game if
table if
table if
more Orange accessible function
Banana table register
null
null
null
null
null
null
null
null
null
null
null
null
null
function
while lambda
struct
only only
One table table super
more print Over
struct
function somehow Apple while
Over Strawberry register
function somehow Apple while
null
while
public my function
struct
only private
null
only private
while
while
One
super Game
more function public table
while
struct
null
null
more function public table
while
Orange private was
null
One
Orange private was
Orange
while
Orange
in
Strawberry function
Orange private was
Strawberry function
null
null
null
out
function lambda was Game
Game while Game
lambda print if
function lambda was Game
null
null
private while
join
null
null
null
function lambda was Game
null
One
function lambda was Game
null
One while
null
null
Over public One more
Over public One more
function lambda was Game
function lambda was Game
null
Strawberry while
One
function lambda was Game
Over public One more
function lambda was Game
Over join
function lambda was Game
function lambda was Game
null
for out One register
Over join
null
only Over super Apple
Strawberry while
null
One
Over data struct
accessible struct data for
while
while
null
only Over super Apple
One Apple
null
accessible struct data for
accessible struct data for
somehow was more
out One
only Over super Apple
somehow was more
join super print
was Apple
null
null
One Apple
null
in Orange data Game
lambda class Over
only Over super Apple
somehow was more
null
Game table my
One Apple
join super print
only somehow
only
Game table my
lambda class Over
only somehow
table class
null
Game table my
One Apple
null
table my only in
struct while
join super print
lambda
Orange Orange
class for out print
join super print
only
Over for table if
null
Game table my
Over for table if
lambda
Game register private
super out somehow somehow
table class
lambda
lambda
lambda somehow struct
join super print
my
data was super if
print accessible data
lambda somehow struct
super out somehow somehow
for
Orange was
was Strawberry more class
for
join super print
join super print
for
accessible
null
in if
was my was
in if
null
null
more struct
null
null
my lambda out
if Over Strawberry
was if in while
if Over Strawberry
accessible Apple table One
was if in while
data
null
null
data
Over class accessible One
data in print
was if while
null
data
null
if print my while
in Banana
in Banana
One
was super table
if super
join out
was if while
Over data in
null
null
null
if print my while
null
super more
Over data in
in was accessible
if print my while
null
join out
in was accessible
Banana out out
Banana out out
super more
class class
function class table
join out
data
Banana out out
null
for somehow somehow
join out
for somehow somehow
for somehow somehow
class class
data join class
join out
null
null
class class
for somehow somehow
if
null
while somehow
null
Game
function
join out
super more
class class
Game
print
null
class class
class class
Game
class class
public if Orange if
null
public accessible Orange
null
null
null
public if Orange if
class struct
only lambda join somehow
null
class struct
public if Orange if
out struct in
out struct in
class class
only join
public if Orange if
null
public accessible Orange
while
null
if while for
null
struct accessible
if while for
null
null
if while for
null
Game
null
out
Game
null
if while for
null
Game class my
Orange print
out
for super
Orange print
for super
lambda
lambda
register data Over
null
register
my
register data Over
lambda
for my somehow only
for my somehow only
Orange
Over
Over
for in only function
Over
null
Game class my
if out join print
my
Orange
null
Apple public
if struct
null
null
if struct
null
only
Apple Strawberry data data
One in
null
somehow
Orange join print
Orange join print
Orange join print
Orange join print
Game super
null
out in out class
out in out class
private
null
data super
if function
more Apple
null
null
lambda Apple somehow Banana
One table only Banana
null
One table only Banana
somehow while
somehow while
more Apple
somehow while
somehow while
register function was public
was public
One table only Banana
if function
accessible more while
was public
null
public super register in
null
if function
was public
accessible
null
register function was public
accessible
was was
was was
null
was was
table One table
was was
function if
Apple Apple if class
null
function if
null
accessible
if out in
Over in table private
for register print
accessible
for register print
was was
lambda Banana
function if
super struct function function
null
null
null
Game only
accessible was function
super struct function function
null
super struct function function
null
public if register lambda
Over in table private
public if register lambda
Game was Over super
super super super Strawberry
somehow my
more
null
if function
if function
null
accessible class lambda
accessible class lambda
null
super super super Strawberry
in only print Orange
accessible class lambda
accessible class lambda
null
super super super Strawberry
null
Apple
One Over table my
null
for in Banana
null
public
struct function
null
null
struct function
table
null
null
null
register Game if
Strawberry
Strawberry
Strawberry
somehow public was
null
somehow public was
Strawberry
private
null
null
null
null
null
null
in lambda function One
null
register
null
in lambda function One
Apple Over
in lambda function One
in lambda function One
in Apple
null
null
register
Apple Over
null
null
somehow
struct Over if
null
null
super super
null
Game more private
Game more private
lambda accessible
my
lambda accessible
Strawberry was my in
null
Strawberry was my in
null
null
my
null
was while my
Strawberry was
Banana more only somehow
lambda
lambda
Strawberry was
my
Banana more only somehow
Strawberry was
accessible while more
Strawberry was
my
Banana more only somehow
accessible accessible Banana
print lambda more
null
null
null
class Banana in print
class Banana in print
One more
print lambda more
table Banana more print
lambda
Strawberry was
One Banana
class Banana in print
accessible accessible Banana
for
accessible accessible Banana
null
table Banana more print
for
null
class Banana in print
data more Game
for out in
null
accessible
class Banana in print
class Banana in print
for
for out in
class Banana in print
null
One accessible
null
Orange for
accessible
null
accessible
lambda function Apple somehow
table Strawberry was
accessible
only out while
null
data only join
for
table Strawberry was
Over Banana join
private was was
null
null
table if Game Over
super register struct
data only join
null
class Banana in print
super register struct
lambda only
Banana
class
super register struct
more while somehow
null
super
super
join Orange
Game
null
data if Orange out
if
join Orange
print
join Orange
lambda struct
null
print Strawberry
print Strawberry
null
super register struct
if
print Strawberry
null
null
null
super
super register struct
null
print Strawberry
more join
class in
null
null
print Strawberry
super register struct
Over
Over
super register struct
print Strawberry
Over
One print
struct for Over accessible
print Strawberry
null
Orange more table Orange
super register struct
null
super register struct
null
null
super register struct
super register struct
super register struct
in print
null
join Apple more while
join Apple more while
null
for Over Game if
print struct Orange
for Over Game if
null
null
null
null
join
was table private lambda
null
join
register struct One
was for table
join
register struct One
was for table
register struct One
join One
null
accessible data
accessible data
null
null
null
Banana only out
struct somehow for in
null
Banana only out
null
public only data data
struct somehow for in
struct somehow for in
struct somehow for in
public function struct
somehow register public
somehow register public
somehow register public
Game
Strawberry class was Game
null
somehow register public
null
One super
null
for somehow for more
out more lambda
out Banana super public
data Strawberry
null
data Strawberry
register
more
null
my
table
out was
out was
null
null
null
null
null
for Game
for Game
out function
out function
null
null
null
Over in table
null
null
null
my if
null
my if
Over data while Orange
only table
data register
null
function in
function in
function in
while super
out
out
out
class join
null
class join
null
class join
null
class join
class join
null
null
Over only
null
Over only
private
out table register
more
private
more
private
null
public
null
public accessible
join
Game function my
join
join
out Over
null
more more
null
Game
super One super Game
super One super Game
in function for join
class while Game Orange
more
class while Game Orange
null
null
in function for join
Game
while print Game
while print Game
join Apple
while print Game
public join table function
join Apple
while print Game
only my Banana
if
null
Strawberry
if
while print Game
Banana
public Apple Orange only
public Apple Orange only
null
if
if
null
null
lambda for
for super
for super
table only
null
for super
out Banana
table only
null
if
null
class while
table only
Strawberry
Orange table
null
null
null
null
Orange table
table Game
null
null
struct
out
data out more for
my super function
null
super class somehow class
struct function Orange out
null
Game table Orange
super class somehow class
struct
accessible
public super out register
public out
lambda accessible
data out more for
lambda accessible
class
public super out register
class
null
public out
if print out data
public function class
public out
if print out data
if print out data
if print out data
public out
public out
public out
public out
public out
public out
null
null
null
join
join
accessible Banana
for
null
for
null
for
for
function Over
function Over
function Over
Over for was data
function Over
Over for was data
Over for was data
null
super register while
super register while
super register while
null
if One
if One
Apple Strawberry
null
if One
Orange private table private
null
only
was
Orange private table private
only
null
null
Orange private table private
only
Strawberry
only
private join Orange lambda
null
Game class
Game class
Game class
null
null
null
Apple One more
print struct print One
print struct print One
was for One
was for One
class struct
null
class struct
null
register if was One
in Over
register if was One
null
null
Apple class
null
null
Game Orange while
Game Orange while
null
null
null
lambda
lambda
null
more
null
class in public in
only Orange
null
null
null
lambda
lambda
lambda
null
null
more only
if for for struct
function Orange table class
function Orange table class
register if if class
lambda in out private
while
accessible in lambda
somehow
private
in accessible
null
private
while
private
while
in accessible
private
private
struct Game
struct somehow
function accessible table
null
struct somehow
null
null
null
join Over only
null
null
null
Game struct print Apple
One if lambda my
One if lambda my
null
Strawberry super more Banana
Banana print Apple
Banana print Apple
Strawberry super more Banana
null
Banana print Apple
out Apple register
out Apple register
only
Apple join
Apple join
null
only
Apple join
null
null
null
null
null
Strawberry Strawberry
private was
Strawberry Strawberry
Game
private was
Game
more Over somehow
was print
null
more Over somehow
Game
was print
table
Apple
Apple
table
null
Strawberry struct Orange Game
somehow Apple while Over
null
private function Over
table Strawberry Banana
null
only more
in accessible Game if
null
in accessible Game if
Apple print for
in accessible Game if
Over table Orange was
in accessible Game if
for
null
join public Apple
null
null
function class was
public print Over in
join public Apple
null
struct Game for in
join my class
struct Game for in
for
null
accessible while Game
struct Game for in
join my class
out Apple somehow
null
private public table struct
join in somehow
register class data
while super more print
null
out in table
if
null
out super was public
more somehow data
super class join
more lambda class
lambda lambda my
struct Game for in
out super was public
more somehow data
class if out only
lambda lambda my
out super was public
somehow
lambda lambda my
out in table
class if out only
struct Game for in
class if out only
join my class
more lambda class
class if out only
lambda lambda my
Apple more public Game
null
while Orange Game
more public
Apple more public Game
more public
null
lambda lambda my
lambda lambda my
struct Game for in
lambda lambda my
class Game super my
out for
only print if if
lambda lambda my
accessible register
lambda lambda my
null
was
more public
lambda lambda my
for while function Strawberry
out accessible function Banana
for while function Strawberry
struct Over struct
if Strawberry table join
struct Over struct
lambda lambda my
for data function if
accessible register
out was Over my
if Strawberry table join
super
null
out was Over my
join in register
Over public
out was Over my
for
out was Over my
only
for data function if
only
null
join in register
join in register
only
only
Over Strawberry data
super Orange more if
was
super Orange more if
null
Over Strawberry data
One only Strawberry class
only
null
was
One only Strawberry class
null
join in register
null
in
One
One
private my table in
private my table in
null
struct join
null
null
null
null
null
null
null
in Banana print lambda
in Banana print lambda
in Banana print lambda
in Banana print lambda
print out out accessible
print out out accessible
Orange join
lambda
Banana Banana more register
struct while Over
Orange join
print public private Game
Banana Banana more register
null
was
was
null
print public private Game
null
more
more
print public private Game
while while more
Orange
lambda
only print my
Orange
only print my
Orange join
Orange
null
Orange join
Orange join
if table
if table
only print my
Strawberry
register
Orange
data Strawberry Apple Game
Orange
was data only
private was private struct
null
null
null
was data only
join while
was data only
Strawberry
private was private struct
private was private struct
null
private was private struct
was data only
Orange Orange was
while register Strawberry more
null
Orange
somehow Orange private
null
in only
super Game register
private was private struct
in only
super Game register
out Strawberry
table data private
in only
null
lambda was
lambda was
out lambda Game function
in while Strawberry
join join Banana in
was
in while Strawberry
more table Apple
null
while
data register
register public Over print
Orange
in join in class
in while Strawberry
null
was
null
while
somehow
print lambda
more table Apple
table join data register
null
for
accessible
more table Apple
for
for
null
struct
null
Orange
table out Apple
in Strawberry
in Strawberry
null
Strawberry accessible struct
for my out super
in
accessible
null
null
function Apple
Orange only Over
table out Apple
null
Strawberry accessible struct
class lambda
null
null
for my out super
null
lambda
class
null
only struct
Apple super class my
print register
Orange
accessible
class lambda
public in
null
null
public print private register
Orange
Orange
Banana my only if
Banana my only if
Banana my only if
Apple super class my
Banana my only if
null
accessible private Over
private somehow more public
private somehow more public
my accessible
null
null
out was join
null
class lambda
null
Banana my only if
more register Banana
lambda
null
out was join
null
Banana my only if
lambda
null
if print was my
public my print
accessible private Banana
Game table
if print was my
public my print
null
my One out my
Banana my only if
Orange Game data data
Over in super
Orange Game data data
in
table
Banana my only if
more only my if
accessible join
in
data data in
join print lambda
in public
table
Over Strawberry out while
null
my was
null
Orange
null
data data in
out Banana only
table
Orange
join lambda
more
more
table
somehow private
Orange
null
Orange
lambda
out join while
join lambda
table Over accessible
Orange
somehow private
my was
null
was One
if more
my was
was Over somehow out
if more
join lambda
was Over somehow out
null
Banana my if
join lambda
was Over somehow out
null
function Strawberry
null
null
function Strawberry
Strawberry only private
One
Strawberry only private
data private
null
only super my
private
private
private
Game Apple
private
was more function
Game Apple
Strawberry only private
Game Apple
Banana
Banana
Game public
Game public
Strawberry only private
my accessible more Banana
Game Apple
null
for somehow lambda my
if
if
if accessible One
lambda
if
join lambda somehow more
join lambda somehow more
function join
null
was my data
public
Strawberry
Strawberry
Strawberry
Strawberry
Strawberry
Strawberry
Strawberry
Apple
null
null
public
Apple struct more data
Apple struct more data
null
if Orange was accessible
super
print Game out
print Game out
super Strawberry
Strawberry in in out
super Strawberry
if Orange was accessible
null
Strawberry in in out
Apple struct more data
lambda Game
if Orange was accessible
Apple struct more data
Apple struct more data
null
Apple struct more data
lambda Game
null
Strawberry in in out
lambda Game
while somehow
more
more
join lambda data
join lambda data
join lambda data
more
join in
null
null
null
register while data was
register while data was
register while data was
register while data was
null
Apple
while print register
while print register
somehow in
null
Strawberry public more Strawberry
null
Orange data
Strawberry public more Strawberry
data print
struct
null
One private super accessible
my Orange
my Orange
my Orange
null
null
somehow register One function
somehow register One function
out accessible
somehow register One function
out accessible
more
for register private
null
more
null
null
was print lambda
was print lambda
public public
public public
null
public public
print One
my One was
if
if
out Banana Apple Strawberry
more register struct if
print was somehow in
public Banana table for
null
null
null
null
null
null
null
null
null
null
null
null
null
null
for Banana for Orange
Game
null
One Over more
register
register
Game more One
register
null
register
more Game
Game was only print
null
out data
Banana
Banana
Banana
more super public join
Banana
null
null
function public my more
more super public join
null
more super public join
Over for in struct
Over for in struct
only accessible
only accessible
more super public join
more super public join
Over for in struct
more super public join
Over for in struct
more super public join
print was while
public
public
out class
Orange table Game
null
public
more
more
public
Orange table Game
table out
null
null
table out
register in
table out
null
was private Banana
was private Banana
in
for
print lambda public function
print lambda public function
null
null
table Apple print
null
null
for
null
null
null
null
lambda struct Orange
lambda struct Orange
null
lambda struct Orange
null
data Banana only Game
null
null
null
null
print private table
print private table
was my
null
while in
lambda Banana accessible function
lambda Banana accessible function
register was
class Apple in
lambda Banana accessible function
lambda Banana accessible function
Orange
Orange
Orange
null
null
null
null
null
Orange accessible
Orange accessible
Orange accessible
Over
Over
Orange accessible
Apple more
null
only class
null
my Banana function
Over
Over
Orange Game
Over
null
null
out private super
public super for function
public super for function
null
table
while in
in only Banana
null
null
null
null
accessible
public private Strawberry super
null
null
null
null
accessible
accessible
accessible
lambda Strawberry Apple
lambda Strawberry Apple
null
was more Apple
null
null
private class for
private class for
private class for
null
print my struct
print my struct
print my struct
null
print my struct
null
join One more
join One more
join One more
join One more
null
class
null
null
public join Orange more
public join Orange more
public join Orange more
null
lambda only somehow
null
table for if Apple
table for if Apple
table for if Apple
only Strawberry struct
table for if Apple
private
null
struct Orange
in while in private
struct Orange
null
in while in private
my out
in was Over
join function somehow
in while in private
if my more
null
private
my out
in was Over
for register struct was
for register struct was
in was Over
in while in private
for register struct was
Game was if data
Game was if data
null
in while in private
join was public for
in
if Orange
null
join for private in
null
join for private in
struct
in
null
null
if
null
out only Over for
struct only more
for somehow super
in was Over
public Over was table
Orange lambda out register
while public in
Orange join lambda
null
null
accessible
null
super super while
Orange join lambda
null
struct only more
struct only more
struct class more
table table
table table
super super while
accessible
public One
Orange lambda out register
somehow
struct class more
my
in
function super my
my
out Banana my
null
somehow
my
join in One for
null
null
my
null
null
table class
Orange lambda out register
somehow
my
null
somehow
my
One Orange struct accessible
table class
Orange lambda out register
somehow
table class
null
super super while
null
out
register struct register
out super while data
out super while data
null
Strawberry Strawberry was public
register struct register
out
struct
Apple struct lambda for
null
struct
lambda Over
only function while function
struct
struct
struct struct Game private
lambda Over
register class Game super
out private Game super
out out while
my my print
struct struct Game private
out private Game super
out private Game super
null
out function
null
register class Game super
only
only
in register Banana
register class Game super
null
for my
somehow table
lambda
Over private in print
register register table One
Banana out if
null
register
somehow table
class class
register register table One
accessible
super was super
lambda function
Apple
null
Banana out if
Apple
null
null
Banana out if
super was super
super was super
function my
was my in table
print more more
Banana out if
my
Orange while
null
function my
while
null
Banana out if
was Strawberry
Banana out if
was Strawberry
Apple accessible
was Strawberry
null
null
null
table
null
print somehow Orange
accessible One
join
null
null
was super
data
null
data
null
null
data
null
data
data
null
null
print class struct out
Apple
if somehow
data somehow
null
for Game
struct
null
struct
accessible table table
accessible table table
Strawberry accessible print
data
for Game for
join in Strawberry
function
function
private if while lambda
if function Banana more
if function Banana more
if function Banana more
null
null
null
Over register
null
out print
only
null
null
null
null
null
null
null
null
null
null
null
null
null
null
if
if
private
more super
more super
null
accessible while
if was
print Strawberry
One class join register
null
if was
if was
if was
in while Strawberry accessible
class Orange out register
table data while only
Game private public out
in while Strawberry accessible
null
class super private struct
Over
class super private struct
class super private struct
somehow
null
in
class super private struct
Strawberry public Game
One
super
join while
null
while register more Game
while register more Game
accessible
super Strawberry data data
class
Strawberry
Strawberry
Strawberry
Apple
Over
while was join One
null
null
null
null
null
null
null
null
null
null
One out register One
One out register One
One out register One
One out register One
Banana One
for table print
null
for table print
for table print
for table print
struct my
for table print
if data join was
if data join was
for table print
for table print
null
null
null
null
join
Strawberry
join
join
join print struct
class accessible my
join print struct
Strawberry
class accessible my
Strawberry Banana private class
Strawberry Banana private class
Strawberry
table Strawberry
Strawberry
Strawberry
join super Over data
null
somehow super join
Strawberry Banana private class
Strawberry Banana private class
null
Orange print lambda join
Strawberry Banana private class
only Over if Strawberry
accessible public register data
for
for
only Over if Strawberry
Game
null
accessible out only Apple
accessible out only Apple
only Over if Strawberry
accessible out only Apple
super private Apple
super private Apple
out
null
null
null
null
Orange while
Orange while
null
null
Strawberry was
somehow data
null
somehow data
join
join
somehow data
join
private out
for for was
null
null
for for was
for for was
Game in class
function
register somehow
null
Game in class
Orange private register One
Orange private register One
function
null
Game for
was out
One private
Game in class
Game for
out accessible Banana print
null
function more function
class Game data print
more Game
more Game
One private
more Game
more accessible
more accessible
join join register
null
public if Apple
was somehow Banana was
public if Apple
while
null
null
while
data if
null
One private
was if my
data function only
Game class public Banana
was if my
while more Strawberry table
somehow my only
One Orange print
Game
somehow my only
Game
Game
while Banana if my
print
Orange more public Apple
null
Orange more public Apple
Game my accessible
Game my accessible
null
for Apple
for Apple
for Apple
for
null
null
accessible
was
accessible
null
Orange
accessible
null
only
null
null
null
null
public Orange
null
null
null
null
private
private
Over
Over
Banana
Banana
Banana
Banana
function Banana
function Banana
null
private only super was
private
function table register
Apple Strawberry
super
super
if lambda
super
was super Orange data
was super Orange data
class
Banana
Over
null
while
Strawberry data only
somehow out accessible data
somehow out accessible data
in
Strawberry data only
null
more
null
null
function if register join
null
null
lambda
lambda
was super if Orange
data data Banana
null
null
null
null
null
null
null
null
null
null
null
null
Banana was One
print Game public print
print Game public print
null
while struct lambda
null
data
while struct lambda
data
was
was
lambda Apple if
super
super
null
Over more accessible
in register
in register
null
super struct table
super for
register join more
in register
null
null
for public Orange class
table only for lambda
super for
null
private my super while
null
if while
in register
Over Apple
private my super while
in register
Banana only
null
private Game only struct
Banana only
accessible
private my super while
public public if data
Banana only
accessible
private Game only struct
null
while in data my
null
null
while in data my
while was private lambda
null
Game more data
accessible
Orange table lambda
null
Game more data
lambda print data lambda
accessible Orange data public
One function table Banana
accessible Orange data public
Orange Strawberry
Orange table lambda
print Over my
Orange table lambda
table function Orange somehow
Orange table lambda
lambda print data lambda
null
print Over my
null
One function table Banana
register
register
null
register
null
One function table Banana
One function table Banana
Game Game public
Game Game public
One
only in
class super function register
Game Game public
Game Game public
data
null
data
Game Game public
lambda Orange
null
only accessible class
data
more super in
only accessible class
only accessible class
only accessible class
One Over for
public table lambda accessible
public table lambda accessible
public table lambda accessible
table
private function
null
private function
public table lambda accessible
Apple
Apple
null
Apple
print
null
only super table public
null
null
print
struct Strawberry more private
only super table public
null
print
print
only super table public
print
Orange One in
private
private
private
private
null
private
null
null
more my
more my
null
data
null
only was accessible Over
only was accessible Over
only
One if
Game join
my only data Apple
null
my only data Apple
null
only was accessible Over
my only data Apple
my only data Apple
my only data Apple
null
while Over class Strawberry
null
data struct public
only accessible my table
Strawberry in
Apple
table register
Apple
Apple
Banana
table register
while print struct data
while print struct data
table register
print my
print my
while print struct data
null
null
null
null
null
somehow private super
somehow private super
somehow private super
null
somehow private super
null
struct struct
struct struct
somehow private super
somehow private super
somehow private super
struct struct
struct struct
null
for while Banana super
register Apple data Strawberry
somehow private super
Apple
null
out private
for while Banana super
data Banana private
for while Banana super
register Apple data Strawberry
register Apple data Strawberry
null
for while Banana super
null
my Game out out
table for
out private
my Game out out
for while Banana super
was my was private
somehow while struct
null
null
null
my Game out out
was my was private
struct
null
data
null
print
out Banana lambda if
out Banana lambda if
Apple
data
more class public in
function my in was
null
while register
somehow while struct
was my table function
Strawberry more Strawberry
somehow while struct
while register
null
somehow while struct
Strawberry more Strawberry
Strawberry more Strawberry
null
public somehow Over Over
somehow Banana Orange
only table
if print accessible Apple
Strawberry was public
null
was more somehow if
register more
Orange
null
null
null
null
join only somehow
accessible somehow more more
Strawberry was public
join only somehow
Apple public somehow Banana
join only somehow
lambda Strawberry in
struct public Over
struct public Over
join only somehow
register print
register print
Orange out function
Orange out function
Strawberry my private
Strawberry my private
null
null
null
null
null
lambda
One my public
One my public
Banana
null
Banana class One
private if out lambda
null
null
null
null
null
table in
null
null
null
null
null
null
null
null
somehow Apple
my print print register
Banana for Over
somehow Apple
Banana for Over
Banana for Over
null
One private One
null
One private One
Banana Banana
struct while
function
somehow was
somehow Apple
somehow was
function
super only only
print while only
null
function
null
print while only
Banana Banana
print while only
null
Banana Banana
data
data
Apple
struct my class
out Apple only
struct table lambda
null
out Apple only
Apple while Game super
Apple while Game super
out Apple only
null
out Apple only
data
data
somehow
Apple while Game super
Apple while Game super
null
Over only if
data
my struct
my struct
null
somehow was lambda
more struct
join
data
join
more struct
data
null
Strawberry Over somehow
somehow was lambda
for only
for only
data Game
data Game
Strawberry Over somehow
null
my struct
my struct
my struct
was Banana Strawberry Apple
data
my struct
was Banana Strawberry Apple
null
null
null
class while join print
while private function was
class while join print
table register
Apple Orange out struct
table register
null
Apple class
null
Apple class
null
null
null
table register
table register
Apple class
Apple class
null
table register
null
super
super
for Apple Apple
accessible register
accessible register
somehow
data table somehow class
register
register
register
my Strawberry register
my Strawberry register
while
null
null
class table while
out
out
null
Orange table print private
Orange table print private
Orange table print private
Orange table print private
null
Apple
Apple
Apple
more function Game print
null
One Apple Banana
null
null
null
for function class private
for function class private
for function class private
null
null
null
Game print out join
Game print out join
Game print out join
Game print out join
join if
Banana Apple public
null
public somehow register in
public somehow register in
public my Game
for
only table
public Orange out
public Orange out
only public Strawberry Apple
null
null
null
null
null
null
out Strawberry
out Strawberry
null
out Strawberry
null
null
lambda was
null
while in print register
Apple register
Apple register
Strawberry Game Over
Apple register
Apple register
somehow function public Banana
null
Apple register
null
null
null
One while Strawberry
my
my
class in Orange only
struct join Over
struct join Over
lambda Apple
One
One
super private struct
null
Orange was
Banana
null
Orange was
Orange was
super print Strawberry
Orange was
null
null
null
register
register
register
register
null
null
Game
data
null
null
null
null
struct Game somehow
null
null
null
Strawberry
Strawberry
function my One
function my One
function my One
function my One
struct join accessible out
null
One only only my
One only only my
Game in
null
One somehow
One somehow
One somehow
One only only my
only
Banana function super
only
One somehow
Strawberry
Strawberry
lambda more was
only
Game in
only
only
Game in
lambda more was
null
null
null
null
null
struct Strawberry join
struct Strawberry join
null
null
null
null
null
null
accessible print accessible
Game One if Orange
Game One if Orange
Game One if Orange
table
Apple struct
table
Apple
null
super function
Over Strawberry was
in
null
public super only
null
in Orange was
in Orange was
print
print
print
null
if for
null
was print table lambda
null
One register
print out
if for
print out
One register
if for
public Over
if for
null
accessible public class only
null
if for
null
null
print out
function
null
out
null
One
One
data only
null
data only
somehow
data only
One register
out
Strawberry in while
null
Strawberry in while
null
Strawberry in while
class
null
accessible Over private
accessible Over private
One One table
only table register lambda
accessible class my
One One table
only table register lambda
super out
only table register lambda
accessible lambda accessible
accessible lambda accessible
more my super Orange
public public
super out
One One table
public public
more my super Orange
null
super out
more for
accessible lambda accessible
One One table
null
public public
null
super
Apple struct
accessible lambda accessible
super somehow
null
accessible lambda accessible
if out data
null
super somehow
public
while Orange Banana lambda
if out data
register more for
Orange
private Apple struct Orange
if out data
register Strawberry more table
while Orange Banana lambda
print was was
print was was
only for
while Orange Banana lambda
accessible register Banana
null
somehow accessible
null
null
join for Banana
out more private register
out more private register
null
lambda
accessible print super function
out more private register
null
lambda
struct
accessible print super function
accessible print super function
public
for
for
only out Orange
only out Orange
only out Orange
null
struct
for
null
null
join for Game struct
register Strawberry
null
somehow Over table join
somehow Over table join
somehow Over table join
struct private Apple
struct private Apple
null
out
Apple
if
Apple
null
was Strawberry
null
function print table was
private join in accessible
lambda for more Strawberry
function print table was
private join in accessible
for while Strawberry
private join in accessible
private join in accessible
lambda for more Strawberry
null
for while Strawberry
function print table was
for while Strawberry
lambda for more Strawberry
function print table was
only register Banana
null
only register Banana
only register Banana
null
null
null
null
null
null
null
null
null
null
null
null
null
function
more in
data Over table Apple
function data while while
Apple
null
null
data Over table Apple
more in
null
if Strawberry
null
if Strawberry
more in
if Strawberry
more in
register
for
if Strawberry
if Strawberry
for
class Banana
more in
more in
more in
class function
more in
null
out somehow accessible register
null
null
null
null
null
Orange Game table in
Orange Game table in
Orange Game table in
Apple for
Orange Game table in
null
null
for
null
for
struct join
struct join
struct join
for
Over Game Orange
Over Game Orange
null
null
super
super
null
null
while One function public
print function Banana
null
null
print function Banana
struct Game class class
struct Game class class
Game
Game
null
in was
null
null
null
null
null
null
class accessible my lambda
class accessible my lambda
null
class accessible my lambda
table super private accessible
class accessible my lambda
null
null
null
null
join Game
null
null
null
null
join
join
out Over print out
out Over print out
null
null
null
null
null
null
data
data
in
somehow super function
somehow super function
null
null
null
null
null
public Banana only
null
null
was more table only
Game public only lambda
null
was Banana
was Banana
was Banana
was Banana
was Banana
was Banana
null
only
only
public One
null
null
Orange Over
struct Strawberry
null
null
null
lambda private print
Orange Orange
Orange Orange
lambda private print
lambda private print
Game Orange somehow for
function for Apple Game
Game Orange somehow for
null
Game Orange somehow for
function Apple Banana table
data public Orange
function Apple Banana table
function Apple Banana table
public print in my
function Apple Banana table
table
function Apple Banana table
null
only while data class
out if was super
public
if Strawberry table
public
Over
Game Over
table
lambda only
null
table
accessible lambda
was Apple
Strawberry data my
Strawberry data my
null
only
private super Apple super
register public in
private super Apple super
Banana function
for struct
null
for struct
null
only
only out data
join public
for struct
only out data
only out data
in if register table
join
null
Game
Game Banana lambda function
register public in
only out data
join
Game Banana lambda function
register public in
register public in
in if register table
for class somehow
Over Strawberry super if
Game accessible join print
register public in
join
for class somehow
join more struct more
Game accessible join print
null
in join struct while
Over Strawberry super if
more register
null
null
null
for somehow while
null
null
null
Game accessible join print
for somehow while
only data struct
only data struct
null
Orange while
join Game
join join
table function was
Banana Banana only
join join
join Game
accessible lambda my function
join
accessible lambda my function
null
join Game
null
null
print One in
join Game
table function was
lambda Apple private was
print Banana Orange
out
Banana Banana only
class class private in
Banana Banana only
in
table function was
function Game
null
out
null
class class private in
super more only
in
my
in
was private join
function Game
Banana
in
register was
null
was One One for
class class private in
in
was One One for
register was
class class private in
null
private lambda print
null
was One One for
somehow super public join
null
somehow super public join
Banana out
table Game if
in
One
Game Over more
Game Over more
register
null
null
null
One public class
One public class
null
null
null
null
null
null
null
null
null
null
if
accessible print Game while
class register data table
print Over
print
struct One was function
print
super super
out Apple Game
more while
out Apple Game
null
register lambda only private
print
register lambda only private
lambda Apple while
function only Over join
null
super super
null
join
join
more while
class register
lambda Strawberry
function Strawberry function private
Banana table
super was print print
null
Banana lambda
super was print print
null
if
private data Apple
null
accessible table
accessible table
join data
accessible table
print function
join data
join data
data
Strawberry
Over function print
accessible Game super
join data
Strawberry
Orange One
null
Game public
accessible Game super
Orange One
Strawberry
null
Strawberry
Orange One
null
null
join data
lambda Apple
lambda Apple
Strawberry
Strawberry
Orange
Game public
Orange
Strawberry
lambda table out was
null
Strawberry
if table
null
Strawberry only accessible
class Orange super was
data lambda struct for
null
accessible
Strawberry only accessible
accessible struct data
class Orange super was
class Orange super was
data only
null
null
data super my
more class super
data super my
data only
null
Apple while if
data only
data only
private super Game
null
class Orange super was
in register
in register
Apple while if
One function accessible
struct somehow struct
my super Game
more Over for
null
my super Game
null
private
private
private
private
null
null
null
null
null
struct
if
class
was out
function while Game
null
lambda
Orange Game class
was
only
only
Orange Game class
null
struct
Orange Game class
was
function while Game
table out data join
table out data join
null
for was was
Over print Orange
null
only print
null
join while print accessible
join while print accessible
join while print accessible
data
join while print accessible
join while print accessible
null
null
Banana Over public table
while if
Banana Over public table
Banana Over public table
more more Banana
print class table
null
Apple Orange public struct
Apple
Apple Orange public struct
Apple
null
print class table
print class table
print class table
Banana class table private
Banana class table private
print class table
Apple while
null
Apple while
One
class super
class super
class super
class super
null
null
Game Apple if
Game Apple if
null
join function
join function
join function
while Banana
join function
while Banana
while Banana
out function class private
Over if table
for lambda
for lambda
for lambda
for lambda
join table Apple
join table Apple
for if Apple accessible
null
One join Strawberry somehow
join table Apple
out register
was struct print private
join table Apple
null
null
One join Strawberry somehow
more
null
while table while out
my struct super
in super
in super
my struct super
null
while somehow print lambda
null
while somehow print lambda
One register Orange public
Apple One
Strawberry accessible
Strawberry accessible
Strawberry accessible
null
null
null
null
null
null
more Game function
more Game function
null
data Over
data Over
null
print
print
null
print
more print
more print
more print
private struct somehow private
null
class Banana print
private struct somehow private
null
Game if table
private struct somehow private
print
print
Game if table
Game if table
for private join
private struct somehow private
Game if table
One Over somehow
for table struct Orange
null
accessible
Game if table
accessible
null
Strawberry Game function One
data function table Strawberry
null
function register
Strawberry Game function One
lambda print was register
null
null
lambda print was register
Strawberry Game function One
data function table Strawberry
data function table Strawberry
null
was
data function table Strawberry
null
null
null
null
null
print Orange One my
null
Strawberry accessible was if
Apple One
null
Game One
null
Game One
Over for register
null
was only Strawberry
null
null
One
null
function function in
function function in
was class Strawberry
super
function function in
was struct join was
was struct join was
Game
join super if
null
while
null
while
null
while
null
null
null
null
Game if
null
null
null
null
null
null
null
null
null
null
One
One
One
null
null
public public struct private
public public struct private
null
was Strawberry out in
more private One accessible
null
lambda Apple struct
lambda Apple struct
null
accessible print in private
out
null
table lambda out print
null
table lambda out print
null
my print
null
table lambda out print
Banana Over class function
private One table
Banana Over class function
private One table
private One table
null
Over Over more register
Apple class while print
Apple class while print
Game if data my
while
null
while
while
Strawberry struct
while
while
Over Over more register
Over Over out class
null
Orange One somehow
null
Strawberry struct
Orange One somehow
somehow class
Banana for register
accessible was
private register
null
Orange One somehow
Strawberry table lambda Orange
class accessible only Apple
my
accessible was
null
my
Orange only
null
in
in
print super
Orange only
Banana Game
null
Banana Game
was
Orange only
was
Banana Game
register
null
null
more private Orange table
more private Orange table
null
register while
Apple Over super
Apple Over super
function for
print more
Strawberry
null
Strawberry
if register for
data
null
null
print One super
null
null
public register in
print One super
One Banana for
public register in
Game out join
Game out join
print was struct register
null
null
print struct Game in
null
public
while if
null
null
in
null
Over private more
only
Banana Orange join
null
my table accessible
null
null
null
struct if
struct if
lambda only out
lambda only out
Apple
table One Banana lambda
null
Orange class
One
One
null
null
null
null
null
null
null
null
null
null
function somehow was
public accessible
public accessible
public accessible
null
null
private join public
private join public
data public
data public
null
null
null
null
null
null
null
null
null
only my was
null
null
Strawberry accessible more
my super
null
my super
in lambda
null
Strawberry
in lambda
table Banana data
null
function
null
null
null
null
null
null
null
null
null
null
Banana table
somehow lambda
super if private
super class lambda
super class lambda
super class lambda
super class lambda
in lambda
in lambda
in lambda
in lambda
null
somehow register for
private
private
null
null
null
null
null
while public register
while public register
function print
null
function print
print
print
null
function print
data was
data was
print
somehow was
super function was register
super function was register
null
Apple
Apple
super my
null
super function was register
null
public more join
Strawberry
Strawberry
Orange function
null
if table lambda
super
more
null
Banana struct Apple
more
if
null
if my
join if Banana
null
join if Banana
was only lambda
was only lambda
null
private data
null
One
out public Game
struct
null
lambda
more data
lambda
lambda
more data
private while was
null
more print struct
One Orange
One Orange
null
Apple lambda
null
private while was
private table accessible
class
private while was
more print struct
class
more join data
Game
accessible lambda Strawberry only
more data
null
function super accessible while
print was
null
private Over
Apple super
more
Over
null
null
Apple super
accessible
accessible
null
Apple super
One private
more function was data
print was
class was lambda more
null
more print struct
print Apple
struct Game accessible
more print struct
accessible
more print struct
accessible
null
table more
super my
super join only Over
class was lambda more
table more
class was lambda more
null
lambda
table more
null
lambda
somehow Banana Game
lambda
null
null
Game
more
more
null
Banana Strawberry class lambda
null
out super print One
null
register while
Banana table if
super my
null
super join only Over
register Orange my only
null
null
Apple public for if
struct Game lambda
register Orange my only
more
struct table in
null
Banana Strawberry class lambda
null
Banana table if
null
more print struct
null
table table only
null
null
null
register while
for
only
null
print Game while Banana
while
lambda data
print
Banana register for out
Banana table if
only
only
data in public while
print
null
null
null
accessible
null
only super private only
Banana more
join Strawberry
join Strawberry
register out Orange
null
register function
null
Banana more
super struct my
private
register Orange my only
null
register Apple register
register Apple register
null
null
null
function
accessible somehow One data
register function
accessible somehow One data
register Apple register
register function
Banana
Over lambda public class
more print struct
register function
register Apple register
null
null
Apple was while was
null
Apple was while was
Strawberry join
register Orange my only
Strawberry in
null
Over
Apple in
Strawberry join
register Orange my only
somehow private Strawberry table
null
Over data in Orange
null
register Orange my only
null
Strawberry somehow super
Strawberry out data
register Apple register
while lambda
struct for
Apple in
null
null
Over data in Orange
null
Over data in Orange
out One my public
Strawberry somehow super
null
register Orange my only
Orange class super in
struct for
if in
null
struct for
Apple was while was
null
somehow accessible class
Over lambda public class
null
somehow accessible class
more
public register if only
public register if only
Orange somehow
struct public print private
public
class struct
more
null
public register if only
Game private
table was
table
public
Apple for function Strawberry
public register if only
function somehow was public
table was
table was
table was
public
somehow data if
public
public register if only
Apple register
accessible
public
null
null
function somehow was public
Game
struct
Orange
Game
if join super register
somehow Banana for
if join super register
Banana somehow struct Strawberry
null
lambda class Strawberry Orange
public
data super Apple data
accessible Strawberry
somehow public in while
One
public
One
null
more Apple table table
class
null
Apple Banana
more Apple table table
null
print only Over only
accessible Banana One
Apple Banana
Strawberry Banana
data
Apple Banana
somehow function
print my Game
private Strawberry Over
super Game
Apple Banana
data
private Strawberry Over
private Strawberry Over
null
Strawberry Banana
table join Over somehow
join Over Banana
accessible
super
accessible
more join only
Apple
only
join more
join more
private data class super
join more
join more
Apple
Apple
private data class super
private data class super
private data class super
null
null
struct data
null
struct data
join more
Apple
null
Apple
null
my more Apple
Banana
Apple
if
Banana
out register struct if
while while super
One Over print
One Over print
struct data
class class Apple only
One for super
while while super
null
One for super
null
One for super
null
if lambda in
out register struct if
class class Apple only
class class Apple only
data public
class class Apple only
table for lambda somehow
table for lambda somehow
out register struct if
out register struct if
Game more Orange class
class class Apple only
table table lambda
somehow only accessible
table table lambda
table for lambda somehow
Strawberry somehow out
Game more Orange class
null
null
table table lambda
table table lambda
table table lambda
table table lambda
print only in print
somehow only in
table table lambda
table table lambda
One
function join
function join
null
for only print if
class super Game
class super Game
join
Over accessible for Banana
Over accessible for Banana
class super Game
join
class super Game
Over accessible for Banana
Over class for
private
Over class for
Over class for
null
somehow while Orange
super for Over Strawberry
Apple
Orange Game join
null
null
my
Orange Game join
was join Apple
somehow if
null
if One
Orange function
was join Apple
if One
null
more Over Orange
null
more Over Orange
null
null
null
Strawberry
struct super
struct super
null
join class
Banana lambda out
my Game
join class
only
struct super
somehow Game accessible
my Game
somehow Game accessible
my Game
null
my Game
my Game
function
null
null
null
null
null
in somehow
in somehow
null
print was Banana more
print was Banana more
print was Banana more
print was Banana more
in somehow
in somehow
somehow register accessible super
more data
more data
null
out data
register my One
register my One
register my One
out super
One register class
One
null
class Orange Banana
null
One Apple One
One Apple One
data for
data for
null
null
null
null
null
null
null
Apple in function
Apple in function
data
null
struct
data
null
private Strawberry while
null
data
null
Banana out Banana
null
null
data
in
table class only public
table class only public
null
accessible print Strawberry super
null
join
data accessible
accessible print Strawberry super
null
data accessible
public class data
null
table class only public
was accessible only while
was accessible only while
null
data
table class only public
Strawberry
print
accessible print Strawberry super
data
data
more
only
for
Game
for
lambda function
lambda function
only
Game
was One lambda
only
only
only
was One lambda
null
was One lambda
print data
only
null
only
lambda function
null
Game
Game
join public
null
null
join public
Orange more table
null
null
struct join
struct while
null
Banana
Game print join in
struct join
null
struct while
data function
private Apple in while
print register
null
null
null
somehow
null
join
Banana
class Strawberry class data
Banana
struct join
null
null
private Apple in while
data function
table Game
null
null
table Game
out Banana table
data function
null
class out public Over
out Banana table
in Apple
class out public Over
while
while
for struct struct Banana
Apple Orange function Strawberry
table public Strawberry
for struct struct Banana
super out out somehow
for struct struct Banana
Apple Orange function Strawberry
class out public Over
null
null
only
public struct
accessible somehow
somehow lambda
for struct struct Banana
null
out class
null
out class
null
table public Strawberry
accessible public Over in
accessible public Over in
out accessible Over was
table
public struct
table public Strawberry
class
out Strawberry Orange
join struct out for
table public Strawberry
table public Strawberry
out Strawberry Orange
out Banana table
One accessible in Strawberry
struct table
Apple Banana
Orange somehow struct class
Apple Orange function Strawberry
Strawberry my was
struct table
struct table
accessible in Strawberry function
Orange somehow struct class
null
One in somehow One
One in somehow One
table
my my
null
was class for
One in somehow One
my my
if was function
was class for
in for
private
null
null
in for
super more function only
null
null
in for
null
register somehow
private
null
function accessible function
null
null
function accessible function
null
null
null
null
null
null
null
Game public in for
null
Game public in for
function somehow class
join Orange
null
Over lambda more in
null
null
null
if
in
null
public somehow in
public somehow in
null
public somehow in
super public join Banana
null
null
private Game
private Game
super public join Banana
super public join Banana
super my
super my
super my
super my
more
null
null
null
One accessible
in One
in One
One accessible
One accessible
null
null
null
null
accessible
function only
only struct struct
if join more Banana
only struct struct
null
if join more Banana
out
out
if join more Banana
out
if join more Banana
out
out
data Orange Apple
data Orange Apple
more Banana
more Banana
more Banana
null
null
out print table
null
join was accessible
null
somehow register accessible
Strawberry lambda in
null
function register
function register
null
null
null
super Game register
null
Orange for register
super Game register
null
super Game register
null
if
One Over more
Orange for register
table only lambda out
table only lambda out
if
table only lambda out
null
Strawberry my
table only lambda out
One Over more
table only lambda out
null
null
One Over more
private
null
Strawberry my
Strawberry my
only in for struct
struct out
if
if
Banana was for Apple
Banana was for Apple
Banana was for Apple
null
Apple in struct
join for
null
null
null
null
null
null
null
null
null
Game
null
join Strawberry accessible only
for
table in
table in
table in
join
null
null
null
lambda out
null
null
null
struct Orange
null
my somehow table Orange
super
private
while Orange function
lambda function One
null
null
null
null
Orange public for
Orange public for
in Apple
accessible
One my more
null
while super my
while super my
while super my
private Banana Banana
null
accessible
accessible
Game register register super
private Banana Banana
somehow if Strawberry
accessible
join accessible private for
out
was Orange public
out
was Orange public
was Orange public
null
my Banana super
function join
my Banana super
One super only data
null
function join
Orange Over register super
Orange Over register super
somehow was Strawberry
join more
somehow was Strawberry
join more
null
null
Game register only print
null
join more
join more
Game register only print
join more
accessible
accessible
accessible
join more
null
null
Orange
null
null
somehow private
Strawberry table out
null
Apple
null
super
null
null
somehow super if
somehow super if
null
data
data
somehow data One
null
One print
if struct class Orange
Game
null
somehow Strawberry Strawberry join
Game
null
null
null
Game Orange private
my
my
my
in One table
register public Over Strawberry
register public Over Strawberry
register public Over Strawberry
register public Over Strawberry
Orange register Banana
null
class
null
null
lambda
null
null
null
null
more register
more register
more register
null
null
null
null
null
null
null
null
null
null
register table print
register table print
null
register table print
register table print
register table print
register table print
public private
was join only my
public private
register table print
was join only my
null
was join only my
null
null
register function Game private
Game data class
my data
my data
only
null
null
null
null
null
null
data Apple private
data Apple private
null
null
data Apple private
data Apple private
null
null
Game lambda
public in private register
class Banana
null
public in private register
while accessible lambda
while accessible lambda
table
table
public in private register
Banana
Banana
null
somehow
print more
null
null
my
private while
private while
null
function accessible in
out
Strawberry somehow lambda Over
Game table
was Strawberry
was Strawberry
null
in class more
was Strawberry
null
if while
if while
Over table Apple
null
Over table Apple
struct struct while Over
null
struct struct while Over
Over table Apple
table out my
Over table Apple
print table Orange data
if data register in
null
print table Orange data
join Apple
join Apple
join Apple
null
Over public while
Over public while
in
print Strawberry more
null
Over public while
data public Strawberry private
null
Over public while
data public Strawberry private
data public Strawberry private
somehow
data public Strawberry private
was class my
Strawberry struct
was class my
Apple for
data public Strawberry private
null
Apple for
class
super for
null
Strawberry
class
was data Over print
was data Over print
print for Orange if
print for Orange if
table data join
null
null
print for Orange if
null
public Over
public Over
lambda accessible Strawberry Strawberry
lambda accessible Strawberry Strawberry
null
null
null
null
null
null
my only
null
null
null
null
null
null
null
null
null
null
null
null
join
null
Over
Over Game Banana One
null
join
null
Over Game Banana One
Over Game Banana One
null
Over Game Banana One
null
print somehow
null
more for table Game
more for table Game
data more Banana
Strawberry join
more print
more print
more
Apple One only
Apple One only
table print
table print
more
null
table print
null
Game somehow if was
null
for Game super in
public more out
Banana was Apple for
table only class
class
null
Over function
for Game super in
class
for Game super in
table only class
null
join in while print
public more out
class
private register my
Apple function
null
Strawberry
register data
Strawberry
null
null
table only class
null
null
while
while
register data
public Banana function
super accessible was
while
null
Over function
if private Apple register
Strawberry out my more
if
if
register data
Strawberry out my more
register data
Strawberry out my more
Over One lambda somehow
Over One lambda somehow
register data
if
Over function
if private Apple register
table One print super
was table
register data
Game print lambda
Game print lambda
null
while
Game print lambda
super
while
for table for data
null
somehow
Game print lambda
null
table One print super
register Orange Over register
for table for data
null
register Orange Over register
private Banana
null
private Banana
null
null
table One print super
Game print lambda
private Banana
null
in Orange join
null
null
null
Apple Banana
null
null
if for
if for
public public if
lambda join my Over
data Strawberry somehow
null
null
data accessible
One join lambda public
class Banana my
null
lambda lambda
more data
somehow
null
more data
if
null
Apple class
Apple class
Apple class
Apple class
null
Apple
while private public
lambda while
null
public Over private
more my accessible
if class
register Orange
function while
function while
if class
private only
join
join
null
null
register join private somehow
for accessible for my
null
public
function function was class
Game struct was
null
register private print
null
if print
public join
lambda somehow while while
data class my print
only was join
Banana Banana somehow public
accessible for Apple somehow
Banana Banana somehow public
null
null
somehow public
data class my print
only was join
print Strawberry class more
lambda
while
null
was
null
Game data for Apple
somehow public
null
print Strawberry class more
join only
null
only out struct somehow
my Banana out for
Game data for Apple
accessible
null
accessible join somehow
null
accessible
my Banana out for
accessible
more my
accessible
null
class while in
more my
null
super class more
super class more
super class more
super class more
class while in
class while in
null
my somehow
only
class while in
Over
Over
Over
null
null
Over
One out
One out
null
null
null
super
null
null
null
null
struct Strawberry print class
struct Strawberry print class
struct Strawberry print class
null
null
Game was my out
Game was my out
if One
Game was my out
null
null
null
Over
Over
table public
data somehow
for out while One
null
for out while One
accessible
out private Strawberry
for out while One
data somehow
out out in Apple
null
data somehow
out out in Apple
out out in Apple
null
print table more
table
data somehow
lambda for One Banana
while while while class
while while while class
null
lambda for One Banana
data somehow
table Apple somehow public
function print register super
null
Apple while while
class in
data in more Over
Strawberry
Strawberry
if One
data in more Over
Strawberry
data in more Over
only public super
in
if One
private my
private my
if One
null
private more table
only public super
if One
only public super
null
if One
private my
more out
in was accessible
private my
null
null
Over One
Over One
my print was
my print was
null
more
join more
join more
more
join more
more
join more
join more
register
accessible was
null
if
null
struct public Orange One
null
struct public Orange One
null
Banana somehow Apple Orange
Banana somehow Apple Orange
join
function Over out
function Over out
null
null
null
null
null
null
null
null
null
null
null
null
public
null
register register
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
super for function
private
private
null
was
was
was
null
accessible Game more join
table
Banana Over was
Banana
my Orange in more
Apple One
null
my Orange in more
table in private
table in private
null
data super only
was class while
data super only
Apple my
print somehow accessible Orange
print somehow accessible Orange
print
print
print
more function
null
null
print
null
more function
more function
function join Strawberry for
null
null
null
in
in
null
null
null
null
null
null
null
null
Game Orange
Game Orange
register Over my Orange
null
null
public Orange
public Orange
null
null
public Orange
null
null
null
null
null
null
class for
register more
register more
register more
register more
register more
null
was for my
public private
public private
null
struct
Banana out struct somehow
Banana somehow was
in
function for if somehow
class class Game
in
if
null
if
if
if
null
null
Over private only
null
Strawberry if lambda
null
class while while Banana
function Apple was somehow
Strawberry if lambda
function Apple was somehow
null
somehow my
Over somehow
somehow my
function my
function my
function my
null
struct
null
Over somehow
out Orange super
function my
if in only
One for table
null
One for table
struct
if in only
class struct data
struct
struct
null
if in only
if in only
function my
super only Apple
Over somehow
struct
if in only
if in only
accessible while public
null
struct
accessible while public
accessible while public
struct
struct
out
null
somehow
class Strawberry my
if print Strawberry
struct
for Orange Apple
Orange join
struct
while Banana
somehow
null
Orange join
null
null
null
null
Orange join
null
struct
class
only
Over
Over
only
class
Over
null
class
Over
class
print
Over
if somehow
null
Over
in Banana was data
while for One
null
print
somehow Over Orange
Over
print
more Over table private
somehow Over Orange
print
was public if
print
Over
null
out super
out super
null
out super
out super
null
null
null
null
null
null
null
null
null
super print
super print
super print
class Over private function
for super
super print
for super
for super
super print
was register out
null
in only
null
in only
in only
in only
in only
in only
in only
for join Over
for join Over
private One in accessible
in only
more register out
null
for join Over
null
null
for join Over
private One in accessible
private One in accessible
for join Over
for join Over
for join Over
private One in accessible
private One in accessible
null
null
Banana out if public
more register out
private One in accessible
private One in accessible
private One in accessible
in if register
Apple out
Apple out
null
Apple out
Apple out
Apple out
null
class somehow struct
null
somehow Orange Strawberry
null
null
null
null
join public was Strawberry
join public was Strawberry
join public was Strawberry
join public was Strawberry
null
null
null
Over Strawberry
Over Strawberry
only
if in Banana for
only
only
null
null
register was only
register was only
null
function print
function print
null
null
null
null
for struct
for struct
private while more
public if
null
null
data print
register join
Banana my
null
null
class Over lambda class
class Over lambda class
Banana my
only function if
in
Game register
was while Banana
Banana my
Game register
was while Banana
only only print One
somehow join Banana One
in join register only
private Apple Apple
null
One my
private was Banana out
lambda only
in
null
struct public
null
private Apple Apple
data
function Game
join while my for
private Apple Apple
struct if
null
null
struct if
while
table
private Apple Apple
table
data
Orange
while
private Apple Apple
null
Orange
data
struct public
null
null
null
null
class Apple data was
null
struct public
null
Orange
null
public
Strawberry print accessible Banana
null
null
data out
join out Over struct
accessible
class super data function
print struct class
null
Strawberry print accessible Banana
for One register my
null
null
null
null
One only struct function
Orange
One only struct function
null
One only struct function
null
Orange
Orange
for
print was Over table
public
private
null
public
struct while
null
One only struct function
Orange
null
my out public
Over if print super
join was while only
null
print was Over table
One only struct function
Orange
null
join was while only
struct while
class
Orange
Orange
null
Orange
class was Strawberry
Orange accessible
public
public
for One register my
print class join function
Orange super for
Orange
join Game class
join Game class
print public Strawberry Over
null
print struct
join Game class
in private
my
null
null
class my private
only
public
my
null
accessible private
struct accessible
Over if print super
data table
null
only
null
Over if print super
if my Game if
only was
Over if print super
Orange more join
print
null
join Game class
accessible while
accessible private
null
accessible while
Orange more join
accessible private
class
accessible private
accessible Strawberry Apple table
null
if my Game if
only was
register if
accessible Game public out
register Over Game struct
null
null
only my
accessible Game public out
null
table
null
null
null
null
for
null
register Over Game struct
data print
null
accessible while
accessible Strawberry Apple table
lambda was register Apple
null
table
table
lambda was register Apple
for
private table if Game
accessible Strawberry Apple table
out public somehow accessible
data print
only was
only was
accessible data
table
super somehow One
more table
Game
null
null
accessible data
null
Strawberry function
accessible
more table
null
accessible while
somehow
null
null
lambda was register Apple
null
join Strawberry
lambda my Over was
null
somehow
null
null
null
Banana data Banana Strawberry
accessible Orange more One
accessible Over out Strawberry
join Strawberry
Banana data Banana Strawberry
null
join Strawberry
my out Orange accessible
somehow
my out Orange accessible
join Strawberry
join Strawberry
null
my for struct
Strawberry class class
Strawberry class class
null
my out Orange accessible
null
accessible Orange more One
Strawberry class class
my out Orange accessible
function out register data
null
null
class Game out
class Game out
null
null
my while
my while
my while
null
null
null
out
out
register out Over One
out
out
function register register join
public in super public
null
null
Orange Strawberry
Orange Strawberry
Orange Strawberry
null
null
null
null
null
null
null
null
function public for Banana
only Game out
class
class
null
class
null
null
null
null
somehow for
Game lambda Over more
Game lambda Over more
Game lambda Over more
Game lambda Over more
null
struct accessible
null
struct
null
struct
null
Over One more function
Over One more function
struct
while class
struct
null
in
in
null
null
register more One
register more One
only Apple
null
more was for
my if
null
more was for
null
register more One
table Orange my
table Orange my
null
join function
join function
was struct public
join function
table Orange my
for
somehow accessible private Strawberry
table Orange my
table Orange my
null
null
null
null
null
null
Game
null
Strawberry Apple
lambda struct One Apple
lambda struct One Apple
lambda struct One Apple
null
class my in
class my in
print struct register
null
super out was function
my in
null
my in
if
null
join
join
null
null
null
class table
null
null
null
null
lambda Over Over lambda
only
only
only
null
Apple private lambda data
Apple private lambda data
null
join in
register while Over register
Apple
lambda while
null
for Game accessible if
register while Over register
if lambda
data while
in register table
lambda data
my was Apple
null
print
somehow register Strawberry
out One
lambda accessible
struct
in function data
lambda
lambda
null
null
null
null
One
One
One
One
null
null
null
Apple register register
null
One Over
One Over
Strawberry if
print private for
print private for
null
out in while super
null
Strawberry in
only
Orange struct was
lambda
if
only
class
table One somehow
only public
class for
only public
null
only public
only
somehow join
only public
only
null
somehow join
class
somehow join
null
null
class
null
null
data lambda Strawberry
One more print Strawberry
data lambda Strawberry
class
class Apple
null
null
while register
Game register print
super Orange only lambda
super Orange only lambda
Game register print
only One
Over function out class
class public
data lambda Strawberry
Over function out class
join public
class public
join public
only One
register class super
more
Strawberry Game
null
class
null
only One
data table register register
null
join register
null
data table register register
out accessible Apple
null
null
struct for out
lambda
only One
data table register register
Strawberry super
was Orange accessible One
null
lambda
register
lambda
Strawberry super
in out
data table register register
Strawberry Apple
lambda
more class
in out
class out private join
data
struct for out
private public super Over
data table register register
more somehow One
struct for out
Strawberry super
class out private join
more class
more
only join
public
print only table my
null
public
null
more
class out private join
null
more was my
print only table my
join accessible my
join class table Game
class out private join
out private super
print only table my
table Over print while
null
more was my
data
private
data
private
out private super
function while Over
join while
null
out private super
out private super
null
more somehow One
out private super
null
function
join while
null
more somehow One
join while
join while
more somehow One
more somehow One
more somehow One
null
in private more
out private super
null
null
private One
in private more
private One
private One
in private more
only private my
private One
somehow table join
null
in
somehow table join
null
lambda only only was
in
null
struct super my Orange
null
null
struct super my Orange
struct super my Orange
null
null
public only only for
null
struct super my Orange
Orange function Banana
One
One
register Orange Strawberry if
null
Over Strawberry Over out
class
null
null
null
was super One
Over
was super One
struct
if while for join
register function
register function
more Strawberry private while
more Strawberry private while
null
null
null
null
register Over
null
null
null
while in register somehow
more register
super private
super private
null
super private
Apple
Apple
Apple
null
null
null
super private
null
Apple
Apple
while lambda
lambda
class private Apple more
null
was out Banana register
class super
class super
null
only out One data
null
Game Banana Banana only
my class Orange
class super
null
null
only out One data
data register table
null
Orange while
if
Strawberry
function
Banana only Banana data
function super
somehow
null
join was
join lambda function
only out One data
function
Strawberry
while Banana One
if if
One
Strawberry
null
public
null
somehow
null
out
somehow table out
if only
public
null
function data Strawberry
null
somehow table out
Orange while
Banana class in
accessible super for more
if if
Banana only Banana data
accessible super for more
print function for
null
One
One
private if print somehow
while was Banana
somehow
public my
while was Banana
print print
print print
null
function
if if
somehow
only join more Banana
private if print somehow
Banana
Orange
null
somehow table out
somehow table out
if if
if
accessible
Orange
in register for more
public
accessible
null
Apple only data Banana
Apple only data Banana
One
null
somehow class
function struct
somehow
in
null
table function
null
in only
data in
my data only more
while lambda struct
null
function struct
Over accessible Strawberry
in register for more
null
function struct
somehow
in
function struct
One
null
print class Apple my
null
Over data
if
null
null
null
null
Over data
null
null
null
null
for public data
if
if
if
Game table table
null
in lambda
for data table while
for
Strawberry
struct
register
my
struct
was accessible public
somehow struct lambda
somehow struct lambda
null
accessible in
for
was accessible public
my
null
super table
super
super
struct
for
for public data
function
null
null
for
join Banana more lambda
public
null
Orange
table super
join Banana more lambda
Banana Apple Over Apple
data struct lambda somehow
public
null
null
null
struct struct Game out
function register
for public data
One Apple One
null
for Banana lambda One
for Banana lambda One
only
my struct register
join Banana more lambda
in
join Banana more lambda
struct register data Game
struct register data Game
only function
null
for public data
for public data
super
null
only
Banana class
null
struct struct Game out
struct struct Game out
null
null
null
while if join
Orange my
out super
class was
struct struct Game out
super Strawberry One Strawberry
struct struct Game out
null
null
print out Over
struct struct Game out
print out Over
struct struct Game out
null
print out Over
data
data
struct if was
null
struct if was
Banana join Over in
struct if was
out
while only
in
while only
super more only
super more only
struct struct Game out
print out Over
struct struct Game out
struct struct Game out
Game table Over
Game table Over
in super table if
null
struct struct Game out
struct struct Game out
out
in super table if
out
One
struct struct Game out
null
only Apple Banana was
struct struct Game out
if table
if table
null
null
if table
if table
if table
if table
data if public
null
null
data if public
null
class Game only
data if public
null
lambda struct super accessible
null
lambda struct super accessible
null
only data out
only data out
null
class Game only
my in
in
null
my in
Strawberry super lambda print
null
data Strawberry
null
class Game only
only
only
data Strawberry
class Game only
null
class Game only
data Strawberry
data Strawberry
data Strawberry
super only out print
data Strawberry
data Strawberry
only
function super data
lambda join Banana
lambda join Banana
null
if
public
public if Strawberry
data for super public
public
public if Strawberry
in join table
in join table
in join table
in join table
public if Strawberry
out Orange
Strawberry Strawberry private private
Strawberry Strawberry private private
data somehow class
null
lambda Orange join
lambda Orange join
while only if my
One Orange table
null
null
private was table
null
private was table
Over register my print
Over register my print
join register only
only
null
null
null
null
null
null
null
null
Strawberry super accessible
Strawberry super accessible
more
Strawberry super accessible
my One
only
only
null
null
null
null
function super super my
function super super my
function super super my
null
null
null
null
table super Strawberry Game
table
class public
register super
private
null
register super
register super
table lambda super class
null
Orange table
null
null
null
One
One
One
null
null
null
class
null
class
function
null
null
null
null
null
accessible
null
null
null
null
null
join public
join public
super function somehow print
super function somehow print
Orange if
super function somehow print
join public
null
join super function
null
Banana out super while
null
table table lambda private
table table lambda private
Over One Over
null
my
struct Apple Strawberry struct
private super
class register
class register
struct Apple Strawberry struct
struct Apple Strawberry struct
null
private super
null
struct Apple Strawberry struct
struct Apple Strawberry struct
Over print only class
Apple for
Game while data
print my in One
public Strawberry One my
Apple for
print my in One
join table lambda class
null
null
null
null
null
null
null
class in join
null
class in join
null
null
null
accessible was print
null
null
null
null
null
null
more only Apple
more only Apple
null
null
for for Banana struct
for for Banana struct
for for Banana struct
for for Banana struct
somehow class
somehow class
somehow class
null
null
null
null
data somehow
class for Game Strawberry
public Apple only more
public Apple only more
class
super Strawberry only Orange
Banana
Banana
in in
in in
null
null
while my while
null
while my while
while my while
null
while my while
Banana One while private
Banana One while private
Banana One while private
null
Banana One while private
null
class
class
null
Apple
null
Apple
null
Apple
Apple
Apple
null
Apple my join
null
data
null
data
null
struct print
while struct
class Strawberry
class Strawberry
while struct
while struct
Orange only was
null
Over
class my was only
while struct
class my was only
data lambda
data lambda
somehow One in
null
data lambda
more somehow somehow private
null
private Orange data
null
data lambda
super lambda
null
more
more
null
more
function function
null
accessible my
Strawberry Banana if
Strawberry Banana if
null
print
null
null
null
null
was function for accessible
Game super
was function for accessible
Game super
function Over somehow in
null
null
null
null
null
null
null
null
null
null
null
null
null
null
out
out
out
One Apple Apple
out
lambda Apple
lambda Apple
public print Game was
public print Game was
public print Game was
Over
public print Game was
data
null
null
Apple Banana
null
Apple Banana
Apple Banana
super accessible if Banana
struct Banana
struct Banana
struct Banana
Apple Banana
null
Apple Banana
Banana
data
Banana
Banana
data
Orange Over
Banana
join register
Apple join only out
somehow private while
null
somehow private while
null
null
only print
null
somehow private while
null
more out register was
somehow private while
Game
class if print
class
class
class if print
class
null
was Banana public
null
lambda table more accessible
Over
Over
class if print
if super
super
if super
Over
was Banana public
was Banana public
null
if super
class if print
lambda table more accessible
super
more lambda
print
only print
only print
only print
table super more Over
out join
table super more Over
only print
Over data join
null
null
null
out join
only print
null
only print
only print
null
class
out join
class
Over data join
my lambda
register while in
lambda data was
register while in
somehow only struct
class
null
function
null
lambda data was
Game struct join One
register while in
Banana struct
register public
lambda data was
Game struct join One
Apple data while
null
register while in
null
register public
Banana struct
null
Banana struct
Apple data while
null
accessible
if Over Over class
null
null
accessible
null
accessible
if Over Over class
null
somehow my
null
if Over Over class
null
if Over Over class
accessible
register One join while
register One join while
null
null
data Game while only
null
join print
join print
if join in
null
if join in
out public
accessible somehow Strawberry for
Banana register
accessible somehow Strawberry for
accessible somehow Strawberry for
null
print
Banana
accessible somehow Strawberry for
Banana out
null
null
more Apple
null
null
null
null
Game Banana
for Banana while only
my if
class
while public
class
class
out out Over data
out out Over data
out out Over data
out out Over data
null
lambda register
null
Strawberry data table
null
my more
my more
null
Strawberry data table
Over while Orange register
null
Strawberry data table
null
null
somehow Banana
somehow Banana
in table
null
data Orange join in
null
table for for for
was out Over Orange
was out Over Orange
class more somehow
null
only Strawberry register Strawberry
class struct
only Strawberry register Strawberry
join Strawberry Strawberry Apple
class more somehow
Game
class more somehow
null
print private
null
only Strawberry register Strawberry
null
class struct
Orange was
null
only join my
class struct
null
function only out
Apple my Apple somehow
Apple my Apple somehow
only Strawberry register Strawberry
null
was
class struct
data Over
Banana accessible private Apple
Apple my Apple somehow
null
data Over
only Strawberry register Strawberry
lambda
data Over
lambda
Banana accessible private Apple
function only out
data Over
lambda
Apple my Apple somehow
null
Banana accessible private Apple
somehow Game somehow
private
null
null
null
class class
register Strawberry
null
somehow Game somehow
private
Apple my Apple somehow
Apple Strawberry
in
only Apple accessible
only Apple accessible
print if public only
my public function function
in
my public function function
in
in
only private
null
Apple
accessible Orange print
only private
table
private
accessible Orange print
Orange
Apple
Apple
private
in
my public function function
null
my public function function
in
null
accessible Orange print
Orange
Orange
null
my public function function
Game struct
Orange
only Orange
Orange
super table
for print
table Over more lambda
class
null
data
data
null
null
only
more class
only
only
only
only
only
null
null
Banana One super only
null
out my One
in public register
Banana Game super in
if public private join
Banana Game super in
my join
in Game lambda
super my function join
super my function join
if public private join
public print somehow Orange
null
if public private join
null
null
only accessible lambda
struct only more Strawberry
table
if accessible
function
was
public print somehow Orange
if accessible
if accessible
only accessible lambda
One private class One
only accessible lambda
if accessible
function
was
class
class
function
only lambda
Orange accessible
only lambda
only lambda
only lambda
null
only lambda
only lambda
print private more
only lambda
was more
null
was more
Game private
while Game join
One
null
while Game join
while Game join
One
One
in
null
null
null
null
null
null
print
null
null
out
out in out
null
null
public
print One while accessible
print One while accessible
print One while accessible
lambda only my more
lambda only my more
lambda only my more
Over Banana
null
Banana
Banana
Banana
Banana
null
private
null
super was my
null
private
Game more Banana
Game more Banana
Game more Banana
more
null
more
somehow somehow
null
class Orange
null
null
null
my in
while Banana data
while Banana data
null
my in
my in
null
while Banana data
while Banana data
null
table
table
while Banana data
table
table for
table
table
my Strawberry public Strawberry
table
struct
table for
only join
only join
Over lambda
Over lambda
out
in if accessible accessible
in if accessible accessible
in if accessible accessible
in if accessible accessible
Over for for only
Over for for only
Over for for only
null
somehow
somehow
null
somehow
null
null
out struct Orange while
out struct Orange while
Strawberry Over
Over
Strawberry Over
Strawberry Over
Game
was lambda was
was lambda was
data
data
data
null
function register class somehow
null
only was One out
super
Game Game
data
Strawberry in my accessible
Game Game
super
more lambda
print my Over more
more lambda
null
in my Orange my
null
class
Strawberry lambda private
null
Strawberry in my accessible
Strawberry in my accessible
null
null
class
was
was
null
class
null
Orange Orange public
was
was
only struct Orange in
null
more lambda
was
null
more lambda
null
only struct Orange in
struct
function data was
function data was
table Over super
in my
null
more lambda
struct
null
my only
data register if Strawberry
struct
struct
was
Over Banana table was
for my table
was
was
register was Strawberry print
for register One
my only
accessible Banana
struct data
my only
Game function public
Game function public
data register if Strawberry
data register if Strawberry
register was Strawberry print
accessible Banana
was
data register if Strawberry
more lambda
struct
data register if Strawberry
private public
print only
print only
data register if Strawberry
null
accessible Banana
struct
private public
print only
register
private public
print only
null
for my table
print only
private public
only was
private public
null
null
for my table
if One my
private public
null
accessible Game
struct data
accessible Game
only was
print struct was
for my table
null
null
null
null
null
register
null
public Game while
Strawberry if Strawberry
private public
register was Strawberry print
Banana
null
struct data
register data
null
private public
null
null
Orange super lambda super
join in
print only
Orange super lambda super
null
lambda table
Banana
Orange super lambda super
Game
my super
my
lambda class
lambda
print only
null
Orange super lambda super
Game Strawberry
Game
private public
Game Strawberry
null
lambda table
print only
struct data
was Orange
Game Banana somehow
null
private lambda struct data
Orange super lambda super
print Over function table
null
class only
for Apple Game
null
while somehow struct only
private lambda struct data
null
null
null
register was Strawberry print
while Strawberry my
more One Strawberry
while Strawberry my
super class
Game Banana somehow
while somehow struct only
Strawberry
while
private more
while
Strawberry somehow
data struct
only while out Apple
private lambda struct data
super if One somehow
Game Banana somehow
table
Game Banana somehow
while while
while somehow struct only
null
print
null
null
print accessible somehow
accessible
more One Strawberry
public
only class One
while while
data struct
Game Banana somehow
Game out
only while out Apple
join somehow accessible lambda
null
null
print
Game Banana somehow
public
join accessible lambda struct
Apple Over
out Banana struct join
null
null
Strawberry
while register
Game Banana somehow
data Game struct
Over
null
null
null
null
null
join accessible lambda struct
Orange One table
while register
null
null
register Banana Banana private
null
print accessible somehow
null
class more
print
join accessible lambda struct
while register
Over somehow
while Strawberry if for
null
only class One
join function lambda Game
my struct
register Banana Banana private
function data
Strawberry private data print
null
Over
only class One
join somehow accessible lambda
for only accessible function
my struct
only class One
Apple if Over class
null
lambda
public data super class
join function lambda Game
null
while Strawberry if for
my struct
join accessible lambda struct
Strawberry private data print
data somehow
null
null
null
join Game out
Apple if Over class
accessible print in public
super Banana super Strawberry
function
join Strawberry private
struct Apple private
Apple
null
null
Apple
join Strawberry private
struct Apple private
null
Apple
super Banana super Strawberry
class more
for was while
class more
more public
Apple while accessible function
null
Orange super Orange more
public
more public
for table Over
while Strawberry if for
public
super in Strawberry table
Orange super Orange more
join Game out
class class
class public
class public
while Strawberry if for
null
more
while Strawberry if for
only only
null
while Strawberry if for
null
null
null
register register Game
join accessible lambda struct
out more in
null
private accessible print Apple
while Strawberry if for
class public
Apple
Apple while accessible function
null
Game more
struct print
null
private accessible print Apple
Apple while accessible function
for Apple
private accessible print Apple
null
null
join register
was table Apple
private accessible print Apple
in out
register
function was
null
if Banana Game
null
null
public
null
null
function was
struct print
null
struct
null
for Apple
join register
null
for Apple
print function
null
null
print function
Strawberry One while
Over table
null
Strawberry One while
table only more
lambda
Game out
was table Apple
public was Strawberry
Strawberry One while
Orange Orange
null
null
table only more
null
more Apple
struct public Over
null
Strawberry One while
function Over my super
table only more
function Over my super
table
for join
for join
public was Strawberry
null
table only more
if in
table only more
register
null
only Apple super
public was Strawberry
null
for join
for join
Game out
public
was
table private Over
while more for function
Apple for accessible while
accessible in accessible
in super
null
Apple for accessible while
accessible in accessible
null
null
Banana Over while
in super
Banana Over while
One function only Banana
Apple
my only accessible
null
Apple
if
null
more
null
Apple
my function public
struct super table
Orange for register Game
lambda super Over
while data
Banana
null
more
more
One only Apple Game
print if out Strawberry
was join only
null
Orange if somehow Strawberry
more One
Orange
lambda Game super out
while data
super
Orange if for
more out
null
One Orange
null
if somehow table data
Banana
function Game in
more while
if
null
null
Banana
function Game in
Orange if for
function data
Orange if somehow Strawberry
if somehow table data
register data print accessible
while
null
while data
out while struct
in was
null
function data
out while struct struct
One only Apple Game
if for
more Game function Game
function Game in
register data print accessible
while
public struct
One only Apple Game
function Game in
in function print Orange
null
somehow Banana while super
null
null
null
public was Strawberry
function Game in
Over private lambda Apple
while
function Game in
Orange if somehow Strawberry
public was Strawberry
Banana Over while
lambda accessible only
in function print Orange
table Orange Game
Over private lambda Apple
public struct
in public
in public
for
was while if class
for
was while if class
in public
Over private lambda Apple
accessible
print private
public super Strawberry super
somehow for data Apple
null
null
null
print
print
public struct
null
join
Over Game register in
Banana
Game only if
null
print
print private
Over Game register in
Apple in out register
join
in while lambda
Apple in out register
join join function Game
public struct
register Game
null
in while lambda
null
join
null
public struct
data table function
was class more
register private Banana
was class more
Apple struct somehow Game
for
only in join
out in out Strawberry
null
my Apple
was
Apple struct somehow Game
for
Apple register for
data One
data One
Banana Banana
lambda
Apple register for
only
Over my if function
null
null
One Orange
in register
null
null
join function for One
out in out Strawberry
Strawberry Game only
only in join
Strawberry
null
join function for One
null
function only my more
function only my more
join accessible public accessible
Strawberry
null
null
Apple register for
only
Strawberry while Orange
print
One Orange
was more class Apple
One Orange
null
only
super
null
Strawberry
null
only
function only my more
null
Strawberry Game only
null
function only my more
null
my out table
null
null
null
Strawberry
null
Strawberry
Over my if function
my out table
null
join accessible public accessible
in in
private more function out
only Orange function table
private more function out
join accessible public accessible
lambda in somehow
null
null
Strawberry more my Banana
null
null
null
class table One
only Orange function table
print super somehow Banana
join accessible public accessible
private more function out
class table One
Strawberry
was public
class table One
null
class lambda
One Banana
class table One
lambda in somehow
class lambda
was public
Strawberry
print super somehow Banana
lambda in somehow
null
accessible One
table somehow only
private print
data Strawberry join data
table somehow only
in lambda more One
in
null
somehow Game
table somehow only
null
null
was more Banana somehow
private print
public super public private
null
in lambda more One
my Apple
null
in table lambda lambda
accessible class public
private more function out
data out table
data out table
function
accessible class public
Over if
public was
public was
Over if
public was
One Banana
class register class
null
One Banana
in
data table
register super data Banana
class register class
Over if
out join
null
accessible class public
Over if
my in Game
out join
my in Game
my in Game
my in Game
null
register super data Banana
my Strawberry register somehow
null
public lambda
public
public
struct
join table somehow
class
join was only more
join table somehow
for for print
accessible more Strawberry
join table somehow
accessible private print Banana
Game while
somehow for public
only
somehow for public
somehow for public
class
my Banana
Apple
while Over
my Banana
null
my Banana
my Banana
One if join
null
if join for somehow
null
while if if
class
null
class in accessible
while if if
while if if
Banana only struct super
Banana only struct super
struct Apple public
null
null
null
print
print
null
function somehow my
function somehow my
more somehow Banana
private super Strawberry lambda
null
public Apple only struct
null
table data lambda function
null
for in
join Game my table
for in One
in
null
for in One
for in One
null
for in One
null
Over struct Strawberry public
Over struct Strawberry public
public Over for Strawberry
null
null
null
null
null
null
null
null
null
null
null
Over
register struct struct super
register struct struct super
my Game
null
null
more for
null
null
public was more Over
null
public was more Over
was out super Over
was out super Over
was out super Over
was out super Over
null
was out super Over
somehow
null
somehow
data public private function
if
super table only
data public private function
null
accessible lambda somehow somehow
null
accessible table data
null
null
Game Banana Strawberry
data in
out One
null
null
somehow if Orange more
somehow if Orange more
if
accessible lambda somehow somehow
somehow if Orange more
my super
somehow if Orange more
was
data in
table out my Banana
was
null
my if struct
somehow
if
null
if
print
null
somehow
null
private more Strawberry Over
somehow
null
null
private
print
somehow while
private
table
more Game
print
my if struct
was
table
Orange private register
private
was
was
null
print
null
was
table join Orange
null
print
null
more Game
null
lambda Banana super
Orange private register
accessible Over
Orange private register
Over
Over
in was for lambda
print
null
Orange private register
table join Orange
table join Orange
Orange private register
public struct
null
table join Orange
for register table
Orange private register
One Apple
Orange private register
null
Orange private register
null
for register table
for register table
null
null
super public
One Apple
register super in
register super in
null
null
null
null
lambda table was
lambda table was
for class public
lambda table was
for class public
Over Over for Over
Over Over for Over
table One
my
table function in print
struct Orange Orange
null
while super
while super
for
for
while super
while super
more out
null
null
public
for
only only
function join
function join
my struct Strawberry
my struct Strawberry
was
was
function join
Game
function join
out
somehow data somehow
One Banana Game
function join
function accessible class for
null
null
null
null
null
while in One
while in One
null
null
null
Over my Banana
was only data public
null
somehow
null
null
null
out super my somehow
out super my somehow
join
Banana register super
Banana register super
join
Apple
join
join
data my only
null
null
null
in only
null
while was Over Orange
private table lambda table
null
null
null
null
null
while table
while table
while table
null
Over was
Over Strawberry Apple
Over Strawberry Apple
Over Apple
Over Apple
null
null
null
my if
null
only somehow was
null
null
null
null
only Over Strawberry
print
null
print
in join private function
only in
null
accessible Apple if class
only if
null
One Apple Strawberry
only in
only in
null
null
print in
struct my private only
struct my private only
null
Orange register
Orange register
data while
data while
null
null
null
for Orange Apple
super my while
super my while
null
null
function data
Apple accessible
accessible in
null
null
join print Game my
data
register Orange if
null
if Banana print
somehow
Banana print
Banana print
null
null
Game One Apple
Game One Apple
null
Game was somehow Strawberry
Game was somehow Strawberry
Game was somehow Strawberry
Game was somehow Strawberry
class join accessible my
null
null
somehow if
private One
lambda Apple
somehow if
lambda Apple
class
class
lambda Apple
null
in public function for
null
was out
private somehow Orange
private somehow Orange
null
null
null
struct
more while
print data
more while
null
print data
for Strawberry
print data
null
Apple class
Apple class
only more join
print private Over only
Apple class
only more join
One Banana function private
Over super
null
Strawberry join Strawberry
register somehow register
null
struct accessible super struct
null
struct accessible super struct
null
somehow out
somehow
struct
somehow out
class Over only
Strawberry Game table print
class Over only
Strawberry Game table print
null
Strawberry Game table print
Strawberry Game table print
null
Strawberry Game table print
Strawberry Game table print
null
class
register data data join
null
print Apple One for
Strawberry Game table print
Strawberry Game table print
was
Over Game
Strawberry Game table print
null
Strawberry Game table print
One private
One private
Over Game
print Apple register
struct out while
null
class if
function table in public
null
null
null
null
out function super
null
accessible super
in accessible
in accessible
null
in accessible
in accessible
null
accessible super
while Over
accessible super
accessible super
struct if join
null
null
out public lambda Over
out public lambda Over
out public lambda Over
out public lambda Over
out public lambda Over
null
struct register
join Orange
Banana super more One
Orange struct
class if
for data
for
somehow Apple
somehow Apple
while
lambda only only in
was
lambda only only in
Apple Banana function private
null
accessible register Game Game
lambda only only in
while
null
data public
lambda only only in
null
while
lambda only only in
was
while
while
accessible for private somehow
out
struct print Banana
was only more
struct print Banana
public more
struct print Banana
Banana private lambda register
was only more
for
accessible for private somehow
null
null
for
Banana private lambda register
accessible for private somehow
for
struct class One
null
lambda private public
accessible table public Strawberry
lambda private public
super register
join
null
null
null
table
null
was Orange out was
was
struct class One
out in data while
out in data while
lambda table Orange Banana
struct class One
print somehow data for
lambda table Orange Banana
One class while
null
Game Apple
null
Over One struct
Game Apple
struct
One class while
Apple
Game Apple
was table accessible
null
was public
was public
table more
was table accessible
register public join
print
null
in Game accessible print
private lambda
was if for
while only accessible
null
only data if
my for my
lambda Banana super
was if for
while only accessible
while only accessible
was if for
only data if
while
lambda Banana super
while
public
while only accessible
while only accessible
print private lambda was
while only accessible
print private lambda was
more Strawberry
private if
more Strawberry
print private lambda was
null
print
print
null
print
Apple
Apple
null
while in only
Strawberry print print
Apple
Apple
Apple
Apple lambda join
accessible
Strawberry
Over while
Banana public if private
Banana
Apple
register out
Banana public if private
Banana
Over only
only only class
only only class
null
accessible Orange join
accessible Orange join
out somehow Game Game
Banana
null
for
null
Orange
if for
if for
null
Apple Apple One
null
null
null
public One lambda
out somehow Game Game
in accessible while
register
register
null
One out
register
One out
accessible Banana
Orange
null
null
Orange
Orange data
my table Strawberry data
Orange data
Orange data
One out
null
table private
table private
null
One out
null
my table Strawberry data
register register table out
null
my table Strawberry data
null
null
function Strawberry lambda struct
function Strawberry lambda struct
function Strawberry lambda struct
function Strawberry lambda struct
class
null
while in
null
null
while somehow
while in
public if
register lambda
null
Apple
Apple
Apple
Apple
null
null
in Banana
in Banana
table was struct class
table was struct class
was accessible
table was struct class
One table
for
for
class was while
class was while
Banana
Banana
null
null
print
null
for
super in more
null
Over if Banana
Banana public
print
was for
register class struct One
Orange Orange join if
function data
Over if Banana
print
Banana
Over if Banana
Banana
in table
while
print while One
null
print
function data
in table
function data
somehow my if somehow
while
Game
null
super table private
only print
if
null
if
if
if
null
null
Game in print Game
null
null
null
null
public
public
null
table join somehow register
table join somehow register
table join somehow register
null
null
function more One
function more One
struct accessible
accessible somehow print
null
table somehow
accessible somehow print
null
null
Strawberry public print
Strawberry public print
null
null
null
accessible function was for
my struct accessible public
my struct accessible public
null
null
print join
null
Orange Banana
Orange Banana
Orange Banana
Orange Banana
null
Orange Banana
register struct somehow if
null
null
null
my
print join out
null
One
more print register
more print register
null
more print register
Game
Game somehow
Strawberry data
null
for in join
Game One public table
null
Game
for in join
for in join
Game somehow
Game somehow
in in Strawberry
private more
for in join
lambda
join table lambda
while
Game
while
Game
null
in in Strawberry
private private
while
private private
private private
private private
null
Game
null
private more
more my One my
Game
lambda
more my One my
out One class Apple
in Orange accessible public
out One class Apple
class while Game function
null
null
null
null
null
null
null
null
null
null
null
accessible Banana super
null
accessible Banana super
One my print somehow
null
null
null
data only
data only
data only
null
data only
register
register
register
class my function
class my function
Banana private
null
null
null
One
null
One
null
out
was only
Strawberry print Orange public
for
null
was only
only was Banana
only was Banana
was only
was only
table
null
null
somehow
Over for lambda function
Orange table
Orange table
out somehow
Orange table
Orange table
null
accessible Orange lambda
in
null
my lambda join
null
null
null
private class data
private class data
null
class private
was struct
Over
Over
Over
null
lambda register only
lambda register only
struct print somehow struct
lambda register only
somehow my
join
private accessible table Orange
somehow my
private accessible table Orange
null
null
print
null
lambda Apple for only
my
lambda Apple for only
out while was public
out while was public
lambda Apple for only
out while was public
my
null
print
Banana class public join
print
super Strawberry
lambda Game class
function
lambda Game class
Orange public only
Orange public only
somehow One
Orange public only
more Apple public Apple
Orange public only
lambda Game class
struct if Game join
Orange public only
Orange public only
Orange public only
null
Over more only
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
print in while Apple
print in while Apple
print in while Apple
null
while somehow
null
null
null
accessible my if public
accessible my if public
null
only function struct Strawberry
null
table in
null
null
null
private while register Strawberry
null
private class public
only more was join
function Banana Game
accessible
private while
join register print
null
print while
null
Orange print private Orange
Orange print private Orange
Orange print private Orange
Orange print private Orange
null
null
null
only table
null
Strawberry private
only table
struct print lambda
was Strawberry
only table
null
null
was Strawberry
Apple print out more
Apple print out more
null
null
null
null
somehow only struct public
null
Orange
null
null
more public
null
more public
while Orange
lambda Over
null
my private if Strawberry
null
null
join data was if
null
public
join data was if
join data was if
public
null
private
join data was if
public
public
register class
private
private my join public
private my join public
null
public Game Banana
One Game Orange
join
null
more while public
null
if Apple Strawberry my
null
null
null
null
Game Orange while
out register Banana
out register Banana
out register Banana
only Apple was
Orange join One
Strawberry out
register accessible super
Strawberry out
register accessible super
Strawberry out
register accessible super
my
Strawberry out
lambda Apple join in
null
null
Apple only super out
lambda Apple join in
register join if
Strawberry
null
Orange somehow
register register table
null
null
Strawberry
Apple only super out
if Orange
if Orange
Apple my
Apple my
Game
lambda Apple join in
table Banana Apple Apple
register print super
null
Apple my
null
register register table
function register lambda
null
null
Apple was
Over for
function only in
private more
super private in
null
Strawberry table function
while struct for
function only in
null
class Apple
Strawberry table function
null
Over for
null
Strawberry table function
null
null
struct Apple somehow
function
if for only super
null
struct Apple somehow
join Banana class
join Banana class
null
class while Banana
null
for function only Game
my private
table
my private
private class
for function only Game
null
was
class for data
null
table
data
my private
out more if
Over accessible
out more if
private
null
null
Game for Apple more
null
Strawberry only print Strawberry
Strawberry only print Strawberry
Game for Apple more
out data Orange One
register print
in Orange Strawberry
table
table
table
One accessible super super
Game private my join
Game for Apple more
One accessible super super
more join while private
Game for Apple more
in print
lambda
Game if print was
in class
null
Game if print was
Game if print was
Game for Apple more
Strawberry if
register while private
Strawberry Game
more join while private
more join while private
data super if
data super if
Strawberry Game
Strawberry Game
data super if
null
data super if
null
Banana function for public
null
null
null
if table
null
null
my super Strawberry
more join while private
print class
my super Strawberry
null
print class
my super Strawberry
somehow struct
somehow struct
more join while private
for register only was
somehow struct
somehow
more join while private
public data join for
more join while private
for
for
Orange join super print
Apple class Over One
somehow struct
Orange join super print
Strawberry Game somehow
Strawberry Game somehow
null
Strawberry Game somehow
out for more
was join class while
Apple class Over One
null
Orange join super print
Strawberry Game somehow
null
out for more
for register only was
Strawberry Game somehow
for register only was
out for more
null
while only
my table
my somehow
for function
super join in
public for data class
print Banana Over my
Game super out function
my table
public for data class
my table
null
was function One
Game super out function
One class
for register only was
my table
null
my table
my One while Banana
was function One
Banana
Strawberry register
my table
class
class
class
public for data class
class
for function
null
null
null
register
more somehow for
was function One
class
null
null
for accessible out lambda
join print if
register Banana
was lambda
Apple
Banana lambda Apple
Orange somehow Strawberry
out join Orange
class
Banana lambda Apple
null
was function One
was function One
my
my somehow
was lambda
join print if
join
null
somehow in lambda
null
null
join print if
my
null
register super
Orange somehow Strawberry
lambda
lambda Strawberry struct function
Orange somehow Strawberry
Orange somehow Strawberry
out
function out data class
lambda Strawberry struct function
class more print for
null
my
class more print for
null
function out data class
out
only Apple public for
null
public
only Apple public for
null
join print if
function out data class
function function
function out data class
table more if more
more print print
my somehow
table more if more
join Strawberry
in private Apple super
null
only Apple public for
in private Apple super
was
lambda
lambda
Over Apple
null
while lambda somehow print
in only somehow print
Strawberry Game only
in lambda function
register was
Strawberry Game only
null
in only somehow print
Apple
register was
accessible my Banana
table struct lambda class
class
in if
in if
class
table struct lambda class
null
Orange for Game
accessible my Banana
in if
my Banana
null
table struct lambda class
null
null
accessible my in
somehow
null
accessible my in
null
in if
more Banana class
register Banana
more Banana class
lambda function super
register Banana
my
register Banana
table Strawberry private
more Banana class
in if
table Strawberry private
in if
Orange for Game
null
struct accessible
table
my
table Strawberry private
data join for
my
if
data join for
null
null
table One
accessible my in
somehow somehow if
accessible my in
table Strawberry private
null
table Strawberry private
null
Strawberry Over
Apple public
private class
table class
private class
data
private class
was
null
join
more Apple
public table
Orange out in out
data Banana
Orange out in out
null
was Strawberry
Orange
public
in Game table One
Orange
One only for
lambda table private only
Banana struct more in
class
Orange was Apple
my in Banana print
Orange was Apple
super
Orange was Apple
table Strawberry private
public
lambda table private only
Strawberry
Strawberry
Game
null
null
Strawberry
lambda table private only
null
public
lambda table private only
public my function register
null
data register Apple
Orange register for for
null
public my function register
only more Strawberry private
my in
my in
only more Strawberry private
Strawberry Game was if
public my function register
super out
null
data register Apple
Strawberry Game was if
Orange register for for
null
super out
public Over Banana was
super out
null
Orange out super
public my function register
super Over Over
super in
super in
null
private data
super Over Over
in Banana
Orange register for for
null
private print Game
super Over Over
private Banana class
class
class
null
accessible was for Over
null
accessible was for Over
null
null
accessible was for Over
null
class
Strawberry join Strawberry
out was Strawberry for
class
out was Strawberry for
if super
if super
while
null
only somehow if only
my
null
Strawberry lambda Game only
was public
was public
my
Banana out
null
function Strawberry super if
null
only only
null
more private class One
function Strawberry super if
super
if function join super
null
only only
Banana
only only
super
data Strawberry
only only
data Strawberry
super
class function
data Banana struct table
class function
Over
somehow
class function
Over Game Apple somehow
null
null
null
null
null
null
null
in Orange for my
in Orange for my
in Orange for my
in Orange for my
in Orange for my
public
out while
null
null
null
if public class
null
while out
null
table Strawberry Banana
somehow my One
for
null
Game Orange One
table Strawberry Banana
if class
Game Orange One
Game Orange One
One out function
null
function public lambda function
Strawberry function
Strawberry function
Banana super lambda
function super public in
Strawberry function
Banana for Game was
Banana for Game was
data
Strawberry function
only Apple super One
Banana for Game was
null
Strawberry function
my Orange
null
null
null
null
my Orange
lambda
Orange private
my Orange
data
my Orange
my for
struct
my for
null
null
for only
struct
null
null
lambda
lambda
One
lambda
lambda
while
One
if function
if function
if function
if function
Banana out
null
was struct
Orange lambda
was struct
while only Strawberry
null
Orange lambda
Banana Banana One
while only Strawberry
null
class
register somehow Orange
while only Strawberry
class
Over join function my
while only Strawberry
Banana
Over join function my
while only Strawberry
while only Strawberry
Orange lambda
Banana
private join Banana super
Orange lambda
print Orange private for
more if for if
more if for if
null
more if for if
more if for if
null
print
Apple register private join
Apple register private join
Apple register private join
accessible while accessible
null
public One
public One
accessible accessible more One
accessible accessible more One
null
accessible accessible more One
Apple Banana
null
null
accessible accessible more One
Apple Banana
super my print
Apple Banana
my while One
register somehow more public
null
super my print
register somehow more public
register somehow more public
register somehow more public
out public my
null
my if register
somehow register
Apple
somehow register
struct join Game
null
accessible public Over Game
in my
struct
out Banana while print
accessible public Over Game
out struct somehow
more Game register
null
function
super
function
null
function
if class in
null
out Banana while print
function
my if register
null
function
my if register
out Banana while print
super
more super my while
my public
null
Strawberry struct more private
register
register
register print join
register print join
null
my if register
Game was
struct public
struct public
register print join
Game
only struct
register print join
table register public only
struct public
my Orange for accessible
table register public only
Game was
more Banana table
null
more Banana table
print lambda table Banana
table register public only
null
table register public only
table register public only
data my
data my
null
lambda
Strawberry Strawberry
lambda
null
out print
lambda
out print
out print
lambda
lambda
out print
lambda
lambda in
lambda in
register Apple super
table Strawberry print
Orange public more
null
Apple
null
null
Apple
my Orange while out
lambda table Orange print
lambda table Orange print
null
null
null
null
somehow
somehow
somehow
somehow
null
somehow
lambda Banana only
lambda Banana only
lambda Banana only
null
null
null
null
class for while
null
class for while
more somehow out public
lambda only table
print Banana Game if
One lambda my more
super
One
if
if
Over was Banana
in One was
in One was
print Game somehow
null
Over
join
join
join
One register
One register
null
null
more
more
more
more
null
more
more
more
null
null
while
while
while
Orange
Orange
Orange
null
while Game print lambda
more
somehow join
null
while Game print lambda
while Game print lambda
register
register
null
register
struct
private One
struct
private One
join table
function One
function One
Over my
null
while only
function One
table my
more
more
null
null
null
null
join table
more
Strawberry print register
table my
Apple out
Banana Strawberry private
my register table
private
Strawberry print register
null
while only
Banana Strawberry private
null
my register table
Banana Strawberry private
my register table
null
Apple out
while only
null
null
Strawberry print register
null
for Over
function function Apple
somehow
null
in
null
in
in my
in my
somehow
in my
Banana was
somehow
Banana Strawberry private
null
super function
null
super function
private register
null
my register table
my register table
Orange class data
null
null
super function
super function
null
function while register was
Banana Strawberry private
print One Strawberry
null
Orange class data
print One Strawberry
class Game for
join super Orange
null
private register
print One Strawberry
function
class Game for
class Game for
print One Strawberry
public
function
null
public
more Banana
out
more Banana
register accessible
function
register accessible
register accessible
null
table Strawberry for
table Strawberry for
function
public
more Banana
null
null
null
print
function
null
table if lambda public
print
for public Strawberry
public class
public class
Over Banana
print data
null
null
null
function
Over Banana
One Orange somehow
Over Banana
null
Over Apple register
function
print
Over Banana
accessible my accessible join
Over Apple register
null
Over Banana
Over Banana
null
null
print was Game
print data
print data
was struct struct
was struct struct
null
null
for One struct
null
was struct struct
was Apple Strawberry Banana
null
null
private function
null
null
null
more join public somehow
more join public somehow
register
register
null
null
my Banana
data if
data if
data if
accessible more
data if
null
null
was
out
null
out
null
null
null
Banana out table
Banana out table
Strawberry class while function
Banana out table
out print table function
Banana out table
struct public One public
null
null
struct
struct
in
in
in
accessible public Over register
accessible public Over register
accessible public Over register
null
accessible public Over register
Game register my in
struct
Game register my in
only Orange
Game register my in
only Orange
null
Game register my in
only Orange
Apple for
Apple for
Apple for
Apple for
Apple for
my Orange
super lambda
Orange
Orange
super lambda
struct Strawberry Orange Game
my Orange
my while somehow Apple
super lambda
null
my while somehow Apple
my while somehow Apple
struct Strawberry Orange Game
class
null
while print somehow
while print somehow
my while somehow Apple
Apple
private my
function
my while somehow Apple
null
null
my while somehow Apple
class
class
class
null
null
Apple
null
Apple
table in
only public public my
only public public my
was for
class
null
was for
was One
was One
was One
null
Game super somehow
was One
only public public my
was for
data Banana
data Banana
null
function
register
was One
was for
was One
was One
null
null
null
null
null
null
null
null
super Orange only out
null
null
public out struct accessible
struct class Game
public out struct accessible
while table function super
while table function super
join Apple super
null
while table function super
while table function super
accessible
null
only join join my
null
null
accessible
for
only join join my
only join join my
only join join my
super public One super
super public One super
null
accessible
accessible
was only
super Game register Apple
if if only print
super Game register Apple
One in Strawberry
null
table Game
null
table Game
accessible
table Game
accessible
Over lambda table Orange
accessible somehow my
accessible somehow my
table
only function Orange
One
null
null
super only
super only
One
public accessible
print private function more
while only table
function was while private
in register
class function was function
in register
in register
in register
accessible Strawberry Game
function was while private
null
Apple Apple One for
null
in register
class Banana
more for public Over
more for public Over
function was while private
in out
Apple Apple One for
null
Apple Apple One for
in out
data class only only
function was while private
somehow public only
somehow public only
more for Apple while
class
out function
class
class
null
somehow function out
more for Apple while
table Orange
null
table Orange
somehow function out
table table Strawberry Over
Banana struct print lambda
table print print
Banana struct print lambda
Banana struct print lambda
null
Banana struct print lambda
table table Strawberry Over
null
Over while Over register
register Banana print join
print Over
Apple public register public
Orange Orange
null
register only for
public my only
Orange Orange
null
null
data Strawberry
Banana was Apple
private
null
null
Apple public register public
null
function somehow One struct
in
Over while Over register
out out function for
null
register Banana print join
more in only
in
out was print
for
more in only
out
was
was
Orange Apple if
null
out super
Orange
somehow table print
null
was
null
out super
out out function for
public data
Apple public register public
only table Strawberry register
for
if super out print
null
Game
public lambda
null
class while struct function
if super out print
null
Game was register
somehow table print
out super
null
class public
null
Apple lambda
private only Over Strawberry
null
for only in
public lambda
null
if super out print
if super out print
if super out print
Over lambda print
public data
lambda accessible struct public
was
Game more my
struct for in data
while only Banana register
lambda accessible struct public
public lambda
Game was register
if super out print
null
only table Strawberry register
null
for only in
Game was register
for
One Apple super One
public
Apple private join
One Apple super One
in data out print
Game more my
lambda accessible struct public
lambda
in data out print
null
Orange
only table Strawberry register
Over class print Apple
in data out print
if while Orange
null
null
in register Over
One Apple super One
Game more my
register register
more
in data out print
if Banana One Orange
register register
null
out super
somehow public class
Over
Apple more Orange table
null
null
Over class print Apple
null
table
table
register print
super
Over out out function
null
null
in register Over
Strawberry class function
Strawberry class function
register register
register print
null
One table was public
Strawberry Game One Apple
null
Over out out function
null
private function super
null
super
One Apple super One
class data lambda
One Apple super One
super
struct in only
Strawberry Game One Apple
Over out out function
Over class print Apple
Game
somehow class class join
One Apple super One
if while Orange
register register
null
out
null
One table was public
Over out class more
null
if while Orange
only for
somehow out lambda
Orange somehow more
class out only
class data function
Banana function out One
class data function
Over class print Apple
class data function
Apple
Orange private
register register
Orange super Apple
class out only
null
null
data somehow
register register
for only Banana
Apple
Apple
Orange private
class data function
lambda in was
register
Game Game Over
null
Game Game Over
if for Over in
null
One
null
public One Strawberry
my accessible my private
join Apple class
my accessible my private
null
out print private
lambda in join One
null
null
Apple register
lambda in join One
Strawberry if more only
function private while
Apple register
register
Apple more private while
Strawberry if more only
for join
lambda in was
out register Game
null
Banana Over only
Banana Over only
only Over Banana
Strawberry out more out
null
super accessible only
register for
table for if
data
Strawberry super only
Apple
Over
register for
null
print join out
register for
null
data
data
for join
more only
out Strawberry Over super
lambda private data print
struct
more only
null
Banana
Apple register
null
Banana
Banana
register for
for join
out Strawberry Over super
for join
Over One
more only
while somehow private data
Game
more only
join Game print private
data
out register Game
null
Banana
Banana One my
out
print private while
data
out
Over One
data
function
in
null
struct only was
null
null
out
null
Banana
function Apple register
data
Banana
null
Over
Over
function
accessible One public out
null
table
data
Game while
while somehow private data
Over One
out data Game
null
super
super
null
out
Over One
null
Game super
Game while
out
out super private
join was print
Banana
null
null
join Game super Orange
null
in class was
out
struct
null
out
Apple Game public super
Game while
Game while
Over for
Banana
table Strawberry join Game
out data Game
Game only
null
null
Game
function
private super
while
null
Apple Game public super
function
private super
Strawberry if join
Banana
null
private super
null
null
out Game
null
Game
Game only
Over for
class private
null
private super
while somehow private data
table super accessible Strawberry
null
table Strawberry join Game
null
accessible
in table
null
only Orange
while private Strawberry
in table
Banana register One print
private lambda print data
private lambda print data
while somehow private data
Banana
private somehow out
function lambda
while somehow private data
table Strawberry join Game
private somehow out
while public private
null
data Apple
while public private
Game while
Game while
Over super register
accessible
Over super register
in table
Over super register
Banana register One print
while private Strawberry
while somehow private data
in table
Banana only lambda
One lambda One if
join Over lambda if
Banana only lambda
null
One lambda One if
One lambda One if
Banana only lambda
null
Banana only lambda
Strawberry Banana Orange Orange
more join
null
more join
was for lambda
register super
Strawberry
Strawberry
for
for
null
Strawberry
Strawberry
Over super register
table Strawberry join Game
Banana only lambda
null
data accessible function function
while somehow private data
One class
Strawberry
null
Game while
super struct for lambda
One class
Banana register One print
null
accessible if
was function
super struct for lambda
while private Strawberry
null
null
Apple my
somehow Apple
table
Over super register
for
null
Apple my
was for lambda
null
null
One class
Apple my
print
Over super register
null
somehow Apple
if out while
null
accessible somehow private super
table
null
data print accessible
if out while
in
null
register Banana
register
data print accessible
accessible somehow private super
null
register
accessible somehow private super
register Banana
while data
accessible somehow private super
table
super Banana while
my out table
Strawberry table
Over Banana Over only
null
private join
print data Banana
data print accessible
table
was private in somehow
my my Strawberry Apple
my my Strawberry Apple
struct was
null
struct was
Over
Over Banana Over only
null
Over Banana Over only
table
Game Strawberry
Over Banana Over only
Over
struct was
data print accessible
class Game
was private in somehow
class Game
for was One Banana
for was One Banana
was private in somehow
in Orange was Orange
table
was private in somehow
was register data
table
while only lambda
data while
table
data register more
null
null
null
data while
print in super
print in super
null
One One function only
One only
was register data
join
null
One only
struct table table public
Orange if print accessible
data while
register for
Strawberry more Game more
null
null
more struct
was register data
was private class class
lambda
data while
struct Orange
my public my while
data while
register for
more struct
Orange if print accessible
register private somehow
join
null
One One function only
out register Over Apple
lambda
register print
join
register for
null
lambda out join
register private somehow
data while
out Game lambda
register print
Over class Strawberry
register private somehow
Over class Strawberry
public Apple
null
null
out Game lambda
null
more
was register data
private Banana if somehow
null
null
lambda out join
null
public
join
public Apple
public Apple
super data Strawberry Apple
more
was was print function
lambda out join
null
lambda
null
in Orange was Orange
Over my function One
join One
data in
Over
join Orange Over
null
join Orange Over
somehow struct
null
lambda
somehow for register
null
null
Over
Apple join public
in
null
was was print function
null
somehow for register
null
data Game my lambda
in Orange was Orange
accessible data table
null
null
join One
if out
data Game my lambda
super data Strawberry Apple
null
was Banana super
accessible data Strawberry
One register Banana
out register Over Apple
more more
null
super data Strawberry Apple
null
struct somehow
for if while
if out
if out
was was print function
Game print public Strawberry
null
out register Over Apple
was Banana super
Banana
in
Over
null
in
data Game my lambda
Apple for function function
was Banana super
class Banana
out Orange accessible Apple
out register Over Apple
out Orange accessible Apple
register table
struct somehow
null
null
was was print function
Over
class Banana
was register data
Over
private
One register Banana
One register Banana
join for public print
while for while
data Game print register
my for struct out
was was print function
join One data somehow
private join function
register table
out out
out
was register data
One register Banana
private
struct somehow
join One data somehow
out
private join function
public class
null
function
out Orange accessible Apple
function
null
null
join Orange
Over
null
Apple for function function
out in Game only
was
somehow somehow
join lambda print Game
somehow
if Orange
null
null
only
super Apple only data
in Game public
One register Banana
more accessible
struct
Apple for function function
null
Strawberry while for data
null
null
null
struct
Apple
Strawberry while for data
null
struct Strawberry somehow Strawberry
out in Game only
accessible my
join was struct was
null
null
register table
null
function for public class
private Banana
null
null
super table
while accessible
public for Orange Banana
null
One register Banana
data private join
super table
lambda
null
null
Banana
my
accessible for Strawberry
in for public One
Banana
function for public class
Strawberry data Over
for
Over private
function more Apple
One function out Banana
was for lambda join
more accessible
only
out print in only
super Apple only data
null
super table
out
null
Strawberry data Over
Apple for my
Apple for my
out print in only
null
only
null
null
null
private Strawberry Banana
null
Apple for my
data private join
Over private
Over private
null
null
more accessible
null
null
null
while Strawberry join while
while table
my while register data
join more
for
null
my
data somehow
register out somehow Strawberry
Over private
null
in private while accessible
data somehow
null
null
Banana
only
my
lambda
while was
function for public class
null
super table
function more Apple
null
accessible class if while
print
null
my
my only data
function public my in
function Game join
function public my in
null
for table
null
more accessible
for
null
in for public One
more
One register Banana
function class was
in for public One
One register Banana
in for public One
function class was
Banana Apple
join function Apple for
null
Banana Apple
print
Banana super public
function class was
private
somehow
function public my in
table while
join function Apple for
for
null
function class was
private
Apple
more
my only data
public was out
null
Banana Apple
for table
in private while accessible
data
function
null
null
table while
function
for
public Over Strawberry
Apple
public Over Strawberry
for was
table while data
Game table struct join
somehow
null
data
Apple One
private
Over
private
null
my for
my
null
function public my in
null
Strawberry super
null
private
Apple
One
was out Game public
null
null
my
was out Game public
data register class
while
null
data
Game
Game
while
null
while
while
null
null
for was
null
Apple One
only Banana struct out
null
struct register
function class was
null
more
Game
null
accessible
null
private out struct Strawberry
class lambda Over
more Game data
class lambda
my for
while
public in table
Game
null
if function
somehow was while Orange
super only public
null
my
null
while
was out accessible
null
somehow accessible super while
null
private out struct Strawberry
class lambda Over
join struct lambda function
join struct lambda function
class lambda
only print join
my for
while One Banana struct
super was
null
function One
null
private
super was
join struct lambda function
One for data table
Apple
only print join
class lambda Over
print private Strawberry somehow
if function
if function
if function
while One Banana struct
my for
function somehow somehow
data
function Over for
Apple
if function
null
super was
null
function Over for
Game lambda
class lambda Over
null
function One
function Over for
null
class lambda Over
my for
null
data
table more while One
struct my Banana if
Game lambda
null
table more while One
Over lambda Over
null
while
function somehow somehow
private
was
struct my Banana if
public join for
One accessible in for
while
Over lambda Over
One accessible in for
function Over for
null
out Strawberry
my for
struct super in
null
super if One
Apple
private One
data
null
One accessible in for
lambda struct
Over for only
null
Apple
null
more table out
class
more more public lambda
class lambda Over
null
somehow struct
One Orange for
One if for join
public
more register
class
null
One accessible in for
null
Game Game Apple super
private One
super Orange register was
null
private struct in Over
Apple
my for
my for
class lambda Over
data
data
class
super Orange register was
in Game
One Orange for
One if for join
function
null
somehow lambda public
One accessible in for
One if for join
null
null
only Over One
class only for
One
somehow
struct
Game
Strawberry
private struct in Over
One if for join
register
One if for join
Strawberry
for lambda in
out function somehow
somehow Banana while Game
super was was
class only for
register
Game
Game
register Over
null
only Over One
One if for join
only Over One
function while
lambda class if
print more Game
Strawberry in
null
null
null
lambda class if
super more join
Strawberry in
class super Apple print
more Apple super private
null
join print
table more for for
null
function while
null
join print
super class One
somehow accessible Orange
register
super more join
register
for register
private class super
while
super class One
somehow
table more for for
Over Orange One
for register
Orange while private table
for lambda in
null
private struct in Over
null
somehow accessible Orange
private Game print
out out join only
null
out out join only
function while
struct table accessible
super out
null
print Game print
lambda accessible for
Orange while private table
private if for
in private data
super out
null
while
somehow
register
table my
private if for
for print super more
null
Strawberry data
for print super more
Orange while
null
somehow
somehow
null
null
register
somehow
while more somehow
lambda
class
somehow
lambda only accessible
while more somehow
null
Over table class
while
print
null
class
null
print somehow
lambda accessible for
null
print accessible Over
lambda only accessible
private if for
class my out
somehow
null
Over table class
Over table class
Game register
lambda accessible for
while
only Game print lambda
Over Orange One
only Game print lambda
only Game print lambda
Over table class
somehow
private while function struct
out lambda join
null
only
was Over only public
only
somehow
null
null
for lambda in
function in my Strawberry
Orange accessible
was Over only public
null
Orange accessible
data
print Apple
print somehow
class print One
private if for
out table
out table
Orange accessible
was Over only public
struct more if for
Apple somehow register
Game
super
struct print out Game
more for
null
null
One Apple join table
more
was Strawberry Orange
print out private public
was Strawberry Orange
was Strawberry Orange
Game Apple somehow somehow
my only Strawberry
Apple somehow register
accessible
accessible
register
null
somehow Orange table
more
print out private public
more
One Apple join table
in Over
null
if class
more
register
null
super public
somehow Orange table
for private Orange
if class
Over
somehow Orange table
One print
my only Strawberry
One print
Game class Over
in only more
join
One print
null
lambda Apple
more
public register accessible accessible
lambda table One
null
null
data table Apple somehow
null
null
super
while One
my Over
null
my Over
my Over
One Apple join table
null
public register accessible accessible
One Apple join table
null
public register accessible accessible
null
null
only only while
super
null
null
join out my lambda
only only while
null
join
lambda out super class
function print class Orange
function print class Orange
One Apple join table
null
somehow Orange
function print class Orange
somehow Over for public
only only while
somehow Over for public
null
register register
null
null
print out out
One Apple join table
Banana
null
null
somehow somehow
null
private
null
somehow somehow
print out out
class for
only only while
only only while
One Apple join table
One Over
only only while
private
only more
only only while
only more
class
join out my lambda
null
null
null
only only while
class Game
class Game
Orange for
super while data struct
super while data struct
more more
print out out
somehow somehow
null
only only while
lambda
accessible Game in print
null
super while data struct
out out more
null
if data in function
was
null
null
in
One for in class
Banana
was
in
out out more
null
was
only only while
null
null
null
if data in function
was
data join super if
if data in function
super while data struct
if data in function
null
if data in function
super while data struct
null
was
somehow my
was
table table
register Orange
only only while
table table
null
somehow my
was
accessible register Over Game
was
Game Banana more
Game Banana more
was
was
was
null
join accessible Banana
Banana Banana public super
null
Banana Banana public super
null
Banana Banana public super
was my Orange
function
more Strawberry for
function
register out my class
out only Game Over
was table if Apple
null
Strawberry
out Apple was data
my more somehow
my more somehow
my more somehow
null
struct Game accessible
Game
null
null
null
accessible
null
null
accessible
Over join register Apple
while One Orange print
null
null
null
function Strawberry private class
in
register print class class
Orange in table
out was if
public One
table more
function Strawberry private class
null
in
null
null
if Over Orange print
struct was super
Orange in table
null
null
null
null
print private class
print private class
accessible
accessible
null
null
null
register table
in
function function only Orange
null
private in
out was if
accessible
function accessible super table
function accessible super table
register
public my more Game
null
function accessible super table
function accessible super table
only
accessible public
null
accessible public
function function only Orange
was Orange
private in
only out accessible
private in
function accessible super table
accessible
only lambda somehow
accessible public
null
function accessible super table
accessible public
register
only
private in
only out accessible
function Banana
register
more
class
register
class
register
null
register
accessible
function if table
private for
register
data Over my my
Game
private for
null
my private if
null
my private if
only out was
null
null
null
function public data
Orange
null
Game
null
null
Orange data
null
function if table
Game table somehow
Orange
accessible
null
Game table somehow
struct for
null
null
join register Banana private
Game
null
null
struct for
struct for
join lambda
table more Over struct
null
function Apple
private if
table
null
print Banana register
if lambda
Orange data
Strawberry
null
data while
null
Strawberry
data while
table
somehow if more for
out function while struct
null
print Banana register
null
struct for
Game Banana print super
null
struct struct
register
Game Banana print super
struct for
for Orange
register
while somehow class
struct for
Orange data
null
for Orange
in if in Strawberry
Orange data
my function
Game somehow One
in if in Strawberry
while somehow class
in if in Strawberry
private join
my function
my function
null
struct for class
my function
Game somehow One
somehow Strawberry
null
struct for
my function
join
private join
my function
struct for class
out
null
null
Game somehow One
null
null
struct for class
Game Banana print super
null
struct for
while
more Orange
while table my private
my table if Apple
table
while
Game Banana print super
One One out data
while table my private
my table if Apple
struct for
null
Banana somehow One struct
null
only table print
while
join lambda only accessible
Banana somehow One struct
print print was
struct for
only table print
more Orange
Banana somehow One struct
null
null
struct for
more Orange
private
null
private
public out lambda
my
my
out
null
only table print
null
super for
in for register private
super for
struct out out Game
null
null
public out lambda
super for
null
while
table struct out
public out lambda
table lambda for
public out lambda
table struct out
table lambda for
struct out out Game
null
One in accessible
public out lambda
null
table struct out
null
null
more super
function class only
null
more super
only out class Banana
table struct out
table struct out
table struct out
super Game One out
null
table struct out
null
out data
super Game One out
null
super Game One out
for join
Over
Orange Game lambda print
for join
Orange Game lambda print
null
for join
for lambda
for lambda
for lambda
Strawberry only
Strawberry only
null
null
Over function Apple
null
null
Strawberry in table
Strawberry in table
null
null
null
super Over table
super Over table
private
private
private
private
if Game
public
public
was Apple
public was accessible
was
was
Orange my public
null
null
null
Orange my public
null
null
accessible accessible public
null
register Orange register
null
register Orange register
register Orange register
null
null
my Orange Game
my Orange Game
null
null
null
null
null
null
function only
more private lambda
data
data
null
null
null
Banana super class more
null
Game function
table in
print in
table in
null
null
null
Orange out
Orange out
Game if was
Strawberry
null
register out Orange
Banana table Banana
for accessible out
register out Orange
register out Orange
join struct Game
data Banana
null
for while register
join
for accessible out
for while register
in One
in One
for while register
for while register
null
null
for while register
in One
join
for while register
join
join
join
join struct Game
null
join struct Game
function lambda One
function lambda One
function lambda One
null
null
null
Strawberry super
Strawberry super
Strawberry super
out my One
Strawberry super
was
was
was
was
was
null
if only table
in private One
null
null
null
class Orange Apple
private
class Orange Apple
null
Over only
Over register
null
Over register
Over register
only for register Banana
only for register Banana
only for register Banana
if private
if private
null
only for register Banana
only for register Banana
only for register Banana
only for register Banana
public Banana super One
null
null
private for somehow
private for somehow
Orange private
null
more
more
Orange private
Orange private
if public Game lambda
null
Orange private
null
more
null
null
null
super One One
my Game Game Game
super One One
Game lambda Game somehow
join more data
super One One
Game lambda Game somehow
null
if public Game lambda
join more data
if public Game lambda
Game in function
null
Strawberry Orange Banana
Strawberry Orange Banana
if public Game lambda
Strawberry Orange Banana
Game lambda Game somehow
null
struct Banana Strawberry
Game lambda Game somehow
struct Banana Strawberry
struct Banana Strawberry
null
more somehow Game only
join function public
join function public
Banana more
null
null
was Banana in
null
null
function
function
null
lambda more
more print accessible
null
Orange was Over
table class print in
Orange was Over
super join
register Game lambda
more print accessible
Orange was Over
Orange was Over
Game Apple
Game Apple
Game Apple
Game Apple
out table Orange function
null
lambda was join
if while was function
One
struct
was
was
print in print
Over table
print in print
Strawberry super
print in print
print in print
Strawberry super
function data Over Game
null
class
function data Over Game
Strawberry super
Strawberry super
null
function data Over Game
null
null
public
Strawberry super
null
Game if somehow
null
Strawberry
Strawberry
Apple struct function
more Game
my
null
join
data One Banana function
null
data One Banana function
data One Banana function
Strawberry Strawberry function only
Strawberry Strawberry function only
null
public print
Apple class super
public print
Apple class super
Apple class super
out
Apple class super
Apple class super
null
out if
null
null
Apple class super
Strawberry
Strawberry
was print
class
only print
super only private Over
class
register Apple if
register Apple if
out was while more
super only private Over
join register
null
Strawberry Game
Strawberry Game
Banana only more in
null
Banana only more in
join data
super only private Over
super only private Over
null
more
more
more
more
more
more
print Over Orange super
Banana print One
class was in if
class was in if
function data function
null
function
function
null
accessible accessible for
accessible accessible for
null
function
null
null
Strawberry
more struct struct
table
null
class was lambda
table
was struct
null
null
null
public data my struct
public data my struct
null
null
Banana
Banana
Banana
null
only print more
in function out
null
null
null
null
print
null
null
null
One lambda
One lambda
One
null
null
null
null
in somehow function print
in somehow function print
in somehow function print
print Orange
in somehow function print
null
in somehow function print
lambda my somehow
null
null
null
null
null
join
struct while join Over
struct while join Over
struct while join Over
null
null
null
null
null
null
null
was
was
was
null
null
lambda
lambda
null
null
Strawberry only register
more struct
was register
was register
was Game Banana data
class Apple Banana Over
null
somehow
Over One Banana
Over One Banana
null
null
Over One Banana
Over One Banana
Over One Banana
my in
Banana struct while struct
data Strawberry Strawberry Apple
data Strawberry Strawberry Apple
was accessible
null
was accessible
null
null
null
null
null
null
null
Apple data
Apple data
print Strawberry
null
null
null
function public table
null
function public table
null
out data private Banana
private print
in register public
in register public
null
out function Orange
null
null
null
null
null
Game super
for Apple lambda
null
null
null
null
null
null
null
null
null
function join struct my
null
null
join print
join
join
class struct Banana One
null
class struct Banana One
null
somehow register join
null
null
null
null
null
null
private private only
null
Apple class more
Orange join
Orange join
null
null
null
was public
was public
was public
was public
struct lambda
struct lambda
data Apple lambda out
register super function super
print public Orange
null
function Strawberry
null
null
function class
null
null
null
null
class if while
null
data
data
null
data
class more
while
private register join
private register join
null
out Over for
null
was Orange print
out Over for
class
somehow data Over accessible
somehow data more somehow
private more Strawberry more
data more somehow
somehow data more somehow
data more somehow
somehow data Over accessible
Game only
for my join
null
for my join
Game only
out if table
for my join
for my join
null
out Over for
join was Orange Apple
null
null
null
null
data out print
for my join
public struct public somehow
null
null
null
null
public struct public somehow
public struct public somehow
null
struct for
my Game join
class Apple join
null
for
null
null
null
for
class Apple join
class Apple join
Apple somehow
for
Strawberry register lambda only
null
null
null
super my
null
data data
null
super struct
out in lambda
accessible One accessible Orange
null
in for only Orange
class join private
function Over super Apple
null
null
out Strawberry
in for only Orange
class join private
out Strawberry
in for only Orange
accessible join class
accessible join class
Strawberry Over
Strawberry Over
more data
Strawberry Over
if accessible
more data
if accessible
if accessible
null
function function data table
if accessible
print was Game
null
null
in Orange One
null
Apple
null
Apple
null
my
data super my
Orange
register for print join
my
data super my
Orange
Orange
null
null
null
Orange
my
print table somehow
table Apple function
null
for One only in
null
for One only in
null
in join if
in join if
null
Strawberry lambda for
Strawberry lambda for
Over
private
accessible Game register
Over
join was
join was
Over
null
null
null
null
null
null
null
null
null
function
function
function
function
somehow
somehow
null
null
null
function
somehow
for
function
in Banana Over
null
Banana table more
Banana table more
null
null
only super join out
null
for
Over
join Orange print
Strawberry class
public
Orange class more
Orange class more
Orange class more
print lambda
print lambda
Banana register
Banana register
null
Banana register
null
Banana register
for private
for private
for out was data
null
null
for private
for private
null
for out was data
Game in
only struct function Banana
Game in
for out was data
null
null
null
only my
for private
Game in
Apple data
somehow
Apple data
Strawberry Strawberry
null
function register print Banana
function register print Banana
Strawberry Strawberry
One only
function register print Banana
null
function register print Banana
Game Strawberry while struct
table data
for private
for
for
One only
function register print Banana
Strawberry for One my
function register print Banana
while only
null
null
null
if private
function register print Banana
more was Orange print
Game
if private
null
function register print Banana
function register print Banana
if private
lambda in in
Apple more
table data
if private
if private
Apple
Strawberry
lambda in in
class
Strawberry
lambda in in
function register print Banana
Strawberry
Apple
Strawberry
Apple
class print
null
null
null
null
null
somehow super
null
while Banana
while Banana
while
null
private for only register
accessible
for data out
for if
accessible
null
table struct One my
table struct One my
Apple more Banana struct
struct
table struct One my
null
private out
table struct One my
my
Game function print
Game function print
Game function print
register
register
null
One in Apple for
null
null
null
null
null
null
null
null
null
struct in Banana for
null
null
Apple accessible struct
join Game
only super data class
null
class struct lambda
join Game
join Game
null
null
null
null
null
null
null
null
null
in data
null
in data
in data
Banana Banana my
Banana Banana my
Banana Banana my
Orange if
in Orange
null
null
in Orange
for Banana only
null
only Game function
for Banana only
for Banana only
null
Over
only Game function
out if register Game
Over table class more
if
accessible accessible
null
null
null
null
null
was while print Over
if join table Apple
One somehow Strawberry only
null
somehow
if join table Apple
null
out print
while
null
public register lambda somehow
null
null
null
somehow
while
only was
only was
null
somehow
somehow
join out
data for
join out
was register
in
public if Game
was register
null
null
join out
join out
was register
in out super
out Over
more more
Apple more Banana print
null
Apple more Banana print
accessible accessible for
accessible accessible for
out join accessible
more more
out join accessible
null
accessible accessible for
was Banana somehow Orange
Game
struct register struct Banana
only One super private
null
Game for
Game struct if for
null
struct register struct Banana
accessible accessible for
lambda accessible Orange
lambda accessible Orange
Game in
more
out
data Strawberry
null
Game Game struct
while my for
join Over
join Over
join Over
One
table print register
lambda Over
only
data Strawberry
One
data Strawberry
table Game
table Game
null
register was Game struct
data data
private register
table Game
table Game
table Game
table print register
data lambda
was
was
null
null
null
null
Banana only
accessible struct
Over for Strawberry
only somehow
Over for Strawberry
null
null
only somehow
somehow
Over join
only somehow
register accessible lambda
function Game table was
Over join
table
super join
super join
null
table
in Orange join class
function Game table was
null
class
in Orange join class
class
struct somehow while
function Game table was
struct somehow while
struct somehow while
private more register out
null
function Game table was
function Game table was
class
somehow
in
somehow
join super accessible
class
in
class
null
null
null
null
out in was Orange
out
null
class data One
null
Banana lambda public while
super while was
register
null
null
null
lambda function
Banana lambda public while
register
Banana lambda public while
data while
lambda
register
accessible register
null
lambda
null
table Apple
somehow while only
null
somehow while only
null
null
in
Game Apple print lambda
Game Apple print lambda
Banana print
null
Apple One
somehow
null
somehow
null
null
somehow
class more somehow
Apple lambda
somehow
somehow
Apple lambda
Apple lambda
print super
print super
print super
null
null
Strawberry accessible join for
null
null
null
null
Over table was
Over table was
null
Over table was
null
Orange for
null
Over table was
private data for while
super Game print register
private data for while
null
Orange for
super Game print register
super Game print register
null
lambda
null
null
null
null
null
Over data data more
null
null
somehow
null
null
null
null
accessible Over
accessible Over
accessible Over
only
only
null
null
One join
null
null
Over public class if
Over public class if
null
out
out
out
out
out
out
lambda
lambda
null
out was while
null
lambda
lambda
Strawberry
Game lambda
out was while
Strawberry
out was while
null
null
One
One
Strawberry print
null
Apple
function function Apple table
function function Apple table
function function Apple table
function function Apple table
function function Apple table
null
if One function
One more
my
null
One more
One Banana out was
One more
for One Game
null
super register
struct Banana Over
null
if Strawberry private
data private
for One Game
null
data private
for One Game
data private
my
data private
null
data private
data private
my
out lambda
out lambda
null
lambda
null
null
out lambda
struct for
lambda
lambda
class
lambda
lambda
class
null
lambda
Apple in join public
Apple in join public
class
only register class out
lambda
accessible class struct out
Apple Banana if private
only my data
only my data
data Apple in
only my data
class while while
lambda
lambda
while Game struct Strawberry
while Game struct Strawberry
while Game struct Strawberry
null
join register
null
more Strawberry
more Strawberry
more Strawberry
more Strawberry
super lambda public
more Strawberry
null
struct join data only
struct join data only
struct join data only
data class
struct in
struct in
struct in
Banana struct accessible if
Banana struct accessible if
Banana struct accessible if
Banana struct accessible if
in if was lambda
in if was lambda
in if was lambda
print public
in if was lambda
null
null
null
for struct
lambda my
lambda my
my if table
my if table
private
in One out out
in One out out
null
in One out out
in One out out
only
null
only
in One out out
in One out out
null
null
null
null
null
null
Banana join
print
Banana join
null
null
struct
public
Game
public
Game
was super lambda
Apple
Apple
was super lambda
out only
while out
function table super super
Orange
register struct while One
Orange
function table super super
join private join accessible
join private join accessible
function table super super
Orange
null
Game while
out lambda private table
function table super super
Banana Apple
function table super super
for join
null
null
lambda while function Orange
register in accessible if
null
print Orange somehow
null
super Apple
null
super Apple
private super
null
null
Orange
print Orange somehow
One super One
lambda class
function table super super
class struct somehow
Banana Apple
null
accessible register
super Apple
One out my
private super
Over Game
Over Game
Apple Apple my
null
Apple
Over Game
null
Apple
super Apple
class
data Apple Banana
Banana Apple
null
lambda if
public while my if
only Apple
null
was function Game only
null
class out table somehow
Banana register
Banana
register Banana private
null
was function Game only
Over struct class
super print
class out table somehow
Strawberry only lambda
only Banana accessible
Over struct class
register
null
table
table
function table super super
somehow Over Banana somehow
if
null
null
if
accessible
for class my if
super print
null
null
Over struct class
struct Apple out function
while
Strawberry only lambda
while lambda join
null
table more join struct
accessible
struct Apple out function
while lambda join
accessible
super
Strawberry only lambda
Game while private
struct Orange only Orange
null
out out if
Over struct class
One Banana somehow my
super
print One
null
Strawberry only lambda
class only Banana
Strawberry in
more
print One
Banana
null
null
struct Orange only Orange
if while
function table super super
Game Orange
Banana my while
function data
function data
One Banana somehow my
Strawberry function while
only
null
null
null
Over
private
struct was my Banana
Game data
somehow in Orange Orange
Banana my while
if while
Over
null
Strawberry for print
super
table in data
Banana
null
null
function
null
null
Banana
null
class out table somehow
null
null
private my
lambda table while if
class out table somehow
register
Strawberry class Game more
join Apple
Strawberry class Game more
struct function
in Strawberry in was
null
null
Banana
somehow out was register
Strawberry for print
null
somehow somehow
somehow out was register
join Apple
One
Over
register
Strawberry for print
somehow somehow
null
my super
more while
register
Banana register
Banana for lambda register
null
register
null
null
for register
One
Strawberry for print
somehow for data
super
more while
for if
function
Strawberry for print
super more
for if
null
One Orange Orange
null
function
null
out Strawberry
One
super more
class
super more
One Orange Orange
function
null
if join
class
null
for if
was somehow class table
super
in struct
null
function
was Strawberry function in
function
somehow for data
null
null
for if
Banana in only
null
somehow somehow
Orange public
null
null
null
Banana data more join
if join
print Apple
in struct
register
null
null
was private One
in struct super Apple
function
was private One
function
register
super
function
function
Over in
Orange join Strawberry
null
null
was private One
Banana in only
null
somehow somehow
Banana data more join
data Over Apple
null
null
null
null
function
private while print more
was somehow class table
was public
in struct
was private One
was register join
somehow somehow
function
somehow if Apple
One accessible
null
was Strawberry function in
somehow super only
Banana in only
function
table function
function
class join Banana register
register
function
Banana data more join
was Apple
null
null
print Apple
null
class join Banana register
private table Game
data more
Banana in only
was
register
null
table function
One accessible
while
Banana data more join
table table data data
null
super Game table Apple
for
print One
function
null
while
while
function super Strawberry
Banana in only
my One Over
null
null
Banana in only
null
was
function
null
function
null
out Game private super
function super Strawberry
out Game private super
print One
struct more struct lambda
print One
null
function
for class Orange
null
Banana data more join
super Game table Apple
null
accessible class
null
null
null
print
public for more
register data
more
function
register accessible
null
public Game more
register data
Game data private
somehow table function
public for more
register accessible
data Apple in
Apple Apple
register accessible
accessible join private Banana
register function private
null
register
null
register accessible
null
lambda lambda public join
null
null
lambda lambda public join
somehow somehow
accessible join private Banana
accessible join private Banana
data Apple in
null
register
in somehow print
Game out
data
function
somehow while
Game out
function
data Apple in
for Game
join table register somehow
for One Apple Strawberry
for
data Apple
in struct if super
Over Orange Game my
in somehow print
function while Orange register
data Apple in
for Game
null
Orange only
null
super somehow
more
null
register
join table register somehow
table data somehow function
function
null
null
function while Orange register
data Apple in
null
null
null
null
my only table somehow
join table register somehow
join Banana public super
my only table somehow
more Game
Game out
super somehow
function
null
more Game
lambda lambda public join
Strawberry accessible somehow
null
Strawberry accessible somehow
was
register my only was
super somehow
function while Orange register
table One more
null
null
somehow Game accessible function
register
table data somehow function
data Apple
somehow
null
table data somehow function
data Apple in
register
register
register
accessible my Strawberry function
accessible my Strawberry function
data Apple in
table One more
print
for One Apple Strawberry
class Over while Strawberry
for One Apple Strawberry
Strawberry in Apple out
null
Strawberry in Apple out
One accessible public lambda
null
null
Apple register struct super
null
Apple accessible
table One more
super
public
null
public for
register
function while Orange register
register
function while Orange register
null
super
Strawberry in Apple out
my data
null
my data
table One more
function while Orange register
more while table
null
Orange One Game
Orange Game
register
Orange One Game
my Orange Over in
register
if accessible only Orange
null
if
null
null
null
function while Orange register
Apple only
null
null
public for
null
null
Banana my
data only lambda function
Apple out if
Apple only
Apple only
null
out Over
more while table
Apple out if
out super
table One more
null
if accessible only Orange
was class
null
out lambda
if
null
out lambda
if
Orange out my
data
private join was super
null
null
my Over
function data super
was
if
register only Apple function
data
null
out
if accessible if
private join was super
private join was super
data
for
out
register only Apple function
register only Apple function
Over data super One
Over while
public Over super
for
public Over super
only Banana
only Banana
print One Over
only Banana
null
register only Apple function
function
class in Over Orange
function data super
null
function data super
function
Game
function
Game
struct
null
join Orange was accessible
only Banana
function
only Banana
only Banana
join was more
null
out class Banana function
Orange
null
struct
public print Orange Orange
print super class
Apple if
null
super
null
print Apple
out class Banana function
data was
data Orange
null
null
print Apple
print super class
null
my
Strawberry private
join was super
private
Game Apple
super
data Orange
null
was my if
null
print super class
data Orange
Orange class data
Banana Banana out out
super
super
null
null
Strawberry private
table print
while while
null
print super class
print super class
null
data Orange
data Orange
lambda One
null
Orange class data
struct Over
Banana Banana out out
null
only accessible in
Strawberry register register
register
somehow join lambda
null
Over
null
Over
accessible
null
super
only accessible in
Strawberry register register
in One
more Apple
null
register Strawberry my if
super
register Game somehow One
Strawberry register register
out
register Strawberry my if
lambda data my
in One
Over
One class One
null
class out One join
lambda data my
class
register
out
Strawberry register register
lambda data my
class out One join
out only more
super
class
One class One
only private Banana
null
null
print super class
Orange
print super class
null
register accessible
null
somehow
out only more
super
only private Banana
more private my while
more private my while
only private Banana
class
Orange
class
somehow
only private Banana
class
print super
table while
out only more
null
Over accessible data out
private data in One
null
Game Game Over print
print super
Game Game Over print
out only more
register Over One
Game Game Over print
class lambda function for
in
if was in
null
class lambda function for
if was in
data Orange data register
null
join class Strawberry lambda
join class Strawberry lambda
Strawberry for lambda
for
Game Game Over print
Apple Strawberry
print
null
Orange somehow
table
for for if while
in
Strawberry for lambda
lambda One
Strawberry for lambda
print
print
Game Game Over print
for
for
null
null
Game Game Over print
my my my
data join Banana
print
for
public
in
join
Strawberry for lambda
null
register register table Strawberry
null
print
class lambda function for
Banana more Orange
print private register my
private lambda Orange
register for join print
Banana struct
private lambda Orange
if Orange out Orange
null
function register table my
public while Apple
in
table Over join Game
in
table Over join Game
in
struct Game
table struct private my
null
private struct struct
null
Strawberry struct register
only was Strawberry
Apple
Over more for
for super
only was Strawberry
null
Game somehow Over only
null
private struct struct
somehow while was print
accessible
only was Strawberry
register Game
only was Strawberry
for super
null
accessible
null
for somehow out
null
Over Strawberry function function
null
print One
null
for Orange One somehow
for Orange One somehow
for Orange One somehow
for Orange One somehow
null
null
for Orange One somehow
for Orange One somehow
Game super
for Orange One somehow
private data more accessible
Game super
private data more accessible
in
null
while register print
for was only
more print join in
null
data
data
null
data
if only data print
data
data
data
while
super join for Banana
null
null
while register struct
private
struct
struct
table
table
One was public accessible
struct
was class while
table
table
lambda
struct
was class while
was
somehow
null
struct somehow
data
lambda accessible
while register only more
while register only more
while register only more
null
null
null
my was
null
my was
null
null
null
null
out join
function table private
null
null
function
function
null
null
function
function
null
function
null
register out struct
struct more accessible somehow
null
Banana join One in
Banana join One in
Banana join One in
data lambda for
data lambda for
Orange somehow super for
Orange somehow super for
function Over super
Orange somehow super for
function Over super
null
null
join join my
null
function Over super
join join my
my private more
accessible accessible data
super super class Banana
my private more
null
function Over super
function Over super
function Over super
function
Apple Game only for
function
function Over super
function Over super
function Over super
function
my if lambda Strawberry
function
Orange
function
my if lambda Strawberry
my if lambda Strawberry
Orange
null
null
Orange
while
while
while
more while register was
more while register was
lambda
null
lambda
public more One
null
public more One
null
null
null
for
for my Banana
null
lambda struct Over
table
null
for
Over
if
if
private data in for
null
null
if
function super One somehow
function super One somehow
public my
null
data Strawberry out
print accessible
One Orange
class somehow Banana while
lambda only
lambda only
One Orange
accessible table Game if
in register public
my struct Strawberry Banana
accessible table Game if
class
class
One Orange
null
One Orange
One function more more
accessible table Game if
null
accessible table Game if
null
in super print register
in super print register
print
null
print
null
One function more more
class
in One more
in One more
in One more
null
Banana only struct
in One more
print
in One more
Banana only struct
null
One
null
One
Banana was
null
data
null
if
struct private private
table
table
while while Orange
null
more lambda accessible more
for
more lambda accessible more
table
while while Orange
null
null
while while Orange
null
null
lambda struct private only
super Game Orange for
class Banana
while struct Over
null
class Banana
null
only Orange data Orange
lambda struct private only
table
private accessible struct struct
function
table
print
in Strawberry super
function was Game
print Game Over
table
in Strawberry super
public
function was Game
table
public
table
public
function struct Over
print
table
Orange
public
function struct Over
Orange
public
function struct Over
function struct Over
table
One only table register
public
null
table
One only table register
print Game Over
Over Game private Apple
One only table register
if data private
print Game Over
null
public
Apple class private for
null
null
function
while
Apple class private for
print Game Over
One only table register
table
Apple class private for
Apple class private for
Over print print public
print Game Over
in if for
while
function
while
null
more was
data table if
table struct Game
in if for
data table if
private Apple was
data table if
while if
null
print
print
data my Game
data my Game
null
null
data my Game
null
null
in join One
null
public in
null
public in
null
Banana table accessible
Banana table accessible
while out accessible only
Banana table accessible
Banana table accessible
Banana table accessible
while out accessible only
while One
register Over data
table
null
for function only
null
register struct
while One
register Over data
register Over data
null
print register Strawberry
print
null
Game
more struct while somehow
register my
null
while lambda in
lambda in somehow class
private only in
table my class super
lambda in somehow class
register my
table my class super
table my class super
private
private
public struct One lambda
public struct One lambda
public struct One lambda
null
data if One Over
Strawberry
null
Over data Game for
Apple
public struct One lambda
Apple
data if One Over
Orange
more Banana struct
public struct One lambda
Over data Game for
null
somehow Banana Orange Strawberry
function while my
join out join Game
function while my
function Banana
while Banana Strawberry my
somehow Banana Orange Strawberry
somehow Banana Orange Strawberry
print
function while my
Apple Strawberry
function while my
Banana Orange lambda more
if Strawberry
null
print
Apple Strawberry
was in Banana join
null
Apple Strawberry
Over join public One
if Strawberry
public
null
null
table Orange
Apple Strawberry
if
if
null
lambda
struct function
accessible
public register Over table
null
null
Orange
struct function
null
Orange
for super
Orange
more Orange
more Orange
Orange
null
more Orange
null
my join
function data print data
null
if
if
if
Apple more only
data super Over super
null
my lambda Strawberry
null
while Strawberry
public Banana data
data super Over super
data super Over super
was was
null
public Banana data
public accessible somehow
data super Over super
my lambda Strawberry
data super Over super
Strawberry
public Banana data
Strawberry
Strawberry
null
class print accessible
class print accessible
class print accessible
class print accessible
table if One
null
table if One
table if One
null
null
null
super only register
null
null
Strawberry Over struct struct
private
private
while
while
while
while
Strawberry
Strawberry
Strawberry
Over Orange data class
Over Orange data class
Over Orange data class
Game Banana
Game Banana
null
data if for One
One if for
data if for One
data if for One
null
data if for One
in accessible class print
in accessible class print
null
null
null
null
One was Banana
null
Banana only Apple Over
null
null
null
null
null
my Over Over One
Game struct lambda Orange
null
my Over Over One
my Over Over One
Orange Apple Apple
my Over Over One
data out
null
super super print
null
Strawberry if
null
super super print
null
only Game
super super print
more One
if super
more One
if super
if super
null
null
struct in in
null
struct in in
struct in in
struct in in
lambda Over was more
lambda Over was more
null
lambda Over was more
lambda Over was more
null
null
null
register
print
print
print
register
register
public super
null
null
null
in One while
null
null
class data super lambda
null
struct Apple super
struct Apple super
in class table Orange
null
null
class data super lambda
Over Banana
null
Over Banana
somehow super in
class data super lambda
Apple private somehow class
in if print print
in if print print
register register in out
register register in out
null
null
my while struct
Game Banana
null
out
my
my
join
join struct struct only
null
my while struct
join
my
join struct struct only
null
join for Banana only
struct
if private public
if private public
accessible print Game class
accessible if out
struct
null
null
null
struct
struct
struct
struct
private Game One print
public register more
Over
private Game One print
private Game One print
private Game One print
more
null
null
null
was accessible print
private Game One print
null
null
while Banana only was
was
data in
was struct Apple
in Apple only
was struct Apple
public Over
was
null
was struct Apple
in Apple only
table while
Apple for public my
null
data was if struct
Apple for public my
was in
in Apple only
null
was in
in Apple only
data was if struct
register One out accessible
out lambda
data
data was if struct
null
data
print only class Banana
if Apple Strawberry
null
null
print One join somehow
Strawberry somehow struct
data
data
if Apple Strawberry
print Strawberry Strawberry One
register was join
Strawberry somehow struct
struct in
private was
accessible
table for
print for Apple
null
register was join
accessible
accessible
for out join
join print One Apple
public function
Strawberry somehow struct
Strawberry somehow struct
null
for out join
null
register was join
somehow struct
Game
Apple
null
private
struct accessible struct
somehow struct
register while if lambda
only join
Strawberry somehow struct
Over
only join
print One join somehow
null
null
function
only join
null
null
register
null
only join
register while if lambda
Over
function
for print Orange
function
Over
register while if lambda
function
null
in more private
function
in more private
null
for print Orange
for print Orange
for print Orange
null
null
null
null
accessible join my
accessible join my
struct
register lambda Apple
null
only One
Orange Over if Banana
data my
data my
null
One public
Over
table private print
Orange
table Orange
out was
Orange
Orange
public struct private
Orange
super
null
Banana print
somehow more accessible in
somehow more accessible in
somehow more accessible in
Orange
my my Apple
null
data in
somehow somehow data
null
null
Apple
Apple
public out accessible class
null
my my Apple
table
table
table
if Game was lambda
null
join out public
data was somehow super
if Game accessible Game
if Game accessible Game
data was somehow super
Orange somehow table
if Game was lambda
Orange somehow table
null
Apple
private join
private join
if Game accessible Game
if Game accessible Game
Apple
private struct only
One my out
private join
only
null
data struct was
private join
only
out
null
Strawberry public join print
if Game accessible Game
null
null
null
in
public
public
in
Banana One
Strawberry public join print
if Game accessible Game
Strawberry public join print
while my register was
Apple One
while my register was
if Game accessible Game
Strawberry private
for
null
register super
register super
null
null
register super
join if
join if
join if
accessible Apple class
null
null
class
in
Banana
Orange join
only while private
null
null
Orange join
null
Orange join
somehow accessible in
Orange join
function
join if
out
public only in
null
null
my
only
my
null
somehow accessible in
for
One class Strawberry
table Banana Banana
function One for
struct private for
super Banana
super Banana
super Banana
class
class
while Strawberry
class super
somehow Game
struct private for
super Banana
register
while join struct Game
somehow Game
null
null
null
out
more print Orange
null
register
function
register
function One for
function was class
function One for
register
null
register
somehow more
only
only
only
private
private for super class
function
public super only
null
function
only Apple join Game
function
null
function
Strawberry more if super
Apple public Banana
in while if data
function
function
null
more class only
null
private
while more One
function
only
while more One
more class only
function
while more One
out
for
function Banana class
null
function Banana class
private Over somehow only
private
function
print Banana Apple Apple
in while out if
register for data Banana
more out class Strawberry
in while out if
null
class class
register for data Banana
null
null
lambda my if for
null
null
Banana class accessible table
null
somehow somehow super
Banana class accessible table
null
null
somehow somehow super
function data if
null
Orange out Strawberry
null
public
public
public
null
null
private
in if
for only join
null
in if
One Apple more out
my Strawberry join
lambda
lambda
null
null
null
null
struct accessible function accessible
struct accessible function accessible
Over table Over out
Banana
Over table Over out
Over table Over out
Over table Over out
data somehow print Orange
Over table Over out
null
in function join
lambda class only
null
null
lambda class only
in table super
in table super
in table super
table function private data
for function
table function private data
Apple Game register class
table function private data
null
more struct
for function
lambda
in table super
One table accessible somehow
Strawberry somehow was
while function somehow
function was private Apple
in
while function somehow
One table accessible somehow
while while Over register
print data table
table function private data
null
null
while while Over register
class my only
print data table
register out in
null
register out in
register in if
register in if
null
null
register in if
null
out struct out table
private class
null
null
null
accessible Over while data
private class
private class
null
join Over in
null
null
register
accessible while
table Strawberry
null
accessible while
accessible while in my
null
struct register private accessible
private data lambda
struct register private accessible
was somehow
Banana
Banana
null
was private print struct
null
private data lambda
null
private data lambda
was private print struct
was private print struct
super
null
super
null
private data lambda
data private if function
was private print struct
data private if function
was private print struct
null
null
register public Apple for
data data
null
private data lambda
Banana in function more
private struct struct in
more was
was somehow
null
lambda Apple Apple while
private struct struct in
was somehow
Game Game public
Game Game public
null
null
table Apple Orange
Strawberry
One register
Strawberry
lambda Apple Apple while
lambda Apple Apple while
Orange print lambda
only
null
Orange print lambda
data data
null
data data
somehow
public private
only
public private
One register
private more
Strawberry join
print only Game was
accessible for
accessible for
Orange if
null
private
One register
null
only somehow One Over
only somehow One Over
join Over for join
print while somehow for
print while somehow for
my while Strawberry Apple
for
null
for
null
Game for if Over
Game for if Over
Game for if Over
Game for if Over
join register only
null
null
function struct was
in Game
in Game
Apple for more my
Apple for more my
Apple for more my
function struct was
null
super
in Game
in Game
in Game
null
null
super
null
null
null
null
my was
my was
my was
null
null
public while Game
null
null
Apple private
print
print
Banana was Strawberry
function out
print
function out
function out
null
null
somehow
somehow
null
somehow
null
somehow
somehow
Apple Game data super
somehow
null
null
null
null
for function private
Over if in
super
Apple Game data super
null
super
super
null
for table lambda One
in if
null
for table lambda One
Orange One Strawberry
super
my Strawberry
my Strawberry
for table lambda One
public Game accessible
for table lambda One
for table lambda One
for table lambda One
null
struct Game
table private Game
null
null
null
null
out out class table
out out class table
out out class table
One was out if
out out class table
out out class table
print accessible Orange table
out out class table
null
out out class table
out out class table
out out class table
join only Game
out
Apple Banana
Apple Banana
Apple Banana
Apple Banana
out accessible register
Over class super
out accessible register
super
null
while if
somehow class public
more register class print
null
null
accessible
null
more
accessible
function Game
somehow class public
super
super
more
null
null
null
Orange more super Over
null
class while in data
null
my
somehow data struct Strawberry
my
if print Apple
register
register while my
register while my
while public
my
join table class
if print Apple
null
join table class
in
my
accessible for Strawberry
if if struct accessible
register my
my
print
null
my
super
null
Orange accessible for
print
print
null
in Strawberry Orange
Game private Over print
in Strawberry Orange
print
Game private Over print
null
null
join function
join Strawberry function
private Game
struct register
struct register
class
class Banana
join function
class Banana
class Apple if join
class Apple if join
class Apple if join
class Banana
class Banana
class Apple if join
private
if Game lambda Orange
null
null
null
null
null
null
null
null
register
null
null
null
null
null
null
null
Game out join in
function join accessible more
function join accessible more
function join accessible more
function join accessible more
Strawberry table
accessible more Banana more
null
null
null
null
if public public only
null
more Apple private
in
more Apple private
more Apple private
Over print print somehow
more Apple private
null
more Orange
null
null
null
null
struct Strawberry my print
null
null
null
Orange while super
null
accessible class Strawberry
null
only struct public
only struct public
null
null
Strawberry my
function join
Strawberry my
Over lambda out super
private while class public
private while class public
private while class public
function super accessible
null
accessible
accessible
null
Game private was
null
null
null
struct public
while join more somehow
null
null
somehow
somehow
somehow
data
data
data
null
null
null
null
null
null
null
null
null
Orange only Strawberry public
print
Orange only Strawberry public
Orange only Strawberry public
was somehow super Strawberry
Orange only Strawberry public
null
was somehow super Strawberry
was somehow super Strawberry
my for while
Banana while
was accessible
was accessible
print my register One
register
my if data Orange
Orange only for
class Apple
null
class Apple
null
my if data Orange
table
class Apple
class for Strawberry
null
Orange Strawberry Banana
Orange Strawberry Banana
struct my register lambda
struct my register lambda
for was struct One
null
null
function if private
function if private
function if private
function if private
null
null
null
print for Strawberry
print for Strawberry
for
null
for
data
null
data
data
register
register
while Orange out
null
class more
table One data my
class was
in struct Apple join
class was
null
if Strawberry while for
null
if Strawberry while for
join while for accessible
null
null
lambda
lambda
null
null
Apple more data
while
null
null
null
null
null
null
null
null
Over was table
null
Over was table
null
null
One more
Over
One more
struct
null
Strawberry somehow for
only
private Apple print
struct
One more
private Apple print
null
Over
while
public public if table
register table
struct
null
print
function public only
my class while
print
struct
function public only
print
public public if table
function public only
lambda print Banana
Apple register
while
while
function public only
while
Banana
data public data
Game Apple print
my
struct
null
struct
null
Apple Game lambda if
Apple Game lambda if
print was One
null
private
somehow was
lambda
struct
null
join One was Apple
struct
struct
struct
join
join
join
null
table if while
table if while
Game more super One
Apple only Banana only
Game more super One
null
null
Orange while Strawberry
Orange while Strawberry
null
null
while print
null
null
null
null
null
my Strawberry
my Strawberry
null
null
null
null
null
Over out Game
was
Over lambda private struct
was
in
null
null
null
register
register
register
register
Orange data
struct class
super
super
struct class
super
register in
super
data class private
super
table
table
null
null
accessible
null
null
null
my
null
null
null
null
null
register Over more
Strawberry
null
null
null
super data
join if
join if
null
null
null
public
Game out was
Game out was
Game out was
super
null
somehow out was
somehow out was
somehow out was
struct somehow more
struct somehow more
Game out was
join Strawberry super
somehow out was
somehow out was
null
somehow out was
while
somehow out was
somehow out was
only Banana One
out function public for
register class super
null
out function public for
super
null
if
somehow out was
null
in Over
while
register class super
if
Over somehow was Over
out function public for
struct
if
register class super
null
null
if
if
was Over function
out function public for
out function public for
somehow out was
for was private
null
while
null
struct
while print
struct
out function public for
while out while
while
class Orange class Orange
while print
Apple public
class Orange class Orange
class Orange class Orange
while print
out class public for
out function public for
while print
null
join only Orange
struct my accessible
Game function
struct struct class was
out class public for
struct
out class public for
struct
null
null
out class public for
One more join Apple
join only Orange
Game function
null
Game function
class
null
public join
One
One
null
out class
out class
Game Over table Over
One
Apple in table
accessible somehow data
function Over my Orange
One
out
Game Over table Over
Apple in table
One
null
function Over my Orange
null
null
Orange register accessible if
register Apple One
Orange register accessible if
Orange register accessible if
Apple in table
register Apple One
Apple in table
Orange register accessible if
Orange register accessible if
null
Orange register accessible if
Orange register accessible if
null
null
null
null
null
null
Strawberry only for if
Strawberry only for if
null
null
null
null
print out
print out
print out
One was
accessible public
null
while struct super
null
while struct super
data Orange struct if
data Orange struct if
while struct super
my only register for
my only register for
while struct super
data Orange struct if
Game only in
null
more function only
only more One for
private
my only register for
null
only more One for
lambda accessible
class more Game One
class more Game One
null
private register
null
more while in
join table Strawberry
null
null
table function
table function
table function
null
null
null
null
in more Game for
in more Game for
in more Game for
Banana while
register accessible super join
null
struct
null
null
null
null
accessible
Over
register
null
null
null
join data more
null
while for Orange in
null
if
accessible join
null
null
Over
null
if class was was
function function
null
struct register
register out data public
One private struct
struct register
register out data public
null
register
register out data public
null
null
struct private only
null
struct
Banana for only
struct
null
lambda in class
only register for Apple
Over lambda
lambda in class
null
null
Banana for only
null
join
public my
null
Banana for only
public my
public my
Banana for only
join
public my
Apple
table lambda
data Strawberry
null
super One Apple
null
null
somehow
if Game
if Game
register
null
somehow
Strawberry
Strawberry
Strawberry
in only data Banana
null
null
null
super function
super function
was
null
null
print was
if
super lambda table in
was private lambda
was private lambda
was
private struct while register
struct lambda
null
was private lambda
was private lambda
null
struct lambda
private function
null
null
struct lambda
struct lambda
null
for if
for lambda super
struct lambda
for if
for lambda super
class Strawberry print accessible
Strawberry was super
class Strawberry print accessible
class Strawberry print accessible
more somehow
private
somehow more function Banana
null
more
Orange if for print
private
Orange if for print
Orange if for print
Orange if for print
while data out accessible
Banana Apple Apple
null
while data out accessible
Banana Apple Apple
null
Game super Game while
null
was only my
join
was only my
was only my
join
join
Banana Apple Apple
struct out lambda class
function table
Over Banana
Orange join
Orange join
was only my
null
null
struct out lambda class
public Orange while while
public Orange while while
struct out lambda class
null
null
null
if class Over
if class Over
public class
public class
null
private Banana more
join Orange somehow struct
private Banana more
private Banana more
private
struct
print if for more
null
private was for lambda
if accessible public struct
null
private was for lambda
super somehow in One
Banana my class
if Orange in
somehow table
null
in
Over while out Apple
Banana my class
Banana my class
null
public in
Over while out Apple
Over while out Apple
in
Strawberry
my
my
in function class private
null
if Orange in
null
in function class private
struct super accessible for
struct super accessible for
struct super accessible for
struct super accessible for
for in
for in
null
null
null
null
table out struct
table out struct
null
null
null
print only Game Strawberry
print only Game Strawberry
null
function while
null
null
null
null
null
null
super for more
super for more
while
while
struct accessible private more
join Over lambda One
while
super function One out
super function One out
Banana
super function One out
while
while
while
null
while
Banana
null
null
Orange my
private in
private in
for function public
private in
for function public
null
null
register Orange more One
register Orange more One
accessible table Over
accessible table Over
null
null
null
null
null
null
null
table for
null
null
Over One Orange
Over One Orange
Game while my
more somehow Over
null
more somehow Over
null
join more
data print class
join more
null
data print class
data print class
null
One for Over
join more
Banana
Banana
join more
Banana
null
null
join
null
Banana
Game
Game
null
was out private
public
Game
Game
Game
null
class if
class if
public One public class
public One public class
public One public class
accessible Orange Over
public One public class
null
Banana if for my
Banana if for my
register accessible private One
struct
null
Apple out join my
Apple out join my
public Apple One Strawberry
public Apple One Strawberry
struct function Over
struct function Over
struct function Over
data print
only
super
accessible
null
null
accessible
null
null
public register in join
was
was
null
class table
out more
null
class table
out more
was Banana
null
null
null
was Banana
null
null
join class data
join class data
super if join
null
null
null
super Over
join class data
join class data
join class data
join class data
null
out only only Banana
join class data
null
null
out struct was
join class data
Over One
Over One
Over One
Strawberry Strawberry for somehow
Strawberry Strawberry for somehow
public Over class accessible
null
null
null
null
null
Strawberry
Strawberry
Strawberry
private
null
private
private
for Strawberry
super super
super super
public Over
super super
null
lambda only
lambda only
accessible class struct Strawberry
null
null
more accessible
function join my for
function join my for
null
while data
null
function if
function join my for
function if
Over in public
null
function public struct
null
function public struct
null
register Banana while
null
more for Banana Apple
null
accessible join Over print
data function private
public Over
null
register Banana while
struct
register Banana while
register Banana while
more Strawberry was
register Banana while
register Banana while
null
more Strawberry was
register Banana while
register
null
only Over class
struct
struct
Over
Orange Orange table
null
null
null
null
null
print Banana join function
null
null
null
null
table join while out
table join while out
table join while out
table join while out
table join while out
null
null
table join while out
table join while out
One
One
null
null
my struct
my struct
my struct
null
null
was Over private
was Over private
Banana super
null
data my One
table if print more
register register function print
Banana super
register register function print
null
only public
null
Banana super
lambda One was
only public
Apple private was
null
out
only public
lambda One was
only public
struct more more
for only
Apple private was
Game table print
struct more more
Apple private was
null
lambda One was
out in Game
null
function
null
null
out
lambda One was
Game my join
out
function Banana
function
register struct join in
Game my join
null
null
register struct join in
null
only
only
only
null
only
null
null
null
data print public
null
only table data in
Orange in table
somehow for
struct more while somehow
null
null
only somehow super in
null
null
while
struct more while somehow
somehow for
register in for was
public my my Strawberry
register in for was
in struct
struct private
null
in struct
public my my Strawberry
while
null
public my my Strawberry
public my my Strawberry
public my my Strawberry
public my my Strawberry
null
accessible more Over function
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
Banana
Banana
lambda function
Banana
more public
lambda function
null
null
null
null
null
null
lambda
lambda
null
One join if
in data
Game Strawberry if
Over register Orange
Over register Orange
in data
null
Game Strawberry if
null
Over register Orange
null
class
null
null
while somehow
while somehow
only out register
only out register
while somehow
super data print
super data print
while somehow
null
null
super data print
function accessible in out
function accessible in out
only join Apple
function accessible in out
private join data
function accessible in out
function accessible in out
struct was
register One
register One
null
register One
register One
struct was
struct was
null
null
register One
register One
only public function
register One
register
register
class
only public function
while
if Over lambda
super join class
if Over lambda
struct
super
more
somehow out struct while
null
while
null
function for
while
somehow was more
more
more
null
null
join function if
more
struct
more public while more
super
more public while more
struct
null
struct struct Orange lambda
while
null
data struct somehow
null
null
while Game class
null
null
Apple Game One
Apple Game One
while
data struct somehow
while
struct
out Orange
struct
Orange class
for private
null
print only lambda
table
lambda in
for private
null
Strawberry function One somehow
while print
Strawberry function One somehow
struct struct Orange lambda
while print
table
while print
while print
table
table
for private
more super
Strawberry Over
more Apple
Banana my data my
for private
null
more Apple
struct struct Orange lambda
more Apple
more Apple
while
Strawberry Over
struct struct Orange lambda
Strawberry Over
struct struct Orange lambda
super
Strawberry Over
lambda somehow only
Strawberry Over
Game
Game
if
if
Game
Game
null
Game Apple struct
while One more
Game Apple struct
null
null
while
private super
private super
null
private super
private super
private super
more somehow public
private super
null
null
struct data Apple struct
join
for print Orange for
null
null
null
null
null
public
null
register my super while
null
null
null
null
join my somehow Strawberry
join my somehow Strawberry
private struct
private struct
null
null
null
Game more
Strawberry data more register
Strawberry data more register
null
for only Over One
null
accessible Strawberry
null
null
null
null
null
null
null
null
was
was
class while One
null
data
if Apple while if
if Apple while if
null
null
class
class
data Game Game super
data Game Game super
null
data Game Game super
null
null
null
null
null
public function my
Banana somehow out somehow
Banana somehow out somehow
null
null
null
class lambda only
null
class lambda only
class lambda only
lambda lambda more join
my join public was
null
null
null
null
null
null
somehow class out if
null
class was in
my while only
my while only
class accessible struct Strawberry
my while only
my while only
null
null
register struct class
my while only
if public Game
null
public struct was
One for Banana public
One for Banana public
null
lambda
lambda
null
lambda
lambda
Orange data Over
null
null
null
for function print
only public One private
only public One private
only public One private
null
for function print
for function print
null
null
function
null
function
function
for
null
lambda Banana if
in out only for
Game
in out only for
Game
in out only for
public my
Apple in struct class
public my
public my
was while Game
null
was while Game
was Game
was Game
was while Game
was while Game
Strawberry lambda
null
super join class if
super join class if
Strawberry lambda
null
Strawberry lambda
print Over Apple accessible
null
print Over Apple accessible
join only
function
null
print Over Apple accessible
only
super join class if
null
only
print Over Apple accessible
Orange
null
null
function
Banana public
Orange
null
function
Orange
Banana public
Banana public
only
only
only
function
null
function
in
Game
Game
Strawberry register public Game
print One
only table private accessible
null
out more
function
only table private accessible
function struct Game Banana
only table private accessible
only Apple
out more
super print join
only
out more
function
print Orange my somehow
print Orange my somehow
if
data in if accessible
function
function
null
function
only table Over
null
somehow register private lambda
only
only
function Over more One
null
private
data in if accessible
class
struct
struct
lambda Over Over
null
print Orange my somehow
function Over more One
function Over more One
One my function
only Banana out Apple
data in if accessible
null
join
my
null
only Banana out Apple
class more print
class more print
my
Apple
if Banana public if
my was accessible
Banana
if Banana public if
null
null
my
join
join
if Banana public if
only Banana out Apple
null
if join Banana
more only super Banana
my was accessible
my
if join Banana
my
super Orange class
null
null
private super super print
accessible in data
if join Banana
null
lambda table lambda
class more print
if out
null
for out somehow
One
null
null
my Apple
class more print
null
lambda super
more
lambda super
lambda super
more
One
lambda
struct my
more
One
Apple Over
One
null
lambda
Apple out
null
Apple out
One
more
lambda
my more my somehow
Apple out
Apple Over
was in if
Apple Over
register
more
null
Banana
my print join only
was print Game Strawberry
was print Game Strawberry
was print Game Strawberry
my print join only
Banana
in Apple
Apple out
for out super public
null
Apple out
out out Apple
null
Strawberry
null
lambda table
null
Over Game
register
null
null
null
null
null
out out Apple
register table Orange
One class Apple accessible
while for in while
struct was
lambda table
null
Orange Orange
null
One class Apple accessible
Over only out if
register
Apple out function register
null
print
table One super Strawberry
Banana lambda more
table
out out Apple
out public Orange register
out out Apple
table
Orange Orange
null
table
struct
null
in
print
more print struct
if
if
Strawberry
accessible lambda accessible
in
public was my
Strawberry
more Strawberry out was
accessible in struct while
null
null
accessible in struct while
Strawberry function super
was
table
in
null
in
Over if Game register
function private my
null
class
null
null
table data struct
more Over if
struct
null
Over
more Strawberry out was
Orange data Orange
Banana my public lambda
class function
Over
null
more Strawberry out was
while more
Over if Game register
null
print table Orange
class function
more Strawberry out was
in register my while
function private my
while more
null
more Strawberry out was
my join
null
null
null
my
more
struct accessible accessible
function private my
Apple super print
more
somehow One
null
more Strawberry out was
data
Strawberry
data
null
data
my
null
public function function
print
null
somehow One
more lambda in
null
Orange Game table table
One super
null
function Apple my
only in super
somehow One
null
null
print
null
One super
print Over
register
more lambda in
in register my accessible
more lambda in
in lambda
null
more Strawberry out was
null
null
more lambda in
register
One register for somehow
print
null
out
print
null
more Strawberry out was
somehow One
print
register
in
struct super
struct super
lambda my One my
public
more Strawberry out was
for print struct
public
null
for print struct
for print struct
lambda my One my
struct super
Orange public register
more Strawberry out was
register class function
in more register One
only more
null
if
null
if print
out super lambda class
One
lambda my One my
super was register
my more more out
null
Strawberry Banana
null
while
accessible
class for
Game
null
Game
Strawberry Orange function
Strawberry Orange function
register Strawberry
accessible private
null
accessible private
super was register
null
super was register
Orange while was
null
super if more
only Apple out register
null
more accessible
Strawberry Orange function
lambda my One my
Orange public more print
class for
register Strawberry
was
null
class for
null
Orange public more print
if Game
null
Strawberry Orange function
Orange public more print
null
lambda my One my
Orange
my more
Orange
was
accessible data Over Banana
One One
accessible private
print Strawberry
null
Game out
lambda my One my
Game out
null
Orange public more print
null
One One
private
lambda my One my
in print
my public my Orange
null
register print
null
register print
Orange
null
Orange
if
Orange while was
my Banana only
only
somehow Strawberry
null
null
Banana
my Banana only
my public my Orange
Banana
null
Over Strawberry if
public
Banana
super
private in super
data
function in my
if
null
null
public
null
null
lambda One accessible
for function
was
class for
data
somehow
null
my public my Orange
Orange register
for
somehow
Apple lambda
Apple lambda
lambda One accessible
One out class while
somehow
One
Over lambda super while
public my in
Strawberry private function One
function in my
Over lambda super while
somehow for in
class for
null
table Over data lambda
if Orange for more
Apple lambda
null
if Over struct was
null
my Apple if
register print Game print
Apple public Strawberry struct
null
Banana One
my
my
null
accessible table lambda
null
if
null
null
null
class private
struct
struct struct
only accessible Banana register
Over lambda super while
struct
Banana One
my
my
register print Game print
if
more
function more
One while Apple join
null
struct struct
if
in somehow
super out in was
Strawberry private function One
my join
null
join Game
in
Strawberry my
more
more
null
struct public lambda while
super my accessible
null
function more
lambda data Banana private
null
print super was
was Orange
null
register print Game print
struct
private super accessible
my join
One
while
in
register print Game print
null
print super was
Game
Over
function somehow Over lambda
table print was
while
if function
if Over struct was
struct public lambda while
lambda data Banana private
class public
print super was
public for was my
public One print
struct public lambda while
null
lambda
if Over struct was
table Over for
if function
was lambda in
Over class class
table Over for
null
while
null
table print was
Apple Strawberry was
table print was
if function
Strawberry my
struct was
was class
was lambda in
public One print
super
One
public
public
Game public Orange
Over class class
print super was
null
struct public lambda while
was lambda in
table Over for
table Over for
struct
print only lambda
null
class Strawberry
public for was my
null
was class
super more register lambda
Game
lambda data Banana private
null
super
Over class class
for more
somehow print
Game
somehow data
null
public for was my
more Apple struct
if function
class Banana more
public for was my
Game
while Banana Strawberry struct
if struct
null
public if
if struct
while Banana Strawberry struct
in function function
null
lambda was somehow
class One
public if
class Banana more
One
public for was my
null
null
out data while
struct my function out
public for was my
in Over out for
class Strawberry
class Banana more
data
struct my function out
lambda
null
class Strawberry
if
lambda
if struct
data
null
null
more Apple struct
null
join
Over somehow Strawberry
public if
Over somehow Strawberry
null
out
Game
Orange was somehow private
if struct
Banana somehow data
Orange print
null
null
Orange in Strawberry
print was
if struct
Orange print
null
out
out
print was
if struct
null
Orange print
Orange print
more Apple struct
if struct
in Over out for
somehow out
Orange in Strawberry
Banana Strawberry private more
out
null
print was
Over out
class Banana more
null
print was
Banana Strawberry private more
if struct
null
Strawberry more my
function was only
Strawberry more my
Orange print
Orange in Strawberry
Banana Strawberry private more
public my
data for
Banana Strawberry private more
print out class
Over out
Orange print
was table
table class my
null
null
if
data for
null
my join
public my
more my
Banana Strawberry private more
Strawberry more my
only in
null
table class my
print out class
was struct function class
public lambda
Orange print
table class my
while
class out struct
null
Over Apple somehow
public my
null
null
public my
null
Over Apple somehow
public my
while
while
out Strawberry print
somehow
public register for
while
null
null
null
null
for
public my
public register for
in
null
table class my
null
somehow
Orange
in Over out for
while
while table class Over
null
print
accessible
somehow
while table class Over
while table class Over
Apple function
Orange
in Over out for
Apple
for accessible Game Over
super table
somehow
print
my in public
while table class Over
in
function Apple Apple class
my in public
Over
for accessible Game Over
somehow
null
null
null
Apple
Apple function
in
null
my in public
for
null
for Orange Game
while table class Over
null
out
for class
for class
for class
out
null
while join if
Over in if
out
for class
table class my
function super data
out
in for my
print accessible
for class
null
null
only
null
lambda private lambda
only
function join for
print
my while was
null
super table
null
Orange Banana class
print accessible
Orange Banana class
out
null
print
out
more was
print accessible
null
null
print
null
register accessible table private
my while was
register accessible table private
accessible
only
null
print data
more was
Over One lambda only
Strawberry out while data
class accessible data
only
null
lambda private lambda
while lambda Banana class
somehow struct private private
accessible table in
only
null
struct
while lambda Banana class
struct
print
my while was
accessible table in
Strawberry out while data
null
only
super in public
struct
Orange Banana class
only
my Strawberry
only
null
only
only Orange in
null
Strawberry out while data
only
only
out
register
null
struct
null
class
only
One struct
One struct
null
class
register One out Game
One struct
out
null
if
if
null
data Orange out
out
only
in Strawberry my more
Banana somehow
in Strawberry my more
private register in
Banana somehow
null
print Strawberry
if lambda
print Strawberry
struct function data
struct public Game
join Orange out
struct public Game
Strawberry One if super
null
null
in Strawberry my more
One out if print
class
null
lambda Orange Orange
function One out
lambda Orange Orange
table
more my super
join table Banana Game
only register
function One out
only register
join table Banana Game
function One out
Orange
function struct
Orange
table Banana lambda
null
more
null
for function data out
null
was Apple Banana
more Game
null
join register my
function
null
if Banana print
only only super
public
public for
public
null
if Banana print
super
Orange public
Orange public
only only super
super
public
null
more
join register my
somehow register Strawberry if
null
null
out
join register my
in join Orange
function
in join Orange
if somehow
function struct
function struct
public
out
join register my
for function data out
for function data out
while my
super
while my
function struct
Apple
while my
null
null
only only super
Apple
while my
null
only only super
super
public
public while Orange public
was register print was
while struct
while super function print
private was in
out
while struct
null
while super function print
null
my struct Banana
null
data super
null
Orange class register Orange
null
private Over
if more function
while my
private Over
null
Game only One
private was in
Apple
while my
Game only One
private Over
null
public
print
public
print
null
private Over
more Over print Apple
more
super out class
public
private Over
print my
more
more Apple
Over
null
public
accessible accessible
null
null
null
null
out Apple accessible Apple
public
null
null
Over Strawberry while Orange
null
Over Strawberry while Orange
only lambda Strawberry Apple
Over
only lambda Strawberry Apple
null
null
Over Orange
lambda Strawberry
null
null
while my super
somehow super accessible
somehow super accessible
more Over print Apple
somehow super accessible
lambda out register join
Orange was somehow struct
null
Apple private function
print my
somehow super accessible
null
data only lambda class
print my
public Over
Over Orange
null
Banana Over
out class while if
Banana Over
null
data
lambda my
public Over
out class while if
if more
null
my Over Orange was
accessible if
more Over print Apple
accessible if
while my super
null
more Over print Apple
lambda my
if only
register
out Banana
while my super
register
lambda my
register
accessible if
function register
register
somehow print
somehow print
lambda accessible data
print Strawberry was private
print Strawberry was private
One One join join
was
null
print Strawberry was private
null
was
in lambda register
in lambda register
in register
for Apple Banana
was One super Apple
somehow
in lambda register
Orange
null
was
One data Over
was
register Game
only somehow struct while
One data Over
Orange
while somehow join
null
null
only somehow struct while
Orange print
null
register join
null
join super
join super
Game
Game
print struct
print struct
null
for function
for function
for function
for function
null
null
null
table private lambda
class
register
class
Game out more join
Game register Orange was
struct only
print out public Over
null
null
somehow only data accessible
null
null
null
null
null
null
out print
out print
Strawberry function
function data if
super
function data if
super
function data if
function data if
join while
class struct in accessible
join while
join while
in
join while
join while
my Strawberry for in
my Strawberry for in
my Strawberry for in
lambda Game print
null
my Strawberry for in
somehow Strawberry join class
Apple table
Apple in class struct
in table register if
somehow Strawberry join class
accessible
private private table out
if One
if One
private private table out
private private table out
null
print
my while lambda Strawberry
super private Game
Game only accessible if
null
null
super private Game
null
null
my while lambda Strawberry
null
more in accessible print
Game only accessible if
null
Orange while
null
lambda
my while lambda Strawberry
my while lambda Strawberry
my while lambda Strawberry
lambda
null
lambda
while class Orange in
null
somehow
null
more in accessible print
Banana Banana join One
One super struct Game
for in One
struct class Over
One super struct Game
Orange Over class accessible
Orange Over class accessible
Over
Banana was
print
while for if for
Orange Over class accessible
function only was
public join
print register in One
null
null
was Strawberry
lambda Orange more
lambda Orange more
lambda Orange more
lambda Orange more
lambda Orange more
my while my data
out lambda public
lambda Orange more
lambda Orange more
null
accessible Banana
null
private
null
lambda Orange more
private
public
public
public
print if print
lambda Orange more
my
if
null
null
my
null
null
private private Over
private private Over
null
function
null
null
table
table
One
table
null
One
function if lambda
for
Banana Banana accessible
null
join One
for if Over for
null
accessible
null
was out join function
was out join function
Over print out
null
null
null
null
null
while was public Orange
public function Orange Strawberry
Orange
Orange
out Game was
public function Orange Strawberry
Orange
Orange
null
public function Orange Strawberry
public function Orange Strawberry
struct struct only more
Orange
while lambda accessible
Orange
null
lambda
null
One
Strawberry Over private
One
One
Orange
only struct
null
One
super only
public
public
Strawberry private struct for
register function
my out private class
super only
null
my out private class
super only
public
One
my out private class
for
null
public
public
One
my out private class
public
null
more
null
public
null
public
print if
public
Over
super only
Game
private was
null
Game Strawberry
private was
null
Game Strawberry
Game Strawberry
null
super only
null
private was
Over in data
more
super only
null
accessible data Over struct
Strawberry accessible struct struct
One somehow for
private was
out table
public for more function
my private public
super only
Strawberry accessible struct struct
null
null
out table
Strawberry accessible struct struct
null
super only
One Strawberry function print
Over lambda print function
null
One somehow for
join while
One somehow for
table
null
null
my private public
null
my private public
public for more function
Strawberry accessible struct struct
public print
null
super only
somehow print join
Banana
null
was
was
null
super only
null
Banana
public for more function
my in my Banana
Banana
Banana
Strawberry super
my in my Banana
super only
Game my Orange function
Game my Orange function
One
Banana
accessible class my for
super only
Apple while
null
One
null
Banana more function for
One
my in my Banana
public for more function
Orange
One accessible class public
null
my in my Banana
struct Game
Banana more function for
Orange
null
for
my in my Banana
my in my Banana
public print out class
null
Orange
null
my in my Banana
Banana Game Strawberry
Strawberry was
null
public
for
class lambda out
my in my Banana
null
join
only Game public
null
public
my in my Banana
only out table print
join
null
for
Over print for was
null
null
for Banana was
null
struct class
null
only Game public
more Strawberry
only Game public
null
only out for
only Game public
Banana Game Strawberry
only out for
lambda accessible data
more
struct while somehow
more
null
null
lambda
Banana Game Strawberry
null
lambda
null
One more if
Banana Game Strawberry
One more if
Over function
Banana Game Strawberry
table struct table
more Banana
null
table struct table
accessible lambda only Strawberry
table
accessible lambda only Strawberry
table
null
more Banana
struct if
data
null
more Banana
only somehow
for if Over Orange
private Orange
null
private Orange
function
register
private Orange
null
only somehow
only somehow
public
Strawberry only for
public
for more register Over
more was One
Apple my
null
join
private
somehow
more was One
function
public
somehow only register in
private
out print more
out print more
null
somehow only register in
public
null
null
only somehow
somehow only register in
out more was
null
private
private in Game
in
null
Apple my
null
null
in
null
only somehow
null
for public
private in Game
null
print out Strawberry super
private in Game
only Over
null
only Over
null
null
print out Strawberry super
super
null
Over if
null
null
only One data
null
Banana public data
Over if
more Orange if print
data more
null
null
for function more struct
null
data more
null
null
null
super while
function Strawberry lambda somehow
for function more struct
super while
register
struct register was struct
null
my join join
data more
null
null
for
data more
data more
null
null
One Apple join
super while
more somehow
One Apple join
One Apple join
only Apple
somehow
accessible super somehow register
only Apple
Apple
Apple
null
somehow
Apple
Apple
One data table
table
null
somehow
my somehow Banana somehow
super accessible join function
super accessible join function
print in more Over
my somehow Banana somehow
out my
super accessible join function
was
out out public
Apple
Over Apple accessible Strawberry
Apple
was
Apple
null
print private Banana function
Over Apple accessible Strawberry
Over Apple accessible Strawberry
print in more Over
Apple
Over Apple accessible Strawberry
null
was
out out public
Apple
out my
print in more Over
Strawberry was somehow public
was Orange
Over Apple accessible Strawberry
Strawberry was somehow public
null
was
was
null
null
while in
register out super
Strawberry was somehow public
register out super
Game
null
while in
was
null
while
null
while
was
null
while
null
while
null
null
Banana Orange
null
null
struct private
out more Banana
null
struct private
register Game for data
register Game for data
null
null
only print only print
only print only print
only print only print
in One table Over
in One table Over
null
super register accessible
accessible while
accessible while
null
accessible while
join private One function
join private One function
accessible while
Game print my
accessible while
accessible while
accessible while
accessible while
Game join register my
super register accessible
One table super
One table super
null
lambda while
null
private for
private for
private for
Orange
null
Orange
super Apple more my
Game join register my
Game join register my
Game join register my
Orange
Game join register my
null
class Orange
class Orange
only data public
only data public
register Banana
lambda struct
null
lambda struct
lambda Strawberry was table
lambda struct
lambda out One lambda
lambda Strawberry was table
function somehow One while
struct if
struct if
table One
while Over
class Orange
struct
print
struct
lambda Strawberry was table
public while accessible
public join
null
somehow super Game
null
only only if
Over table
struct
lambda Strawberry was table
only only if
data only only
was Over lambda
somehow super Game
Over table
private Banana
null
private Banana
null
super
Over table
null
super
private Banana
for for Game join
data only only
null
struct function
One Orange register
super
somehow
struct function
One Orange register
super
One Orange register
Game somehow register for
null
Game somehow register for
my Apple my Over
my Apple my Over
Apple function somehow Strawberry
null
in
in
register
register
null
data
null
Game out
Over only
null
struct One data
while
struct One data
data register lambda
data register lambda
lambda somehow
private class One
only accessible lambda
data register lambda
function if table
data register lambda
data register lambda
function if table
struct only
Strawberry Over Banana register
Strawberry Over Banana register
null
accessible One for Banana
Orange data data
data print
my data lambda
data
my data lambda
data print
null
Strawberry Over Banana register
null
Strawberry Over Banana register
while join
out lambda function was
for
function struct
was if
while join
null
function struct
out lambda function was
data join while
out lambda function was
was if
Strawberry Apple Orange was
data join while
null
null
somehow join out
for
function
data join while
null
data only Apple function
for join Apple was
for join Apple was
for join Apple was
data only Apple function
for join Apple was
super super data
somehow join out
super super data
while Apple function
public for
null
super out Over
super super data
null
null
public for
public for
accessible Over for Strawberry
accessible Over for Strawberry
null
public for
if
was if
super out Over
data only Apple function
null
data only Apple function
One somehow if
in super
public function function register
One somehow if
null
One somehow if
in super
super
super
One somehow if
data only Apple function
class register
null
One somehow if
One was
null
null
for print lambda Orange
for print lambda Orange
more struct
register Over join
null
null
null
register
table Apple Game
table Apple Game
while
join
print Apple Banana
print Apple Banana
join
while more
print Apple Banana
public out register Over
while more
while more
while more
out private table struct
while more
null
null
null
null
null
register for function Banana
register for function Banana
Strawberry
Strawberry
register for function Banana
register for function Banana
public struct
register for function Banana
out accessible Banana
null
public struct
Banana Apple for Banana
public struct
Banana Apple for Banana
Strawberry Strawberry
table my somehow
struct public if only
null
lambda data while
Strawberry
table my somehow
lambda data while
if Banana was
null
One my private join
my register join
null
null
out function struct table
null
data
null
join
null
class more while out
null
null
null
register table my
for for was Strawberry
for for was Strawberry
only more
null
only more
only more
only more
only more
null
Strawberry
Strawberry
only
only
null
One
One
null
null
null
join while
super if was Strawberry
super if was Strawberry
super if was Strawberry
only private was my
only private was my
for
One struct
join
null
join
in table in One
One Orange
One Orange
for
super function accessible
null
join
more private
for while
for register only Apple
null
for while
for while
join
class
class Banana
class Banana
null
for join Orange
null
One class in
null
print
null
null
null
null
null
null
null
null
null
null
null
function table
null
function table
null
null
print accessible
null
null
print for out private
print for out private
print for out private
null
print for out private
null
super in table
null
null
table print class
class
super in table
null
super in table
print struct Orange
if my
null
null
table print class
table print class
more Banana lambda
null
null
table print class
null
null
struct class
Over
null
Over lambda was
Over lambda was
only in super accessible
join data
null
null
null
null
null
null
null
One struct
data print my Apple
null
data print my Apple
register Over class while
accessible class
in join
null
out Orange
for One
Game Game struct
out Orange
null
Game Game struct
null
One somehow
Banana
struct Orange One One
Strawberry if while
One struct more only
null
Over for was somehow
null
null
null
null
null
null
null
null
null
Apple
Apple
Apple
public accessible for
Apple
null
private join table my
private join table my
Orange was more data
my only somehow
my only somehow
null
null
null
table public
class
null
my only somehow
null
table public
only join Game Game
my only somehow
my only somehow
only join Game Game
struct
while One function Banana
my private my
while class Game private
while class Game private
my private my
my private my
my private my
function
data data more for
function
null
null
null
function
data data more for
null
data data more for
public lambda somehow
public Strawberry print struct
super class more
null
super class more
null
super class more
data super super public
null
data super super public
class out
public lambda somehow
private if Over
public lambda somehow
private if Over
in struct
null
Banana Game
Banana Game
Game join
Game join
somehow super more register
super public
function Over
function Over
table Banana table
join somehow Apple print
Apple
Apple
null
function Over
table Banana table
super Orange data
null
Strawberry Game
null
Over
null
for
public somehow
Strawberry Game
Strawberry Game
Over
Strawberry Game
null
null
for
null
One
data lambda
for
out
out
only somehow accessible print
Over struct
Over struct
only somehow accessible print
only somehow accessible print
register super Apple
if Orange private
if Orange private
null
if Orange private
join One Orange private
table
if Orange private
null
null
my
join Over Banana Apple
my
join Over Banana Apple
join Over Banana Apple
null
join Over Banana Apple
public more function
join Over Banana Apple
public more function
null
Game Banana
null
null
join
null
One
while public accessible
null
register
register
null
null
null
null
null
Game Orange Game
print accessible
null
null
super
for register print One
lambda
null
null
null
data private if accessible
function
for register print One
null
lambda
class if join
out public my public
class if join
null
data private if accessible
lambda
lambda
data private if accessible
data private if accessible
data private if accessible
Strawberry was
data private if accessible
while table register data
data private if accessible
null
data private if accessible
Over register class
data private if accessible
join my
class if while One
lambda print
lambda print
Orange
out register
out register
Game for if print
struct
null
Apple Apple out
Apple Apple out
Apple Apple out
Banana Strawberry
Game function Orange
null
join only
join only
Strawberry lambda
lambda table
null
lambda table
null
Strawberry lambda
table somehow class
null
null
null
null
null
private Apple if Strawberry
null
Orange register
Orange register
Orange register
for only Strawberry data
null
null
Banana while Apple
table public my somehow
table public my somehow
table public my somehow
table print struct Strawberry
Banana while Apple
Banana while Apple
null
Banana private somehow
Banana while Apple
public
null
table print struct Strawberry
null
null
class if One
data register data Strawberry
table print struct Strawberry
One more
null
null
null
join private
in
in
in
null
null
null
null
struct function
struct function
struct function
struct function
lambda
out struct
out struct
public more struct join
private while
register in for join
lambda
public more struct join
null
private while
in
was function out
join if
was function out
register in for join
was function out
was function out
null
in
null
null
more private
Game class private my
null
register in for join
null
null
was function out
join if
was function out
more private
struct data
struct data
null
null
in
null
struct data
print
Apple Strawberry public my
while if
Apple Strawberry public my
in
join if
register in for join
print
only
null
function if
only
print
null
null
function if
only
super only print my
register
Orange Orange
register
Strawberry Apple Banana register
super accessible
Apple Strawberry public my
super accessible
table struct Over table
lambda
lambda
print
null
super only print my
Orange Orange
Game Apple in
Orange Orange
table struct Over table
lambda
somehow while Strawberry
somehow while Strawberry
my
my
Strawberry if for
somehow while Strawberry
Orange
null
lambda data Orange
lambda
lambda
Banana struct join was
null
null
somehow while Strawberry
One join Banana more
accessible struct
accessible struct
Orange Orange
while Orange private
accessible struct
if
accessible struct
null
Banana Orange print print
Banana Orange print print
Game Strawberry register
null
Banana Orange print print
Orange Over print
only Orange class Game
out my private accessible
Banana more my
null
null
only Orange class Game
for table Over
for Orange
Apple
Apple
null
table public print Banana
Apple
Banana Orange print print
null
for table Over
was
more One struct my
struct table
struct table
Apple
Apple
Strawberry Game in One
null
was out register
data while
null
struct table
somehow
struct table
super
super
super
super
class Over if function
super
Banana class
super
null
super
super
Banana class
Banana
in data
null
function Banana Game
null
function Banana Game
in data
accessible Over
in data
One my was
One my was
Strawberry accessible
null
accessible Orange
super
in
super
accessible Orange
was
Strawberry accessible
in
Strawberry accessible
null
Strawberry accessible
Strawberry accessible
Strawberry table Banana data
Strawberry table Banana data
was
Strawberry table Banana data
Strawberry table Banana data
was
was
null
accessible Game join lambda
null
lambda Apple my
join register
null
null
null
register
register
my
in
accessible register private
class
accessible super
null
only for print
accessible super
class
class
data
accessible table
my register Strawberry somehow
data
my register Strawberry somehow
Strawberry only private
null
somehow Orange in
somehow Orange in
somehow Orange in
null
null
in super
in super
null
struct for Orange was
null
my
table
table
table
for more
for more
was
One in Strawberry
One in Strawberry
One in Strawberry
Game lambda
null
null
null
null
null
null
table was out struct
table was out struct
table was out struct
my class
null
Apple
Apple
my class
Apple
super my
Strawberry out while for
Strawberry out while for
Game my if Game
accessible struct
accessible struct
null
Apple
Strawberry Orange
Strawberry Orange
accessible struct
Strawberry Orange
my
my
my Over out more
Strawberry Orange
data class super Over
super
Strawberry class
Strawberry Orange
public for
accessible One Over accessible
table join my One
my Over out more
Strawberry Orange
Strawberry Orange data
null
One while table struct
Strawberry public
Strawberry public
function Strawberry table table
null
function Strawberry table table
Game only out join
struct register lambda
null
in my struct print
null
struct register lambda
function join
function join
null
accessible
Banana
in my struct print
null
accessible
private
class lambda Apple in
accessible
data only
in
class lambda Apple in
accessible
accessible
accessible
in
accessible more while
accessible somehow my print
accessible more while
for was
Strawberry Orange data
Strawberry Orange data
for was
table
Strawberry Orange data
null
Strawberry Orange data
Strawberry Orange data
null
in somehow for out
One data Game Game
null
Strawberry Orange data
my class private
Strawberry Orange data
print
class table
my private only Over
class table
my public
Strawberry private
for accessible super join
Strawberry private
more Apple more
null
my private only Over
accessible my Orange accessible
null
null
null
Game
my
if while Game
more Apple more
for accessible super join
my private only Over
null
more Apple more
more Apple more
my private only Over
more Apple more
more Apple more
null
super
somehow
somehow
data
super
Game
my private only Over
my private only Over
null
Strawberry private
accessible
accessible
super
null
print somehow private
struct Game Over
Game
if while Game
super
was join Banana public
register somehow
super Over was struct
Strawberry while
was join Banana public
function print function
register somehow
super Over was struct
super Over was struct
null
class public Apple
if
table One table Game
null
struct out
lambda my if
struct out
lambda my if
Orange while only
Orange while only
if
lambda class
Strawberry while
out my
Banana
out my
out my
null
if
lambda class
null
private function in
Banana public register public
null
null
Strawberry while
null
Banana class only
accessible Apple
Banana public register public
null
null
Strawberry while
somehow Game
public Strawberry
public
Over table class lambda
Over table class lambda
Banana class only
Strawberry while
accessible Apple
only only class Over
accessible table while
somehow Game
accessible table while
join join private function
null
null
somehow Game
super
Over table class lambda
public struct
public struct
null
while public class
public Strawberry
if if struct
super
if if struct
public Strawberry
somehow Game
super
null
null
in lambda
in lambda
if out my
super
if out my
lambda Banana
public struct
if if struct
Over table class lambda
null
lambda Banana
if out my
accessible register more
lambda Over
if if struct
null
super
if if struct
Apple One somehow
null
null
out public data
if if struct
One public
lambda
out One
while
lambda Banana
public Strawberry
super for somehow
null
lambda
out One
out One
null
if out public
public Strawberry
lambda print
data struct struct
null
null
out data table
lambda
Banana while
while
Over table class lambda
Apple class table
only accessible
null
null
null
One register
Game public in while
Over table class lambda
print if class join
was private
null
One more accessible private
data out
only was if Apple
null
Banana while
null
table Strawberry
Game public in while
null
null
One more accessible private
only Orange private
data out
null
only was if Apple
data out
table Strawberry
Banana while
table Strawberry
null
Over table class lambda
null
Apple only Game Orange
Over table class lambda
null
table Strawberry
data out
accessible join One
lambda private somehow register
lambda Banana
data out
null
lambda
accessible join One
Apple only Game Orange
if out
null
while accessible for
table Strawberry
table
if out
table function
Banana out private if
lambda Banana
if
null
public class while was
more join more if
out register only public
Game Orange was struct
Game Orange was struct
struct print
was out out somehow
only was function table
only while somehow
out print
only while somehow
null
struct print
null
null
if
if
Apple somehow accessible
null
Game Orange was struct
lambda private somehow register
accessible join One
if out
struct print
table somehow class
null
register register
lambda Over table
only while somehow
private Strawberry my out
One
null
only while somehow
was out out somehow
null
lambda Over table
public private Orange table
for
Orange class struct
null
Apple Banana
One
null
null
register Banana
somehow class
was out out somehow
null
was out out somehow
struct print table
null
only while somehow
null
null
null
class lambda
table function
function function private
null
lambda Over table
Game accessible Banana
function function private
Banana struct private if
null
somehow Game
One
One
One out Apple more
only while somehow
null
Over data
somehow Game
null
null
somehow super public Orange
null
Orange super
null
null
One out Apple more
Over data
null
my function data lambda
null
null
data
Game somehow somehow
super
null
null
somehow super public Orange
print
null
null
super
One class Banana
One class Banana
Game somehow somehow
null
null
null
super
null
data my Apple
public register only somehow
Game somehow somehow
null
null
out private
my function data lambda
null
super
super
Over data
Game somehow somehow
Orange super
accessible for
super
null
public was
private
struct
table function class class
private
Apple Banana
null
lambda table Apple
join lambda print
private
super Apple if
null
null
lambda table Apple
Strawberry struct
null
null
super
null
Strawberry struct
Apple Banana
Apple for
super Apple if
table somehow lambda
table function class class
null
Apple Banana
table Game Apple struct
join lambda print
table somehow lambda
null
public super
private super private if
Apple Banana
Apple Banana
private
struct somehow accessible
Game accessible One Banana
while table Apple One
Over join
while table Apple One
Over join
while table Apple One
if Game Apple
private super private if
Orange
if Game Apple
Over join
in Over
only
null
struct somehow accessible
null
null
only
Game somehow somehow
in super
out Orange
Orange
struct somehow accessible
Orange super
Orange
Orange
One somehow
was accessible somehow
super for
in super
null
register accessible
data Over
Game accessible One Banana
while table Apple One
data Over
Orange join class somehow
Orange join class somehow
null
lambda class
register accessible
Over join
data Over
register accessible
data Over
Orange
public accessible
my my data
null
null
Orange join class somehow
null
while
in super
null
lambda
Apple table super my
lambda
null
lambda
in super
class while somehow
lambda
Orange join class somehow
for out Banana
Orange join class somehow
Orange super
One
join while
One
null
Apple
lambda
join while
Banana
Banana
null
more
Orange super
null
somehow was Strawberry
for class
Orange join class somehow
Banana
my Apple
in super
only if
One accessible
One accessible
only super data Strawberry
Orange join class somehow
null
null
in join register
lambda
only if
Game was Over
in join register
null
null
more One
somehow Strawberry while while
only super data Strawberry
in join register
somehow was Strawberry
null
only if
in join register
more One
only super data Strawberry
more
null
null
only if
null
if print function Game
class if Banana register
struct print Game struct
only if
somehow Strawberry while while
accessible in in
accessible in in
class if Banana register
table join
null
somehow register Strawberry
for Apple if more
null
out Apple for One
in public for
public Strawberry more Over
accessible in in
null
my
accessible in in
for Apple if more
only
if struct lambda function
if struct lambda function
for Apple if more
null
for Apple if more
null
public somehow
function register One for
null
null
null
function register One for
struct private table
struct private table
One
null
function register One for
struct private table
function register One for
function register One for
null
null
function register One for
somehow Banana public
One
null
my function if private
print function struct Banana
print function struct Banana
lambda
null
my function if private
my function if private
null
null
my function if private
lambda struct
null
null
null
table
table
null
null
while
null
null
null
null
Game accessible my table
null
Game accessible my table
Orange lambda
null
null
data function table
struct lambda Orange join
null
null
Orange class
null
more in
Apple my
Apple my
struct lambda Orange join
table Apple if
table Apple if
more in
null
class in struct struct
table more data
struct lambda Orange join
Orange class
in Over
table more data
null
class in struct struct
my One
lambda table accessible
lambda table accessible
Orange
accessible
if
null
join for only Strawberry
class in struct struct
join Strawberry while public
in Over
null
struct lambda Orange join
join for only Strawberry
struct lambda Orange join
Orange join function function
while print super register
join Strawberry while public
join for only Strawberry
join Strawberry while public
my print accessible lambda
null
Orange join function function
join for only Strawberry
join Strawberry while public
Orange join function function
my print accessible lambda
null
join for only Strawberry
join Strawberry while public
null
join Strawberry while public
One public
join for only Strawberry
my print accessible lambda
Orange Banana was for
struct lambda Orange join
Orange Banana was for
struct lambda Orange join
null
Orange join function function
Orange join function function
Orange join function function
null
accessible somehow my register
Strawberry my
table only more register
in print for One
null
public super
Game struct somehow table
Game struct somehow table
null
register in public
register in public
register in public
null
in
Strawberry
register
register
null
null
register
null
null
null
only struct Banana
somehow print function only
struct table Strawberry
struct table Strawberry
null
more
more
more
more
null
null
null
lambda
lambda
lambda
null
One register function
for One more
for One more
private Over
out
if table
null
for out Orange table
null
out
Apple data table in
null
null
table while while Over
Apple data table in
null
null
null
Banana was register
data if
data if
Apple for
in for while lambda
more Banana for more
data if
Orange
null
was One Banana Banana
lambda
in join accessible
null
accessible out somehow
Strawberry class was
in join accessible
in join accessible
Strawberry class
Strawberry class
Strawberry class
null
in
data One Apple table
out Apple out
null
null
Game Banana print in
in
null
out if Over
Game Banana more
data if
null
data register print One
if lambda Strawberry
null
for class
in
data if
null
struct private
null
if private Strawberry super
struct private
null
accessible Game Apple join
private super Game Over
in
null
somehow
data my
somehow
null
was was register Apple
in
in
null
table accessible
null
for
for
in
for
table accessible
print super Strawberry struct
in
Apple in
public if
for
was table only Game
Apple in
somehow somehow
Banana lambda One Strawberry
null
Over
Banana lambda One Strawberry
struct print struct class
null
Banana lambda One Strawberry
Over my struct
Banana lambda One Strawberry
Over my struct
Over my struct
was public
null
Over my struct
null
Banana was
accessible class Strawberry
null
if for print function
Over my struct
if for print function
accessible class Strawberry
accessible class Strawberry
Orange print Over register
accessible my in
null
accessible class Strawberry
if for print function
null
accessible my in
somehow somehow
Orange print Over register
somehow somehow
Orange print Over register
null
data
accessible my in
in Over accessible register
public only
public Apple
One my
null
was
private One
null
table
Banana struct function table
join accessible
join accessible
Orange
class
null
Orange
null
null
null
null
null
null
null
in public
function Over
null
function Over
function Over
private function
null
null
table
Game while more join
Game while more join
lambda
null
Banana out
Game Over somehow
null
null
Apple register my
Apple register my
Apple register my
super somehow only
null
null
null
null
in somehow
my
Apple
Apple
null
null
Strawberry table One private
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
for
for only
struct data
register public
for only
for only
register public
register public
null
register public
for
for
register
null
if accessible
lambda was Apple
register
out my for
out my for
more private more while
for
for
print in accessible
for
null
null
lambda was Apple
more in join
null
class somehow while
more private more while
more in join
was
out my for
was
print
null
lambda was Apple
out my for
lambda was Apple
more in join
if accessible
was struct accessible super
more in join
Game table
more in join
Strawberry
null
more
more in join
Game table
Strawberry
null
public public join
Strawberry
private class
One
One
null
One
null
data
null
null
my somehow
Orange private somehow
Orange private somehow
for lambda struct while
for lambda struct while
for lambda struct while
Orange private somehow
Orange private somehow
Orange private somehow
null
null
null
null
public table accessible
public table accessible
lambda Apple
lambda Apple
null
function
print public in my
null
null
in for only Strawberry
in for only Strawberry
in for only Strawberry
in for only Strawberry
function
null
null
in more class Apple
in more class Apple
null
in more class Apple
Banana in while out
null
Banana in while out
Banana in while out
in more class Apple
Banana in while out
null
null
null
null
null
null
null
null
null
Over only
Game Over
null
null
somehow in out
null
null
join private struct Apple
join private struct Apple
null
null
null
struct public super if
lambda join for was
lambda join for was
lambda join for was
struct public super if
struct public super if
null
lambda somehow out
lambda somehow out
accessible out
accessible out
accessible out
accessible out
accessible out
accessible out
null
was One join while
accessible out
null
lambda my while table
lambda my while table
null
null
null
null
function
join in
join in
more register function Strawberry
more register function Strawberry
more register function Strawberry
Game data
Game data
Over print print Banana
null
Over print print Banana
Strawberry struct
Strawberry struct
was
null
One
class Apple more private
null
was Apple only
null
null
out One private join
data
null
if Strawberry
null
Apple
null
Apple
null
Strawberry
Apple
Apple
null
null
null
null
null
for Apple only accessible
null
in join table
function
null
join public
null
null
null
private Over
null
private Over
join data super
data register
only struct accessible
private public
null
null
null
null
function accessible
data
join Orange while
struct for
data
while class data
join Orange while
Orange
more in in join
data in for
was class
struct Over
struct Over
data in for
was class
struct Over
null
was class
table for
null
was class
public Orange function register
was class
null
null
One while
null
Orange
Over print data print
Over print data print
Over print data print
only Game
null
Game for
null
Game for
Game for
null
null
Game for
Game for
null
null
null
private One join accessible
private One join accessible
null
null
public
public
public
null
public
public
null
Apple only print my
null
null
null
super data
print class data lambda
null
struct register accessible
struct register accessible
null
null
null
accessible
accessible
private Over while
was table
was table
was table
null
Strawberry
One
null
One super only
null
out table
out table
out table
One
One
null
public join
public join
more Game accessible join
public join
public join
null
data for for
public join
data for for
data for for
data for for
data for for
null
null
null
null
null
Banana table in
in Game public my
Banana table in
Banana table in
public
Banana table in
null
null
Strawberry Banana super
function class class
in Game public my
null
lambda
in Game public my
in Game public my
Strawberry Banana super
function class class
null
null
null
print somehow Orange
Apple my print
null
my One somehow
null
out if
out if
out if
private for
private for
null
null
private for
private lambda Apple more
private lambda Apple more
null
null
Orange
null
null
function Strawberry in
super in
super in
super in
null
null
Strawberry One for
Strawberry One for
Strawberry One for
null
null
Orange table join lambda
null
super Strawberry print
private
private
private
Banana more super
null
Banana more super
Banana more super
struct out
struct out
struct out
null
for join
null
register
null
if out
null
null
struct Orange Game out
struct Orange Game out
more register register
data out if Over
function join in accessible
data out if Over
null
data out if Over
my
null
lambda struct Banana
in accessible for somehow
lambda struct Banana
in accessible for somehow
lambda struct Banana
in accessible for somehow
only accessible was
my
lambda struct Banana
join my
for Over
my Apple while
my Apple while
my Apple while
null
null
my
null
null
null
private print
null
public Over
private
null
null
null
null
public was One function
null
null
public was One function
join
join
print class Orange super
null
class print Game private
null
if
if
null
null
null
null
null
was class join Strawberry
while class function while
null
null
out public while
out public while
in One my
Game table print table
my Orange data One
my Orange data One
Game table print table
my Orange data One
Game table print table
null
null
super function
super function
Game
null
null
One super Apple
One super Apple
null
null
null
null
table function class out
public data public join
null
null
null
null
join
super Apple
super Apple
super Apple
super Apple
super Apple
Banana only private only
if public print was
in super more Orange
in super more Orange
data join while
join register while while
data join while
data join while
public Strawberry join
null
public Strawberry join
out print
private out
private out
private out
private out
null
register print Apple
null
if out only
null
null
Strawberry One Apple
null
null
null
null
null
Banana private lambda
null
null
null
function print super
Banana only data
Banana only data
for
null
for
null
struct
was Game
for
private
null
Banana only data
null
null
null
null
print table for
null
null
print data Banana
print data Banana
null
my
null
null
was out while accessible
only more
class
my while
print
print
my while
null
null
null
null
null
null
null
Strawberry Strawberry Banana
Strawberry Strawberry Banana
Strawberry Strawberry Banana
my
Strawberry Strawberry Banana
null
null
null
null
null
null
null
null
accessible
somehow in lambda
somehow in lambda
null
null
null
null
accessible data
accessible data
more was while
null
more was while
private my Over while
more was while
null
null
private my Over while
null
private my Over while
private my Over while
print
private my Over while
public for
One in data
One in data
null
public for
Apple super somehow
register
register
register
Apple super somehow
while class
Apple super somehow
while class
only while private
register
register
register
register
only while private
only while private
null
register
register
register
public only join
public only join
table Over
private One One
table Over
accessible print somehow
if lambda public table
in only One
in only One
null
null
null
Orange function my accessible
null
null
Orange function my accessible
null
lambda more
lambda more
print private join
private
while out out
print private join
register
print private join
null
while out out
print private join
null
for in Strawberry was
data
for in Strawberry was
while Game
while table Apple
null
table
accessible Game data
null
Strawberry private struct
my
null
accessible Game data
null
accessible Game data
was if Game print
for in Strawberry was
was if Game print
Game function Orange
Game function Orange
Game function Orange
null
Game function Orange
while function
only
while function
somehow struct struct table
null
function accessible
super
null
null
null
function accessible
null
null
lambda function if
null
null
Over
super out class
super out class
Over
out out Strawberry lambda
Banana was table
Banana was table
Game join my
Over
Game Game public
Game Game public
register class
register class
Over
out out Strawberry lambda
null
out
only Strawberry for accessible
data somehow
null
super out class
null
only Strawberry for accessible
super out class
null
print accessible more public
null
join Banana One in
print accessible more public
lambda only somehow
print accessible more public
lambda only somehow
join Banana One in
lambda only somehow
Strawberry more
null
struct
more
private Orange register
private Orange register
print class was Banana
more
print class was Banana
somehow class
data Apple print Over
accessible
print class was Banana
Strawberry table One
Strawberry table One
accessible
null
was
null
was
print
One
null
function
for private
was only was accessible
Over while
if
for private
One
null
null
for Banana Game
null
for Banana Game
null
null
for Banana Game
Over
join more One out
null
null
Orange
null
Over while
join class
for more class
Banana Over
One table private Orange
null
lambda data join
One table private Orange
somehow
null
for more class
somehow
somehow
Apple Over class
lambda data join
Apple Over class
table Strawberry
super for Over
Over while
only my
Orange
Orange class
Orange
Strawberry
only my
null
lambda data join
null
Over
null
null
more lambda struct join
Over
Orange
super for Over
my was accessible
print
only out accessible
super for Over
One if out
Over
One if out
for Apple Orange
was private Game
register
register was private
register
register somehow
somehow data
register
null
for Apple Orange
Banana public function only
for Apple Orange
register
data out data
register somehow
register
data out data
null
register
super
register
Strawberry Game Orange
for Apple Orange
null
if
lambda
Banana public function only
if
public Orange Apple
Over
if
super public
lambda
class
more
null
null
function
more
null
was
was
null
was
null
in private
null
struct
function
null
if class only
was
data Strawberry in
was
function
function
function
public
join data One while
while super table
struct
while accessible table in
somehow
private
more register
while public
class Apple
if lambda out
null
null
private
class
private
null
was my data
null
more
One super lambda struct
out join private out
for
null
if lambda out
null
class
class
accessible Banana function Apple
class
only
out join private out
Over
Apple
only
super lambda
null
struct struct data
if lambda out
struct struct data
function for somehow
null
super public private struct
if lambda out
while was
Apple
null
for Orange Orange if
function
null
function for somehow
struct struct data
only
table print
for Orange Orange if
null
Apple
null
super lambda
private Over table struct
struct struct data
null
null
super lambda
Strawberry
function
null
null
function for somehow
function
Strawberry
null
Orange accessible
null
struct struct private
null
null
null
struct
Orange accessible
more public
Game
accessible Over struct
null
struct struct private
private Over table struct
more public
more public
null
more somehow Orange
Strawberry public Strawberry
if lambda out
more public
Game
null
register accessible
for Orange Orange if
Apple data table print
null
for out class
function
print was One
more public
null
out public print more
lambda
function in join for
null
Strawberry more while more
Orange accessible
print was One
null
null
accessible Game
lambda my
null
null
Apple
table
print was One
table
accessible Game
more public
while
table Apple struct out
while
null
while
if
Orange accessible
for Strawberry print
function
Over struct Game Game
null
null
Over struct Game Game
private print accessible in
Orange in
Orange in
for Strawberry print
One One
for Apple while my
null
accessible
for Apple while my
if
if
if
null
null
in Game lambda print
in
for Apple while my
null
if only Game Orange
was public my Banana
function was
function if private only
private
print Apple Strawberry One
Over struct Game Game
in join only
in private
struct if while
table Game
in in my super
was public my Banana
for Apple while my
null
print Apple Strawberry One
Apple
null
for Apple while my
null
function if private only
null
null
null
lambda table accessible private
null
null
Apple
somehow
null
print Apple Strawberry One
null
was
print Apple Strawberry One
in join only
table Game
null
out public
in join only
null
only print Apple
null
null
in join only
table Game
in join
in join only
data One was more
in join only
null
super Banana
only for super One
only for super One
while only out
lambda Apple lambda register
only for super One
if somehow super struct
table somehow public function
if somehow super struct
null
Orange in
null
if somehow super struct
null
table Game
null
more while only
table more if super
out public private somehow
null
data
null
for only print
if for
null
public data Banana out
for only print
register Orange
One register function private
register Orange
null
Orange class super
struct One for function
more
for join
table more if super
Orange class super
Game
if for
Game
public data Banana out
null
table lambda while if
table lambda while if
table lambda while if
somehow
null
register Orange
struct if
for in class
register Orange
Game
Game
for in class
super register out
print
public while register
null
null
super register out
Strawberry data only
super data super
Over Banana was
Strawberry data only
out
super was my
struct lambda somehow
struct lambda somehow
private while accessible was
join my was
Banana table Strawberry
Apple
Over lambda
null
somehow function more
accessible
Orange register Over accessible
table while while
accessible
print
null
print
accessible
null
somehow function more
function for
null
super while
table while while
Orange somehow lambda join
somehow register
Strawberry was in
Over if out while
null
Strawberry
null
null
null
null
null
super while
table while while
super while
null
if public
One
super while
null
if public
null
Strawberry
null
Orange Strawberry accessible
super data struct private
data if if
private public Game
somehow
Apple accessible for super
in accessible was
Strawberry
print register struct somehow
Game Game data Over
null
Apple register
function register
print register struct somehow
null
Game in Orange only
while
null
Over
null
null
Over
One
Apple accessible for super
join Game register struct
print register struct somehow
in accessible was
somehow data join
Apple accessible for super
Over
Orange register One
Banana print in
null
function register
Banana
Banana
Over
Over
was only
join Game register struct
Apple super
null
Apple super
function register
Banana print in
Game
null
join Game register struct
Over
Over
Over
Banana print in
was somehow Game Over
null
null
my Orange
super Apple data
super Apple data
in private while data
accessible
was only
Over
Apple super
Apple data out table
null
null
Apple data out table
my Orange
null
was only
in private while data
out Over
function out struct
Apple data out table
null
null
print Game
my Orange
null
One accessible
print Game
print Game
null
struct in my Over
out Over
super
somehow Strawberry join
Orange my
print Game
more while data lambda
lambda table table while
more my
more my
more my
One was
One was
Banana
for function out
my register table
my register table
Strawberry class Apple register
Strawberry class Apple register
class Game print join
null
null
null
join
struct public
my table only
null
null
join
join
join
for Banana
for Banana
null
null
null
null
null
for
for
Orange lambda
Orange lambda
for
Orange lambda
Game Strawberry my Banana
for
Orange lambda
Orange lambda
Strawberry
Strawberry class
Strawberry class
Strawberry class
null
only
Game
Over table lambda data
my
null
null
my
One Banana Over data
accessible private One
null
data
data
in if my class
struct public
null
only join class Game
Game table register
Apple Apple class class
private
public One super lambda
null
my join private Game
in table
private function data
accessible super
null
null
public somehow Banana
null
accessible super
null
null
accessible Banana
class join only if
Game class
public class
null
join more
private if print register
null
private if print register
was register Strawberry
null
Orange One out
if
Apple my table
public public Orange data
Apple my table
Apple my table
private
only Game
null
was Game
Apple my table
private private One
Apple my table
only more class
for
null
null
private private One
null
private private One
null
out data for public
only
only
null
null
null
Apple
super lambda One public
for One super somehow
super lambda One public
Strawberry struct more for
super lambda One public
null
for One super somehow
for One super somehow
for One super somehow
for One super somehow
Banana while struct Banana
private register super struct
class Strawberry
null
register function Apple
null
null
private register super struct
private register super struct
class Strawberry
class Strawberry
class Strawberry
Strawberry was
while
One register for
my Game data
my if if
Banana
One register for
class print
only Banana
only Banana
Apple Strawberry accessible
null
only Banana
class print
Banana
accessible super
null
out Orange only
super
null
null
out Orange only
data Banana Strawberry
null
out Orange only
out Orange only
out Orange only
out Orange only
somehow lambda
accessible
null
accessible
while while
while while
join
null
somehow lambda
accessible
null
function data
table while table
accessible
null
somehow lambda
Apple if
null
null
null
null
while more One struct
only
null
somehow class function
somehow class function
somehow class function
somehow class function
null
somehow class function
null
null
super
null
if register
my table
null
private accessible my Strawberry
private accessible my Strawberry
private accessible my Strawberry
private accessible my Strawberry
null
Apple function in
private accessible my Strawberry
out table struct
Orange for function while
for
null
out table struct
for
private accessible my Strawberry
private accessible my Strawberry
private accessible my Strawberry
null
struct table
null
somehow
null
null
null
null
null
null
null
null
null
private lambda
null
while register private Banana
null
Banana
if somehow One
if somehow One
in
for print Over One
if somehow One
struct private
null
null
if somehow One
struct private
Banana struct somehow
Banana struct somehow
Banana struct somehow
join
null
Apple
null
null
null
super if print in
my One
null
for Game
null
null
null
null
null
null
null
Orange more public
Orange more public
accessible Apple
null
One table
One table
class One Game
null
null
null
Banana
Banana
data Strawberry print Banana
more
if Apple
null
more
for somehow
null
null
if Apple
null
null
One somehow super Over
One somehow super Over
null
null
null
null
Orange Banana
null
null
while private print public
out class function
null
out class function
out class function
only
for
null
only
null
public
null
my private somehow
somehow private only my
my private somehow
null
was
was
data struct print
was
data struct print
Strawberry join while
Strawberry join while
Strawberry join while
null
Strawberry join while
data
Strawberry join while
null
Strawberry join while
Strawberry join while
Strawberry join while
Strawberry join while
Orange One
Strawberry join while
Strawberry join while
Strawberry join while
null
null
null
if my Banana Over
null
null
null
null
null
null
null
null
null
null
null
null
null
null
Banana super in
null
null
Orange function
null
for
for
null
only public class
only public class
null
only public class
null
somehow super
null
Orange public while
null
if super for
if super for
out private
class more
class more
null
class more
accessible
null
null
null
if super Over
if super Over
if super Over
if super Over
struct accessible Over super
if super Over
table Banana data
null
struct my super
struct my super
Banana public Over
Banana public Over
struct my super
null
more
null
if Orange Game function
Apple was
Apple was
Apple was
null
public Over
null
public Over
for table
null
null
lambda
join in
for table
private Banana Strawberry only
function
null
data Banana
function my for more
null
accessible
Over Over
null
Over Over
null
function
table accessible was
data Banana
register
null
Over Over
data Banana
only lambda
if accessible
null
table accessible was
private Banana Strawberry only
null
null
data Banana
function
null
while print Game for
One
null
null
One
null
only Apple
only Apple
null
function
for
function
function
private if was data
null
while private was Over
null
for
for One public in
my Over out
my Over out
my Over out
private if was data
null
accessible Apple Strawberry
Banana Orange Apple print
null
my Over out
function
in data
Banana Orange Apple print
for public was
private Orange in somehow
null
if only print Apple
null
for public was
super somehow print join
out
in print my
table in
accessible Apple Strawberry
print function more Over
Strawberry private out Orange
Banana for Over Over
private Orange in somehow
private Orange in somehow
data class public
Strawberry private out Orange
out
table in
Over Orange if
private Orange in somehow
null
join only register
only One
null
print accessible out
print accessible out
data
while
Strawberry somehow One
null
my function Game super
null
my super public Orange
Strawberry private out Orange
join
my if
join
somehow more if for
null
my super public Orange
my if
while data public
my if
null
One for Banana
more Orange
while data public
Game Orange accessible only
table Game
null
more Orange
null
One for Banana
struct join table Over
more Orange
register while
struct join table Over
